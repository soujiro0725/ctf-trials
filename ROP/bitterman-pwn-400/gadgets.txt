Gadgets information
============================================================
0x0000000000196531 : adc ah, bh ; inc dword ptr [rax + 0x12] ; cld ; call qword ptr [rax]
0x0000000000187288 : adc ah, bl ; int1 ; jmp qword ptr [rax]
0x0000000000195cbc : adc ah, ch ; cli ; jmp rax
0x0000000000196188 : adc ah, cl ; sti ; call qword ptr [rax]
0x00000000001a8520 : adc ah, dh ; out dx, eax ; jmp rbx
0x000000000014697f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001469e9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000fcebe : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000460c5 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000330c8 : adc al, 0 ; movsxd rdx, dword ptr [rcx + rsi*4] ; add rdx, rcx ; jmp rdx
0x0000000000150945 : adc al, 0x13 ; jmp rdx
0x000000000009fce5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000019bc7c : adc al, 0x1a ; add al, byte ptr [rax] ; push rsp ; ret
0x00000000000fd59a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000199890 : adc al, 0x25 ; jmp rsp
0x000000000003040e : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000112a75 : adc al, 0x2b ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000a8f23 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000001998f8 : adc al, 0x34 ; call rsp
0x00000000001b0abc : adc al, 0x42 ; add dword ptr [rax], eax ; rcl byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b10bc : adc al, 0x48 ; add dword ptr [rax], eax ; adc byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000007f9a1 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a6660 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a74b3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009f70b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020a35 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001b18bc : adc al, 0x50 ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], bh ; jmp rdi
0x00000000001a21bc : adc al, 0x59 ; add byte ptr [rax], al ; add al, dl ; in al, dx ; jmp qword ptr [rax]
0x00000000001b31bc : adc al, 0x69 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x0000000000199da8 : adc al, 0x7d ; cmc ; call rsp
0x00000000000f290e : adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000001fc62 : adc al, 0x88 ; mov edx, 0 ; cmovne eax, edx ; ret
0x00000000000f7936 : adc al, 0x89 ; ret 0xdaf7
0x000000000010a918 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000007431e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000001a55bc : adc al, 0x8d ; add byte ptr [rax], al ; jo 0x1a5550 ; in eax, dx ; call qword ptr [rsi]
0x000000000005ace7 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006d8b0 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000e340c : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000147e10 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014653e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000019c4ec : adc al, 0x92 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffa
0x0000000000150941 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000008553a : adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000089d37 : adc al, 0xa ; jmp r10
0x000000000009fe53 : adc al, 0xa ; sub eax, edx ; ret
0x00000000000d7697 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x000000000019b1f0 : adc al, 0xb ; clc ; jmp rsp
0x00000000000cc60d : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000000330cc : adc al, 0xb1 ; add rdx, rcx ; jmp rdx
0x000000000019c460 : adc al, 0xb4 ; cli ; jmp rsp
0x00000000001ad4bc : adc al, 0xc ; add dword ptr [rax], eax ; adc dh, dl ; jmp qword ptr [rcx]
0x000000000019c848 : adc al, 0xc3 ; std ; call qword ptr [rsp + rdi + 2]
0x00000000000362bf : adc al, 0xc6 ; mov qword ptr [rdi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x0000000000035d74 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x00000000000362c3 : adc al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x0000000000035d94 : adc al, 0xc7 ; xor eax, eax ; ret
0x000000000019b650 : adc al, 0xc9 ; clc ; call rsp
0x00000000000b9f32 : adc al, 0xe ; jne 0xb9f2d ; ret
0x0000000000144651 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000002b6b : adc al, 0xe7 ; ret
0x000000000019e569 : adc al, 0xe9 ; call qword ptr [rdx]
0x0000000000172e51 : adc al, 0xea ; test rdx, rdx ; je 0x172e61 ; call rdx
0x0000000000198899 : adc al, 0xee ; call rsp
0x00000000000a7029 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001a9ca1 : adc al, 0xf1 ; jmp qword ptr [rax]
0x0000000000196519 : adc al, 0xfc ; inc dword ptr [rax + 0x16] ; cld ; jmp qword ptr [rax]
0x0000000000198d90 : adc al, 0xfc ; out dx, al ; call rsp
0x00000000000c65e3 : adc al, 0xff ; pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x0000000000172068 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000199365 : adc al, 1 ; add byte ptr [rdx + rax*2], dh ; int1 ; jmp rsp
0x0000000000033134 : adc al, 3 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009f146 : adc al, 7 ; cmp edx, ecx ; je 0x9f147 ; ret
0x000000000009f072 : adc al, 7 ; test dl, dl ; jne 0x9f06f ; ret
0x0000000000198818 : adc al, 9 ; out dx, al ; call rsp
0x000000000019b261 : adc al, bh ; jmp rsp
0x0000000000146b27 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146b91 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000008498 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000022ae8 : adc al, byte ptr [rax] ; mov rdi, r13 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000022396 : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x000000000005b28a : adc al, byte ptr [rax] ; movsxd rcx, dword ptr [rax + rdx*4] ; add rax, rcx ; jmp rax
0x000000000005a9f8 : adc al, byte ptr [rax] ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000063339 : adc al, byte ptr [rax] ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000005ace3 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000103f4 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; call qword ptr [rbx]
0x0000000000010604 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000009404 : adc al, byte ptr [rax] ; or al, 0 ; ret 7
0x00000000000af565 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd8a88
0x00000000000b1c05 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccdb128
0x00000000000b4865 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccddd88
0x00000000000a1b54 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000187398 : adc al, ch ; int1 ; jmp qword ptr [rax]
0x0000000000196360 : adc al, dh ; sti ; jmp rax
0x000000000019b260 : adc al, r15b ; jmp rsp
0x0000000000196535 : adc bh, ah ; call qword ptr [rax]
0x0000000000003aaf : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000115e6a : adc bh, byte ptr [rbx + rax] ; ret
0x00000000000ab6d8 : adc bh, byte ptr [rcx] ; ja 0xab6ec ; cmove rax, rcx ; ret
0x00000000000d2edb : adc bh, byte ptr [rcx] ; ret 0x840f
0x00000000000dfd8e : adc bh, dh ; ret 0x30f
0x000000000011e7f2 : adc bh, dh ; ret 0x8080
0x000000000012d97d : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x0000000000195d45 : adc bl, bh ; jmp rax
0x0000000000034d68 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001019da : adc bl, byte ptr [rbx + 0x2c] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008f915 : adc bl, ch ; call 0xffffffffc3d9826a
0x0000000000089a15 : adc bl, ch ; call 0xffffffffc401236a
0x000000000008b215 : adc bl, ch ; call 0xffffffffc4013b6a
0x000000000018744c : adc bl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000047992 : adc bl, ch ; jno 0x479e8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001960e4 : adc bl, cl ; sti ; call qword ptr [rax]
0x000000000008f245 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000a5c46 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a4fb6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5027 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a4f87 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ff307 : adc bl, dh ; ret
0x0000000000195d44 : adc bl, dil ; jmp rax
0x00000000000a5c45 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a4fb5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000110798 : adc byte ptr [ebp - 0x6af0be25], al ; ret
0x000000000007a5d6 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000114ce1 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000089512 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000047d4b : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000003721d : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000037d49 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x00000000000df4fe : adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x0000000000142f47 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000c72c8 : adc byte ptr [r8 + r9*4 + 0x73], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000007db38 : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000cdd95 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007a666 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a8e9c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a8ebe : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a8efc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a8f7e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000079d0d : adc byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000e7a8d : adc byte ptr [r9 - 0x75], r9b ; push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x000000000010309e : adc byte ptr [r9 - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000c6e6a : adc byte ptr [r9 - 0x77], cl ; call 0xffffffffc2f840ac
0x000000000004758c : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000047d45 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000001085af : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x0000000000083f28 : adc byte ptr [rax + 0x39], cl ; ret 0x4a77
0x00000000000df4ff : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000820e7 : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000013f276 : adc byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000000e757f : adc byte ptr [rax + 0x39], cl ; ret 0x930f
0x00000000001085ae : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x000000000003464a : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x0000000000142f48 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000079b7b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000105ab4 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000131936 : adc byte ptr [rax + 1], bh ; ret
0x00000000000a9e6e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004809e : adc byte ptr [rax + 1], cl ; ret
0x000000000009f706 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000df577 : adc byte ptr [rax + 1], cl ; ret 0x894d
0x00000000000d8aaa : adc byte ptr [rax + 1], cl ; ret 0x8d4c
0x000000000013505d : adc byte ptr [rax + 1], dil ; ret
0x000000000002de7d : adc byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; ret
0x00000000000c72c9 : adc byte ptr [rax + rcx*4 + 0x73], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000a90a4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a8fa2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a8f20 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a96e3 : adc byte ptr [rax - 0x2f], cl ; call 0xffffffffc317243f
0x000000000010a915 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002dec3 : adc byte ptr [rax - 0x73], cl ; add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000094464 : adc byte ptr [rax - 0x73], cl ; jg 0x94481 ; jne 0x94458 ; ret
0x000000000010a6d6 : adc byte ptr [rax - 0x73], cl ; or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010a914 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002d3bb : adc byte ptr [rax - 0x75], cl ; add al, 0xc6 ; ret
0x0000000000020a38 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000009488a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a499c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000073057 : adc byte ptr [rax - 0x77], cl ; jo 0x73075 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000743dc : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x000000000012c04b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000073017 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000089362 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000039133 : adc byte ptr [rax - 0x77], cl ; ret
0x00000000001002b3 : adc byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000007db39 : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000083459 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x00000000000e3558 : adc byte ptr [rax - 0x77], cl ; ret 0x94eb
0x000000000014d4bf : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000165047 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000165083 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a0744 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000005a791 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000d72be : adc byte ptr [rax - 0x7d], cl ; ret 0x4501
0x00000000000876d3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000047db6 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000485e2 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010f3b3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000b80bd : adc byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x00000000001886b0 : adc byte ptr [rax - 0xc], al ; call qword ptr [rax]
0x00000000000fdc61 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000fc89b : adc byte ptr [rax - 1], bh ; ret
0x0000000000196fa8 : adc byte ptr [rax - 4], bl ; call qword ptr [rax - 0x2f0003a7]
0x0000000000196fbc : adc byte ptr [rax - 4], cl ; call qword ptr [rax + 0x10fffc49]
0x0000000000196530 : adc byte ptr [rax], 0xfc ; inc dword ptr [rax + 0x12] ; cld ; call qword ptr [rax]
0x00000000000fc48b : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006c02c : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007aee4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005e807 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000148da1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146d31 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000079d0e : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000007a667 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000000ea1a : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000fbfac : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; jmp qword ptr [rax]
0x000000000003af4c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012d90a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012bf95 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a9b73 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018a10d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006c874 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6c889 ; ret
0x0000000000115252 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000085536 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000044b3b : adc byte ptr [rax], al ; ret
0x00000000000d6cc5 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d6bdf : adc byte ptr [rax], bh ; ret 0x870f
0x00000000000a8e9d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a8ebf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a8efd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a8f7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9081 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000097452 : adc byte ptr [rbp + 0x38], al ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b7500 : adc byte ptr [rbp + 0x39], cl ; ret
0x000000000008f3d8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000094468 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000110799 : adc byte ptr [rbp - 0x6af0be25], al ; ret
0x000000000004b47f : adc byte ptr [rbp - 0x6bf001c0], cl ; ret 0xd284
0x0000000000197240 : adc byte ptr [rbp - 0x736f0004], cl ; cld ; call qword ptr [rax]
0x0000000000195e3c : adc byte ptr [rbp - 0x75be0003], cl ; std ; call qword ptr [rax]
0x0000000000102d77 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000114ce2 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000ab812 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000196f0c : adc byte ptr [rbp - 4], ah ; call qword ptr [rax + 0x10fffc64]
0x0000000000196fb4 : adc byte ptr [rbp - 4], al ; call qword ptr [rax + 0x10fffc46]
0x0000000000196fa0 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x00000000000fbbbf : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x0000000000083590 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008536b : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000470fb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a684b : adc byte ptr [rbx + 0xa4e0202], al ; ret
0x000000000019ea43 : adc byte ptr [rbx + 0xa5b0202], al ; ret
0x00000000001a3b57 : adc byte ptr [rbx + 0xa], al ; ret
0x00000000001a103c : adc byte ptr [rbx + 0xaae0202], al ; ret
0x000000000007a5d7 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x000000000002b7a5 : adc byte ptr [rbx + rcx*4 + 0x34], cl ; ret 0xa7e9
0x00000000001a0970 : adc byte ptr [rbx - 0x16], bl ; call rdx
0x00000000001a9d23 : adc byte ptr [rbx - 0x1ff1b8fe], al ; add dword ptr [rdx], eax ; ret
0x000000000007d632 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000076f07 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x76f21 ; ret
0x00000000000a9840 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000197250 : adc byte ptr [rbx - 0x756f0004], cl ; cld ; call qword ptr [rax]
0x000000000012fa83 : adc byte ptr [rbx - 0x7cb6fc1b], al ; ret
0x00000000000ab85f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x0000000000114e7e : adc byte ptr [rbx - 0x7d], bl ; loopne 0x114e97 ; pop rbp ; pop r12 ; ret
0x0000000000196fc4 : adc byte ptr [rbx - 4], cl ; call qword ptr [rax + 0x10fffc4c]
0x0000000000195d4c : adc byte ptr [rbx], 0xfb ; jmp qword ptr [rax]
0x0000000000196484 : adc byte ptr [rbx], bl ; cld ; call qword ptr [rax]
0x00000000001bb050 : adc byte ptr [rbx], cl ; clc ; call qword ptr [rdx]
0x000000000009aeed : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret 0x3949
0x000000000003cb47 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000b5d1f : adc byte ptr [rcx + rbp - 0x30], al ; mov ebx, dword ptr [rsp + 0x44] ; jmp 0xb5cf5
0x00000000000edd1c : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000006d870 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9002 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a8fe2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000e7a8e : adc byte ptr [rcx - 0x75], cl ; push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x00000000000e86ce : adc byte ptr [rcx - 0x75], cl ; push rsi ; or byte ptr [rax + 0x63], cl ; ret
0x00000000001723c8 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000e86cd : adc byte ptr [rcx - 0x75], r9b ; push rsi ; or byte ptr [rax + 0x63], cl ; ret
0x000000000010309f : adc byte ptr [rcx - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000c6e6b : adc byte ptr [rcx - 0x77], cl ; call 0xffffffffc2f840ab
0x0000000000095079 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000b78fc : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00000000000b787e : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x000000000007f8e7 : adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000e11c6 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4301
0x00000000000877e6 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4920
0x00000000001446d3 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000148277 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001b18c0 : adc byte ptr [rcx - 0xb], bh ; jmp rdi
0x00000000001b0a20 : adc byte ptr [rcx - 0xb], dl ; jmp rax
0x0000000000196f80 : adc byte ptr [rcx - 4], cl ; call qword ptr [rax + 0x10fffc4a]
0x0000000000196fd4 : adc byte ptr [rcx - 4], dl ; call qword ptr [rax + 0x10fffc52]
0x00000000000b8f94 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000187620 : adc byte ptr [rcx], al ; jmp qword ptr [rax]
0x00000000000ac9c9 : adc byte ptr [rcx], bh ; jne 0xac9c6 ; ret
0x000000000012e95d : adc byte ptr [rcx], bh ; ret
0x000000000003ab2e : adc byte ptr [rcx], ch ; ret 0xfa69
0x000000000007d635 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000003ab9e : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fcfb0 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0xfcfe9 ; ret
0x0000000000132e1f : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a295d : adc byte ptr [rdi + 0xa], ch ; ret
0x0000000000110e8c : adc byte ptr [rdi + rax + 0x480a8b00], 0x83 ; ret 0x8d04
0x0000000000196efc : adc byte ptr [rdi - 4], ah ; call qword ptr [rax + 0x10fffc66]
0x0000000000196f90 : adc byte ptr [rdi - 4], cl ; call qword ptr [rax + 0x10fffc50]
0x0000000000196fe4 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc58]
0x00000000001ab630 : adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x0000000000195d88 : adc byte ptr [rdi], ch ; sti ; push rax ; xor bl, bh ; call rax
0x000000000002e2c5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000011917a : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000089513 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x0000000000168128 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000170193 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001458c1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001459b1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001457d1 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d0eb : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bbef : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014cdef : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c4ef : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c7ef : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bee7 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146219 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000145d71 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000145501 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145f51 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001456e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146131 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146041 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145983 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145a73 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145893 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c194 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cd94 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d094 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c794 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c494 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014be8c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455f1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000014951d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014933d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149d15 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148c35 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149b35 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001457a3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455c3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001456b3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001454d3 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000035c43 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x000000000003721e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037d4a : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000edd25 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00000000000481ce : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000000390d : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000150e39 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000005155c : adc byte ptr [rdx + rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000197258 : adc byte ptr [rdx - 0x766f0004], cl ; cld ; call qword ptr [rax]
0x0000000000196f98 : adc byte ptr [rdx - 4], dl ; call qword ptr [rax + 0x10fffc53]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000012844f : adc byte ptr [rdx], al ; je 0x12845c ; ret
0x00000000001a571c : adc byte ptr [rdx], al ; pop rbp ; ret
0x000000000016e87b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001964b8 : adc byte ptr [rip + 0x16f0fffc], dl ; cld ; call rax
0x000000000003ad74 : adc byte ptr [rip + 0x3ff], ah ; xor eax, ecx ; ret
0x000000000014003d : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000016e72a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016dd25 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089e85 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fddb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a519b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a519a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001b5b82 : adc byte ptr [rsi + rcx - 0x70], dh ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001b10c0 : adc byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000196f04 : adc byte ptr [rsi - 4], ah ; call qword ptr [rax + 0x10fffc65]
0x0000000000196f78 : adc byte ptr [rsi - 4], al ; call qword ptr [rax + 0x10fffc47]
0x0000000000196fcc : adc byte ptr [rsi - 4], cl ; call qword ptr [rax + 0x10fffc4f]
0x00000000001a9d80 : adc byte ptr [rsi], 0xf1 ; jmp rax
0x0000000000034b58 : adc byte ptr [rsi], dl ; add byte ptr [rdi], cl ; sub cl, al ; ret
0x000000000003ad9a : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000197248 : adc byte ptr [rsp + rdi*8 - 0x3746f01], cl ; call qword ptr [rax]
0x0000000000196f14 : adc byte ptr [rsp + rdi*8 - 1], ah ; nop ; movsxd rdi, esp ; call qword ptr [rax]
0x0000000000196f88 : adc byte ptr [rsp + rdi*8 - 1], cl ; nop ; cld ; call qword ptr [rax]
0x0000000000196fdc : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbp ; cld ; call qword ptr [rax]
0x00000000000ba5ea : adc byte ptr [rsp - 0x10], al ; ret
0x00000000000491bf : adc byte ptr [rsp - 4], al ; ret
0x0000000000049205 : adc byte ptr [rsp - 8], al ; ret
0x000000000014c197 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001ad3b0 : adc ch, 0xf3 ; call qword ptr [rbx]
0x00000000001ad3f0 : adc ch, 0xf3 ; call qword ptr [rsi]
0x00000000001ad430 : adc ch, 0xf3 ; jmp qword ptr [rcx]
0x0000000000112bbe : adc ch, byte ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000001960e8 : adc ch, cl ; sti ; call qword ptr [rax]
0x00000000000bb31d : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bb29f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000c72cd : adc cl, byte ptr [rax + 1] ; ret
0x000000000002e322 : adc cl, byte ptr [rax - 0x75] ; push rdx ; mov rax, qword ptr [rdx + rax*4] ; ret
0x000000000002e2f2 : adc cl, byte ptr [rax - 0x75] ; push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000009ff8d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fe6e8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000010c2f5 : adc cl, byte ptr [rax - 0x7d] ; ret
0x000000000009a6a9 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000089a05 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000000defe9 : adc cl, byte ptr [rbp - 0x6bf01190] ; ret
0x00000000000b7676 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00000000000485da : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000073b9f : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x0000000000095f74 : adc cl, ch ; ret
0x000000000011da4a : adc cl, dh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000019aae9 : adc dh, bh ; call rsp
0x000000000008f2e4 : adc dh, bh ; ret
0x00000000000faa0b : adc dh, dh ; ret
0x000000000012c76f : adc dh, dh ; ret 0x7401
0x00000000001ad4c0 : adc dh, dl ; jmp qword ptr [rcx]
0x00000000000022d7 : adc dh, dl ; ret
0x0000000000196534 : adc dil, spl ; call qword ptr [rax]
0x00000000001a04c9 : adc dl, ch ; jmp rcx
0x0000000000196184 : adc dl, cl ; sti ; call qword ptr [rax]
0x000000000008309a : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x0000000000096173 : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000006dc13 : adc dword ptr [rax + 0x39], ecx ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x0000000000047f44 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000082c25 : adc dword ptr [rax + rax], esi ; xor edi, edi ; call qword ptr [rax]
0x00000000000754f5 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000048cb0 : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x00000000001733ab : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007ed65 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000114f3b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x00000000000d4adc : adc dword ptr [rax - 0x7d], ecx ; ret 0x3901
0x0000000000089517 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x000000000009bfaf : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000b7881 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000000000014a73b : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000019da55 : adc dword ptr [rax], eax ; add byte ptr [rax + 0x53], ch ; std ; jmp qword ptr [rdi]
0x0000000000146cc7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c39 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000009f1a : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000017334b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x00000000000655d7 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000000000002a444 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006d0de : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006de9d : adc dword ptr [rax], eax ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000006d8ac : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x0000000000006b6c : adc dword ptr [rax], eax ; verw word ptr [rcx] ; ret 0x18
0x0000000000123bc3 : adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000003af22 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000121093 : adc dword ptr [rcx + 0x2a], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000ed1d6 : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4808
0x000000000013b8ee : adc dword ptr [rcx], eax ; ja 0x13b922 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000010c5a6 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000034734 : adc dword ptr [rdi], ecx ; ret
0x00000000000346fd : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034a82 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x000000000019bb4d : adc dword ptr [rdx], eax ; add ah, ah ; xchg eax, ebx ; stc ; jmp rsp
0x00000000001277e7 : adc dword ptr [rsi], 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034b33 : adc dword ptr [rsi], edx ; add byte ptr [rdi], cl ; sub cl, al ; ret
0x00000000000e30e4 : adc dword ptr [rsp + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe3087
0x0000000000146cc6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a9e6a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000001964b9 : adc eax, 0x16f0fffc ; cld ; call rax
0x0000000000196479 : adc eax, 0x1740fffc ; cld ; jmp qword ptr [rax]
0x000000000017336b : adc eax, 0x253758 ; je 0x17337a ; ret
0x0000000000140567 : adc eax, 0x284f84 ; add rsp, 8 ; ret
0x0000000000137889 : adc eax, 0x291bf2 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012dde2 : adc eax, 0x295d99 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010905f : adc eax, 0x2bb25c ; je 0x109070 ; pop rbp ; ret
0x00000000000ffb3e : adc eax, 0x2c788d ; add rsp, 8 ; ret
0x0000000000089712 : adc eax, 0x33a831 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000088801 : adc eax, 0x33e25a ; add rsp, 0x18 ; ret
0x000000000003ea03 : adc eax, 0x358d4800 ; ret
0x0000000000136a22 : adc eax, 0x3619 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000366fd : adc eax, 0x38d98a ; ret
0x000000000002e606 : adc eax, 0x395915 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002d359 : adc eax, 0x3988bf ; ret
0x00000000000aaafa : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000019939d : adc eax, 0x45c40001 ; int1 ; call rsp
0x000000000002ebbf : adc eax, 0x4634800 ; mov cl, byte ptr [rax + 1] ; ret 0xe2ff
0x00000000000f6247 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000013382d : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x00000000001ade8d : adc eax, 0x59700001 ; stc ; call qword ptr [rax]
0x00000000001ade4d : adc eax, 0x59a00001 ; stc ; call qword ptr [rax]
0x000000000002061f : adc eax, 0x5d003a3c ; pop r12 ; ret
0x00000000000a5948 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000002e607 : adc eax, 0x64003959 ; mov qword ptr [rdx], rax ; ret
0x00000000000a705c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x0000000000146851 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000655b9 : adc eax, 0x83490000 ; rol byte ptr [rcx + rax*2], 0x83 ; ret
0x00000000001ade6d : adc eax, 0x83e00001 ; hlt ; call qword ptr [rax]
0x00000000001ade2d : adc eax, 0x84100001 ; hlt ; call qword ptr [rax]
0x00000000001adde5 : adc eax, 0x84180001 ; hlt ; call qword ptr [rsi]
0x000000000002b197 : adc eax, 0x890005eb ; ret 0x8d48
0x000000000019bbdd : adc eax, 0xaf940002 ; stc ; call rsp
0x00000000000aadfa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000004a3ae : adc eax, 0xf2014c00 ; call qword ptr [r11 + rax*8]
0x000000000006f8d8 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000655ac : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014a49e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a59 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000090da : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004b478 : adc eax, dword ptr [rbx - 0x4ef43] ; call qword ptr [rax]
0x00000000000eace5 : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x00000000000da332 : adc eax, dword ptr [rcx] ; rcl cl, 1 ; call 0x42d02c83
0x00000000000a1b58 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014be8f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000047309 : adc eax, eax ; ret
0x00000000000bb498 : adc eax, ebp ; ret 0xf63f
0x0000000000047446 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000183385 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001183d0 : adc ebp, ebx ; ret 0x1f0f
0x0000000000044ba9 : adc ebx, dword ptr [rip + 0x39480038] ; ret
0x000000000013ce35 : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000003d937 : adc ecx, dword ptr [rax + 0x63] ; ret 0x8348
0x000000000013d923 : adc ecx, dword ptr [rax - 0x39] ; ret
0x000000000007d5dc : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000fc32c : adc ecx, dword ptr [rax - 0x7d] ; lock and byte ptr [rax - 0x77], cl ; ret
0x0000000000024a41 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009c765 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ab4c4 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000002531f : adc ecx, dword ptr [rax - 0x7d] ; rol dword ptr [rax + rcx*2], -0x7d ; ret
0x0000000000055757 : adc ecx, dword ptr [rcx + rax - 6] ; call qword ptr [r11 + rax*8]
0x00000000000b7e76 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000a1d24 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a1d44 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a1d64 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a1bae : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000704ca : adc ecx, ebp ; add dword ptr [eax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000da321 : adc ecx, edx ; call 0x42d02c6e
0x00000000001862ec : adc ecx, esp ; in eax, dx ; call rsp
0x0000000000188448 : adc edi, -0xd ; jmp qword ptr [rcx]
0x00000000001738a9 : adc edi, dword ptr [rdx + rbp*8 + 0x1f0fff] ; ret
0x0000000000195d4d : adc edi, ebx ; jmp qword ptr [rax]
0x000000000019b7a1 : adc edi, ecx ; jmp rsp
0x000000000019bf01 : adc edi, edx ; jmp rsp
0x00000000001b6581 : adc edi, esi ; call qword ptr [rcx]
0x00000000001964b5 : adc edi, esp ; call qword ptr [rax]
0x0000000000196495 : adc edi, esp ; inc dword ptr [rax + 0x15] ; cld ; jmp qword ptr [rax]
0x00000000001964d5 : adc edi, esp ; jmp rax
0x0000000000082a41 : adc esi, dword ptr [rax + rax] ; mov rdi, rbx ; call qword ptr [r15]
0x000000000018489e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000ad3f4 : adc esi, dword ptr [rcx + rcx - 0x77] ; ret 0xc5eb
0x0000000000137963 : adc esi, eax ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001b6641 : adc esi, edi ; call qword ptr [rax]
0x000000000007027b : adc esi, esi ; ret 0x7520
0x000000000007d091 : adc esi, esi ; ret 0xf02
0x0000000000116d6d : adc esi, esi ; ret 0xf20
0x00000000001964d1 : adc esp, edi ; inc dword ptr [rax] ; adc edi, esp ; jmp rax
0x00000000001964b1 : adc esp, edi ; push qword ptr [rax] ; adc edi, esp ; call qword ptr [rax]
0x000000000014c072 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000008f244 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000019b7a0 : adc r15d, ecx ; jmp rsp
0x0000000000148bc0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004a3ad : adc rax, -0xdfeb400 ; call qword ptr [r11 + rax*8]
0x0000000000047445 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001b6598 : adc rdi, rsi ; call qword ptr [rcx]
0x000000000008f2e3 : adc sil, r15b ; ret
0x00000000001ade8b : add ah, ah ; adc eax, 0x59700001 ; stc ; call qword ptr [rax]
0x000000000019ef8b : add ah, ah ; add byte ptr es:[rax], al ; add byte ptr [rsi - 0x17], ah ; jmp qword ptr [rcx]
0x000000000019824f : add ah, ah ; fsubr st(3) ; call rsp
0x00000000001abd8b : add ah, ah ; hlt ; add byte ptr [rax], al ; mov al, 0x8a ; call rdi
0x00000000001af470 : add ah, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ab68b : add ah, ah ; in eax, dx ; add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x0000000000198747 : add ah, ah ; int1 ; in eax, dx ; call rsp
0x000000000019c2af : add ah, ah ; mov edx, edi ; jmp rsp
0x000000000019be6f : add ah, ah ; or edx, edi ; jmp rsp
0x00000000001993e7 : add ah, ah ; push rbx ; int1 ; call rsp
0x00000000001a8c8b : add ah, ah ; ret
0x00000000001a8b8b : add ah, ah ; ret 0
0x000000000019c50f : add ah, ah ; ret 0xfffa
0x00000000001a738b : add ah, ah ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; push rax ; test dh, ch ; call qword ptr [rcx]
0x000000000019f18b : add ah, ah ; sub byte ptr [rax], al ; add al, dh ; push 0xe9 ; jmp qword ptr [rcx]
0x000000000019bb4f : add ah, ah ; xchg eax, ebx ; stc ; jmp rsp
0x00000000001995d7 : add ah, ah ; xor dl, dh ; jmp rsp
0x00000000001ade6b : add ah, al ; adc eax, 0x83e00001 ; hlt ; call qword ptr [rax]
0x00000000001a096b : add ah, al ; add byte ptr [rax], al ; adc byte ptr [rbx - 0x16], bl ; call rdx
0x00000000001b306b : add ah, al ; add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0f6b : add ah, al ; add dword ptr [rax], r8d ; nop ; cmc ; jmp qword ptr [rcx]
0x00000000001b176b : add ah, al ; add qword ptr [rax], r8 ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019c6bf : add ah, al ; cmp al, 0xfc ; call rsp
0x00000000001b916b : add ah, al ; enter 1, -0x70 ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000019939f : add ah, al ; int1 ; call rsp
0x000000000019b67f : add ah, al ; iretd ; clc ; jmp rsp
0x0000000000199a17 : add ah, al ; jmp rsp
0x000000000019adaf : add ah, al ; jno 0x19adae ; call rsp
0x00000000001a686b : add ah, al ; lahf ; add byte ptr [rax], al ; ror dl, 1 ; cld ; call qword ptr [rdx]
0x00000000001a566b : add ah, al ; lea eax, dword ptr [rax] ; add al, dh ; xchg ebp, ebp ; call qword ptr [rdx]
0x000000000019a51f : add ah, al ; mov dh, dh ; call rsp
0x000000000019c317 : add ah, al ; nop ; cli ; jmp rsp
0x00000000001986f7 : add ah, al ; out -0x13, eax ; jmp qword ptr [rbx + rax*8]
0x000000000019ba27 : add ah, al ; outsd dx, dword ptr [rsi] ; stc ; call rsp
0x00000000001b8c6b : add ah, al ; ret
0x000000000019c4ff : add ah, al ; ret 0xfffa
0x00000000001b8b6b : add ah, al ; ret 1
0x00000000001ae56b : add ah, al ; sbb al, 1 ; add byte ptr [rax - 0x69], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae36b : add ah, al ; sbb al, byte ptr [rcx] ; add al, al ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019e26b : add ah, al ; sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; add ch, cl ; call qword ptr [rdx]
0x00000000001af46b : add ah, al ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; in al, -0xc ; jmp qword ptr [rcx]
0x00000000001989b7 : add ah, al ; sub ebp, esi ; jmp rsp
0x000000000019c677 : add ah, al ; xchg eax, edx ; sti ; jmp rsp
0x00000000000a9ace : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a9aee : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001ab6a3 : add ah, bh ; in eax, dx ; add byte ptr [rax], al ; sub byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000000a9b86 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a9aad : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000196585 : add ah, bh ; jmp rax
0x00000000001a8ca3 : add ah, bh ; ret
0x00000000001a8ba3 : add ah, bh ; ret 0
0x00000000001a71a3 : add ah, bh ; test al, 0 ; add byte ptr [rax + 0x76], ch ; out dx, al ; call qword ptr [rax]
0x00000000001a5aa3 : add ah, bh ; xchg eax, ecx ; add byte ptr [rax], al ; clc ; popfq ; in eax, dx ; call qword ptr [rdi]
0x00000000001b3083 : add ah, bl ; add dword ptr [eax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b0f83 : add ah, bl ; add dword ptr [rax], r8d ; test al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x00000000001aff83 : add ah, bl ; add dword ptr ss:[rax], eax ; js 0x1affab ; cmc ; jmp qword ptr [rcx]
0x00000000001b1783 : add ah, bl ; add qword ptr [rax], r8 ; sbb byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001bb683 : add ah, bl ; in eax, dx ; add dword ptr [rax], eax ; cwde ; cmp eax, edi ; call rbx
0x0000000000187284 : add ah, bl ; int1 ; call qword ptr [rax]
0x00000000001a6883 : add ah, bl ; lahf ; add byte ptr [rax], al ; and sil, bpl ; jmp qword ptr [rdx]
0x00000000001b8b83 : add ah, bl ; ret 1
0x000000000019e283 : add ah, bl ; sbb dword ptr [rax], eax ; add byte ptr [rax], bh ; add ch, cl ; call qword ptr [rbx]
0x00000000001af483 : add ah, bl ; sub eax, dword ptr [rcx] ; add byte ptr [rax], bl ; in al, -0xc ; jmp qword ptr [rcx]
0x0000000000140672 : add ah, byte ptr [rax + rbp] ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000001b2bc1 : add ah, byte ptr [rbx + 0xa] ; ret
0x00000000000465b6 : add ah, byte ptr [rcx] ; ret 0x854d
0x00000000001a4b70 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00000000000a1bab : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001b0e93 : add ah, ch ; add dword ptr [r8], r8d ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b1193 : add ah, ch ; add qword ptr [rax], rax ; cmc ; jmp qword ptr [rcx]
0x00000000001a4393 : add ah, ch ; jp 0x1a439f ; add al, cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a6d93 : add ah, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rdx]
0x00000000001bb093 : add ah, ch ; out 1, eax ; add byte ptr [rax + 0xb], ch ; clc ; jmp qword ptr [rcx]
0x00000000001b6593 : add ah, ch ; pushfq ; add dword ptr [rax], eax ; adc rdi, rsi ; call qword ptr [rcx]
0x00000000001ae693 : add ah, ch ; sbb eax, 0x51780001 ; stc ; call qword ptr [rax]
0x00000000001b7793 : add ah, ch ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], cl ; call qword ptr [rdi]
0x0000000000196378 : add ah, ch ; sti ; jmp rax
0x00000000001af593 : add ah, ch ; sub al, 1 ; add byte ptr [rax], bl ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001a5d93 : add ah, ch ; xchg eax, esp ; add byte ptr [rax], al ; js 0x1a5d7a ; in eax, dx ; call rdi
0x00000000001b1873 : add ah, cl ; add qword ptr [r8], r8 ; fdiv dword ptr [rdi - 0xb] ; jmp qword ptr [rcx]
0x00000000001a6f73 : add ah, cl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; out dx, al ; jmp rdx
0x00000000001b3b73 : add ah, cl ; jb 0x1b3b80 ; add byte ptr [rax], bh ; cmp dh, dh ; call qword ptr [rax]
0x00000000001ab073 : add ah, cl ; out 0, eax ; add byte ptr [rax], ch ; int1 ; int1 ; jmp rdi
0x00000000001a8b73 : add ah, cl ; ret 0
0x00000000001ad873 : add ah, cl ; sgdt ptr [rax] ; pop rdx ; sub al, 0xe7 ; jmp qword ptr [rax]
0x00000000001b309b : add ah, dh ; add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001af79b : add ah, dh ; add dword ptr cs:[rax], eax ; jo 0x1af797 ; hlt ; jmp qword ptr [rsi]
0x00000000001aff9b : add ah, dh ; add dword ptr ss:[rax], eax ; nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001b179b : add ah, dh ; add qword ptr [rax], r8 ; xor byte ptr [rcx - 0xb], dh ; jmp rbx
0x00000000001a3eb3 : add ah, dh ; and dword ptr [rax], eax ; add byte ptr [rax], ch ; cmp ebp, ebp ; jmp qword ptr [rbx]
0x000000000019775f : add ah, dh ; cmp cl, ch ; jmp rsp
0x000000000019876f : add ah, dh ; imul ch ; call rsp
0x00000000001ab59b : add ah, dh ; in al, dx ; add byte ptr [rax], al ; mov al, 5 ; jmp qword ptr [rcx]
0x00000000001986ef : add ah, dh ; in eax, -0x13 ; inc esp ; ret 0
0x00000000001ad641 : add ah, dh ; jmp rcx
0x00000000001983af : add ah, dh ; jns 0x1983a4 ; call rsp
0x000000000019b0bf : add ah, dh ; out dx, eax ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x0000000000199a67 : add ah, dh ; pop rsp ; call rsp
0x000000000019c517 : add ah, dh ; ret 0xfffa
0x000000000019c83f : add ah, dh ; ret 0xfffd
0x00000000001a9c9b : add ah, dh ; rol dword ptr [rax], cl ; add byte ptr [rax], ah ; adc al, 0xf1 ; jmp qword ptr [rax]
0x00000000001997af : add ah, dh ; std ; jmp rsp
0x000000000019c3df : add ah, dh ; stosb byte ptr [rdi], al ; cli ; call rsp
0x00000000001b0b7b : add ah, dl ; add dword ptr [rax], eax ; nop ; push rdx ; cmc ; jmp qword ptr [rcx]
0x000000000019bdd7 : add ah, dl ; cld ; stc ; call rsp
0x00000000001b027b : add ah, dl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], ah ; and esi, ebp ; call rsi
0x00000000001a817b : add ah, dl ; mov eax, 0x7a000000 ; out dx, eax ; call qword ptr [rcx]
0x00000000001b657b : add ah, dl ; pushfq ; add dword ptr [rax], eax ; adc edi, esi ; call qword ptr [rcx]
0x000000000019c867 : add ah, dl ; ret
0x0000000000198ce7 : add ah, dl ; ret 0xffee
0x000000000019c507 : add ah, dl ; ret 0xfffa
0x000000000019aec7 : add ah, dl ; sal edi, 1 ; jmp rsp
0x000000000019b8d7 : add ah, dl ; stc ; jmp rsp
0x00000000001a747b : add ah, dl ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; nop ; test esi, ebp ; call qword ptr [rax]
0x00000000000c9895 : add al, 0 ; add al, ch ; ret
0x0000000000069e63 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x0000000000027299 : add al, 0 ; add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000326dd : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b576 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000001271c1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144e0d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149959 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e31 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000143396 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000103782 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000106010 : add al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aae83 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d65a5 : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000013413b : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006bdcf : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000275c1 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000275de : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000000275fb : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000f20a3 : add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000811e3 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000081c73 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010ea85 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000082284 : add al, 0 ; add dh, dh ; ret
0x000000000012321c : add al, 0 ; add dh, dh ; ret 0xf04
0x000000000009f024 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ef94 : add al, 0 ; mov rax, rdi ; ret
0x0000000000044b3a : add al, 0x10 ; add bl, dh ; ret
0x0000000000130450 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a9b1d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000198898 : add al, 0x14 ; out dx, al ; call rsp
0x000000000010a91b : add al, 0x16 ; ret
0x000000000009fce1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008b0ca : add al, 0x17 ; sub eax, ecx ; ret
0x000000000013a02a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000006f5f2 : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4375
0x0000000000096ca0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000132da9 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f6b9d : add al, 0x24 ; add rsp, 0x18 ; ret
0x0000000000109ea4 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000109f05 : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000089719 : add al, 0x24 ; call qword ptr [rdx]
0x0000000000120978 : add al, 0x24 ; call rax
0x00000000000ab533 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000213ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000106ee3 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000020a5c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035181 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f389 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000002a9d4 : add al, 0x29 ; ret 0x8941
0x00000000001af5ac : add al, 0x2d ; add dword ptr [rax], eax ; xor bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000000a8d59 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8d6b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008d5be : add al, 0x31 ; ret
0x0000000000122a84 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000019c040 : add al, 0x37 ; cli ; jmp rsp
0x000000000008d4ba : add al, 0x37 ; ret
0x00000000000db38f : add al, 0x39 ; ret 0xec7f
0x000000000007418f : add al, 0x3a ; ret
0x00000000000ab7d6 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000ec9a9 : add al, 0x41 ; sete dl ; jmp 0xec957
0x0000000000020adb : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000f5f13 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009f035 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009f045 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a72fb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000009efe5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000124a5e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000016a899 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016a8ab : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000073573 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000071998 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000734b3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015acfa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000007249c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000072642 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000073394 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009efa5 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009ef35 : add al, 0x48 ; mov eax, edi ; ret
0x000000000008b894 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000198a78 : add al, 0x4a ; out dx, al ; jmp rsp
0x00000000000abfe0 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000001b16ac : add al, 0x4e ; add dword ptr [rax], eax ; jo 0x1b16af ; jmp qword ptr [rcx]
0x0000000000110279 : add al, 0x4e ; lea esp, dword ptr [rbx + rcx] ; jmp 0x110292
0x0000000000114574 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x000000000001fcf7 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000001976e4 : add al, 0x5d ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fucomi st(0) ; call rsp
0x00000000000bb15a : add al, 0x60 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000198be8 : add al, 0x65 ; out dx, al ; jmp rsp
0x000000000016a8a7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a1c3c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001baf4f : add al, 0x66 ; ret
0x00000000001b2fac : add al, 0x67 ; add dword ptr [rax], eax ; nop ; sbb dh, dh ; jmp qword ptr [rsi]
0x000000000002dedd : add al, 0x72 ; or bl, dh ; ret
0x00000000001b3bac : add al, 0x73 ; add dword ptr [rax], eax ; cmp sil, sil ; call qword ptr [rax]
0x0000000000081eee : add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x00000000000d5c6d : add al, 0x74 ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000ab7d4 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000e42b9 : add al, 0x75 ; mov ah, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000aaf32 : add al, 0x75 ; ret
0x00000000000fb732 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002e2a0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e2c0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002e200 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002e280 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002e1a0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002e240 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002e1e0 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002e220 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002e340 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002e1c0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002e260 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002e180 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x000000000002e55b : add al, 0x78 ; and eax, esi ; ret
0x00000000001a4b2f : add al, 0x79 ; ret
0x00000000001a7aff : add al, 0x7b ; ret
0x00000000001983e0 : add al, 0x7d ; in eax, dx ; jmp rsp
0x000000000017324b : add al, 0x7e ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f4c9
0x00000000000da8c1 : add al, 0x7f ; fadd qword ptr [rcx + 0x39] ; ret 0x8941
0x00000000000d9a9e : add al, 0x7f ; fistp qword ptr [rcx] ; ret 0xc189
0x00000000000dd07c : add al, 0x7f ; mov cl, 0x39 ; ret 0xc189
0x00000000000e030a : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000006d739 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000a9ca3 : add al, 0x81 ; je 0xa9c85 ; ret
0x000000000014653b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000a9c9f : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xa9c89 ; ret
0x0000000000147e13 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009ee5a : add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000033c18 : add al, 0x82 ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000006d604 : add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000020f88 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000001981c8 : add al, 0x82 ; jmp 0x1981ce
0x000000000002e2f8 : add al, 0x82 ; ret
0x00000000000a9c58 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa9c48 ; ret
0x0000000000091c27 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000026bc0 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000076dd2 : add al, 0x83 ; loop 0x76ddd ; mov eax, edx ; ret
0x0000000000078fb4 : add al, 0x83 ; loopne 0x78fbd ; ret
0x00000000000d47ab : add al, 0x83 ; ret 0x4101
0x00000000000d9f0e : add al, 0x83 ; ret 0x4801
0x0000000000035bc4 : add al, 0x83 ; rol dword ptr [rcx], -9 ; ret 0
0x00000000001183c9 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11839e
0x0000000000097338 : add al, 0x84 ; leave ; jne 0x97313 ; mov rax, rdi ; ret
0x00000000000a9cf2 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xa9cf0 ; ret
0x00000000000ab80e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x0000000000046cc1 : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000000d2a11 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000c2042 : add al, 0x87 ; add rdi, r8 ; jmp rdi
0x00000000001340c6 : add al, 0x87 ; add rdi, rax ; jmp rdi
0x00000000000ab4de : add al, 0x87 ; test r8d, r8d ; jne 0xab4b8 ; ret
0x000000000016a896 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000000a1c1b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000003900a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009eed7 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x0000000000046332 : add al, 0x89 ; ret
0x000000000009ef22 : add al, 0x8a ; add r10, rax ; jmp r10
0x000000000002ebc3 : add al, 0x8a ; add rdx, rax ; jmp rdx
0x00000000000a9c5b : add al, 0x8a ; je 0xa9c45 ; ret
0x00000000000ac9c7 : add al, 0x8b ; adc byte ptr [rcx], bh ; jne 0xac9c8 ; ret
0x00000000000a1c04 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x0000000000108359 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000ab4c8 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000540a0 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000da3e7 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000019c2e0 : add al, 0x8d ; cli ; call rsp
0x00000000001a78d6 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb7cb : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000561ab : add al, 0x90 ; add rax, qword ptr [rbp - 0x10a8] ; jmp rax
0x000000000004ca81 : add al, 0x90 ; add rax, qword ptr [rbp - 0x4f0] ; jmp rax
0x00000000000df7d7 : add al, 0x90 ; add rax, rcx ; jmp rax
0x000000000010a6dc : add al, 0xa ; ret
0x00000000001ad3ac : add al, 0xb ; add dword ptr [rax], eax ; adc ch, 0xf3 ; call qword ptr [rbx]
0x000000000002dec6 : add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000001a7eac : add al, 0xb6 ; add byte ptr [rax], al ; nop ; outsd dx, dword ptr [rsi] ; out dx, eax ; call rax
0x000000000013b853 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e36a : add al, 0xb8 ; ret
0x00000000001a85ac : add al, 0xbd ; add byte ptr [rax], al ; rcr byte ptr [rcx], 1 ; cli ; jmp qword ptr [rdi]
0x00000000000a9a79 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012dde9 : add al, 0xc2 ; jmp rax
0x00000000000ab6f3 : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000002d3be : add al, 0xc6 ; ret
0x000000000019c560 : add al, 0xc8 ; cli ; jmp rsp
0x00000000000471e4 : add al, 0xd0 ; mov qword ptr [rcx + r10*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000004704d : add al, 0xd0 ; mov qword ptr [rsi + r10*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000c65e8 : add al, 0xd0 ; ret
0x00000000000471e8 : add al, 0xd1 ; xor eax, eax ; pop rbx ; ret
0x0000000000047051 : add al, 0xd6 ; xor eax, eax ; pop rbx ; ret
0x0000000000035db7 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000019b6e8 : add al, 0xdd ; clc ; jmp rsp
0x000000000004739d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x473f9
0x0000000000048f8d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x48fe9
0x00000000000e3fb2 : add al, 0xe ; jmp 0xe3f7b
0x00000000000d1208 : add al, 0xe8 ; ret 0xf5cc
0x000000000002b710 : add al, 0xe8 ; test rax, rax ; je 0x2b720 ; call rax
0x0000000000189148 : add al, 0xec ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp qword ptr [rsi]
0x0000000000189074 : add al, 0xec ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp rsp
0x000000000018914c : add al, 0xec ; hlt ; jmp qword ptr [rsi]
0x0000000000189078 : add al, 0xec ; hlt ; jmp rsp
0x000000000002e1a5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000009fac1 : add al, 0xf ; mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000014464d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000149ebb : add al, 0xf ; sub rax, r8 ; ret
0x00000000000aaa05 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a571b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e52e7 : add al, 0xf ; xchg dword ptr [rbx - 0x76ffffef], ebx ; ret 0x8d48
0x000000000006d225 : add al, 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001a9aa1 : add al, 0xf1 ; call qword ptr [rax]
0x00000000001a9a11 : add al, 0xf1 ; call qword ptr [rsi]
0x000000000015b063 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006c87b : add al, 0xf3 ; ret
0x00000000001afc79 : add al, 0xf5 ; jmp rdx
0x000000000019b0e0 : add al, 0xf6 ; idiv edi ; hlt ; ret
0x000000000008f399 : add al, 0xf6 ; ret 0x7408
0x000000000019a9a9 : add al, 0xf7 ; call rsp
0x000000000002de84 : add al, 0xf8 ; ret
0x000000000019be11 : add al, 0xfa ; jmp rsp
0x000000000002d3a2 : add al, 0xfa ; ret
0x0000000000196591 : add al, 0xfc ; call rax
0x000000000012412b : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000aaa38 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000001accb5 : add al, 1 ; add byte ptr [rax], ch ; jae 0x1accb4 ; call qword ptr [rsi]
0x000000000005b218 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d4600 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c830 : add al, 1 ; ret
0x000000000006c89a : add al, 1 ; xor eax, eax ; ret
0x000000000019caac : add al, 2 ; add byte ptr [rax], al ; xor byte ptr [rcx - 0x18], cl ; call qword ptr [rcx]
0x00000000001b6147 : add al, 2 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000001acf7f : add al, 2 ; jle 0x1acf91 ; ret
0x00000000001b04ef : add al, 2 ; push rbp ; ret
0x00000000001a3f88 : add al, 2 ; ret 0xe0a
0x000000000010a5a9 : add al, 2 ; shr eax, cl ; and eax, 1 ; ret
0x000000000009fa5c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x86e8
0x000000000016ef87 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000001987f0 : add al, 6 ; out dx, al ; jmp rsp
0x00000000000a5868 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000089a9d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002dec9 : add al, 7 ; ret
0x000000000009f10f : add al, 7 ; test r8b, r8b ; jne 0x9f0f8 ; ret
0x0000000000078873 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000009fe4f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000a9ba3 : add al, 9 ; pop rbx ; div esi ; mov eax, eax ; ret
0x00000000001b9eff : add al, ah ; out 0xf7, al ; call qword ptr [rdx]
0x000000000000e57f : add al, ah ; ret
0x000000000000659f : add al, ah ; ret 0x12
0x000000000001c28f : add al, ah ; ret 7
0x00000000001ae50f : add al, ah ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001b0f9f : add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000001a753f : add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000001af1ef : add al, al ; fdivrp st(4) ; jmp qword ptr [rcx]
0x00000000001a265f : add al, al ; fucomp st(4) ; jmp qword ptr [rbx]
0x00000000001bc50f : add al, al ; jno 0x1bc50f ; call qword ptr [rcx]
0x00000000001b91ff : add al, al ; mov ah, 0xf7 ; call qword ptr [rbx]
0x0000000000007817 : add al, al ; ret
0x00000000001a5d2f : add al, al ; salc ; in eax, dx ; call qword ptr [rsi]
0x00000000001b2fdf : add al, al ; sbb dh, dh ; jmp qword ptr [rsi]
0x000000000013323d : add al, al ; sbb rbx, 3 ; call 0x1f468
0x00000000001ae36f : add al, al ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019e1c7 : add al, bh ; add ecx, ebp ; call qword ptr [rdx]
0x000000000019e137 : add al, bh ; add ecx, ebp ; call qword ptr [rsi]
0x00000000001afa17 : add al, bh ; clc ; hlt ; jmp rcx
0x00000000001b9c17 : add al, bh ; fcompi st(7) ; jmp rdx
0x00000000001b1547 : add al, bh ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x000000000019d0b7 : add al, bh ; jno 0x19d0a7 ; call qword ptr [rax]
0x00000000001b2067 : add al, bh ; popfq ; cmc ; call rdi
0x00000000001a5aa7 : add al, bh ; popfq ; in eax, dx ; call qword ptr [rdi]
0x00000000001ae527 : add al, bh ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x000000000019e567 : add al, bl ; adc al, 0xe9 ; call qword ptr [rdx]
0x00000000001af4e7 : add al, bl ; in al, -0xc ; jmp qword ptr [rcx]
0x00000000001b1877 : add al, bl ; ja 0x1b1874 ; jmp qword ptr [rcx]
0x00000000001b0e97 : add al, bl ; movsxd rsi, ebp ; jmp qword ptr [rcx]
0x00000000000a5b6b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001a6d17 : add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000001a4907 : add al, bl ; push rdi ; in eax, dx ; jmp rax
0x000000000014cf72 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019c2ad : add al, byte ptr [r8] ; in al, -0x77 ; cli ; jmp rsp
0x000000000019c3bd : add al, byte ptr [r8] ; xor al, 0xa7 ; cli ; call rsp
0x0000000000089a01 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019c45e : add al, byte ptr [rax] ; adc al, 0xb4 ; cli ; jmp rsp
0x000000000019befe : add al, byte ptr [rax] ; adc edi, edx ; jmp rsp
0x000000000019c03e : add al, byte ptr [rax] ; add al, 0x37 ; cli ; jmp rsp
0x000000000019c2de : add al, byte ptr [rax] ; add al, 0x8d ; cli ; call rsp
0x0000000000020199 : add al, byte ptr [rax] ; add bh, bh ; ret 0x840f
0x0000000000106ee6 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008e8b3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000088272 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000db15b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008e59e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000009559a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000002142a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b2bd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000144fad : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e69dd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b01
0x0000000000147bd1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000db144 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144fd1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000127870 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013242f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000134eef : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000013464f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000132c42 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x12ef46
0x0000000000066f2e : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x631e6
0x0000000000088891 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x8885f
0x0000000000102952 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000cb692 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000013792d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000ec49b : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call r14
0x0000000000103bf2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103965 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103831 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000001037a9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a02c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000001090e5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000aae63 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c6d7a : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000072cf0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036c89 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e4d7c : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x0000000000171794 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000125d17 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cbbdb84], cl ; ret
0x000000000007f2a3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000cad5a : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x00000000000253a2 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000000249b0 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2076
0x00000000000bdbc9 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x000000000010e979 : add al, byte ptr [rax] ; add byte ptr [rdx], al ; mov rdx, qword ptr [rsp + 0x18] ; call rax
0x0000000000054cd0 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b8fe : add al, byte ptr [rax] ; and al, 0x4a ; stc ; call rsp
0x000000000019be0e : add al, byte ptr [rax] ; and al, 4 ; cli ; jmp rsp
0x000000000019c3de : add al, byte ptr [rax] ; hlt ; stosb byte ptr [rdi], al ; cli ; call rsp
0x000000000019bb4e : add al, byte ptr [rax] ; in al, -0x6d ; stc ; jmp rsp
0x000000000019c2ae : add al, byte ptr [rax] ; in al, -0x77 ; cli ; jmp rsp
0x000000000019be6e : add al, byte ptr [rax] ; in al, 9 ; cli ; jmp rsp
0x000000000019b9fe : add al, byte ptr [rax] ; insb byte ptr [rdi], dx ; stc ; call rsp
0x000000000019b926 : add al, byte ptr [rax] ; je 0x19b97f ; stc ; jmp rsp
0x000000000009f005 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000019bb96 : add al, byte ptr [rax] ; mov ah, 0xa8 ; stc ; jmp rsp
0x0000000000078d89 : add al, byte ptr [rax] ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ef75 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x0000000000120971 : add al, byte ptr [rax] ; mov rdi, r12 ; mov rax, qword ptr [rsp] ; call rax
0x000000000019c85e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019bfb6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; sub edi, edx ; call rsp
0x000000000016dc9b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000011d829 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105a12 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019bc7e : add al, byte ptr [rax] ; push rsp ; ret
0x000000000019c84e : add al, byte ptr [rax] ; ret
0x000000000019bf46 : add al, byte ptr [rax] ; test byte ptr [rax], bl ; cli ; call rsp
0x000000000019bbde : add al, byte ptr [rax] ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; stc ; call rsp
0x000000000019c3be : add al, byte ptr [rax] ; xor al, 0xa7 ; cli ; call rsp
0x000000000019c026 : add al, byte ptr [rax] ; xor r15d, edx ; jmp rsp
0x00000000000bba15 : add al, byte ptr [rbx - 0x50f0fe16] ; ret 0x8941
0x00000000001b56f5 : add al, byte ptr [rbx] ; add dword ptr gs:[rdx], ecx ; ret
0x00000000001aea9a : add al, byte ptr [rbx] ; ret 0xa04
0x0000000000114c2e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000019deb8 : add al, byte ptr [rcx + 0xa] ; ret
0x00000000000ebe4c : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8944
0x00000000000b839b : add al, byte ptr [rcx - 0x75] ; je 0xb835d ; add byte ptr [rax + 0x39], cl ; ret 0x8943
0x00000000000d9d3b : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000ba8fc : add al, byte ptr [rcx - 0x7f] ; ret
0x00000000000f22f4 : add al, byte ptr [rcx - 0x80] ; jmp qword ptr [rbx]
0x00000000001115a9 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000000a808 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000124181 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000011e961 : add al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000019b925 : add al, byte ptr [rdx] ; add byte ptr [rax + rdx*2 - 7], dh ; jmp rsp
0x00000000001a0bc6 : add al, byte ptr [rdx] ; insb byte ptr [rdi], dx ; ret
0x00000000001a33dd : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000001abf17 : add al, byte ptr [rdx] ; push rbx ; ret
0x00000000001a31b5 : add al, byte ptr [rdx] ; push rsi ; ret
0x000000000006f9af : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000000a596a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019c85d : add al, byte ptr ds:[rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000005155a : add al, ch ; adc byte ptr [rdx + rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000001b32b7 : add al, ch ; add esp, edi ; jmp qword ptr [rsi]
0x00000000001ab357 : add al, ch ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001b1167 : add al, ch ; cmc ; jmp qword ptr [rcx]
0x0000000000132c45 : add al, ch ; cmc ; ret 0xffff
0x00000000001b3d47 : add al, ch ; cmp dh, dh ; jmp qword ptr [rax]
0x00000000000cadb4 : add al, ch ; imul byte ptr [rdx] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000001431ae : add al, ch ; in al, dx ; ret 0xffed
0x00000000001a4257 : add al, ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001731cd : add al, ch ; in eax, dx ; ret 0xffea
0x0000000000187394 : add al, ch ; int1 ; call qword ptr [rax]
0x00000000001aa017 : add al, ch ; int1 ; jmp qword ptr [rcx]
0x0000000000134401 : add al, ch ; jns 0x1343b3 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000001b1757 : add al, ch ; jo 0x1b1754 ; jmp qword ptr [rcx]
0x0000000000096e42 : add al, ch ; or byte ptr [rsi - 0x76b70008], al ; ret 0x8949
0x00000000001a9c37 : add al, ch ; or ecx, esi ; call qword ptr [rcx]
0x00000000001a9bb7 : add al, ch ; or ecx, esi ; jmp qword ptr [rcx]
0x0000000000130e24 : add al, ch ; out 0xee, al ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e889e : add al, ch ; pop rsp ; ret
0x00000000000f455d : add al, ch ; popfq ; push rcx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c1d54 : add al, ch ; push rsi ; ret
0x00000000000238e7 : add al, ch ; ret
0x00000000000cd178 : add al, ch ; ret 0x29e
0x000000000007ea08 : add al, ch ; ret 0x961
0x000000000006f938 : add al, ch ; ret 0xa52
0x0000000000120be8 : add al, ch ; ret 0xf0d4
0x00000000000dac98 : add al, ch ; ret 0xf447
0x00000000000ff718 : add al, ch ; ret 0xf782
0x000000000009f8e8 : add al, ch ; ret 0xf8e7
0x0000000000085f38 : add al, ch ; ret 0xfc37
0x000000000005dae8 : add al, ch ; ret 0xfd05
0x0000000000082b38 : add al, ch ; ret 0xffb6
0x00000000000e3167 : add al, ch ; ret 0xfff3
0x00000000001a85c7 : add al, ch ; sbb bh, dl ; call qword ptr [rdi]
0x00000000001059b1 : add al, ch ; sbb dword ptr [rdx - 8], edi ; dec dword ptr [rax + 0x39] ; ret
0x00000000001730c1 : add al, ch ; stc ; ret
0x00000000001a5637 : add al, ch ; xchg ebp, ebp ; call qword ptr [rdx]
0x0000000000044c14 : add al, ch ; xchg esi, r15d ; dec dword ptr [rax - 0x77] ; ret
0x000000000008d885 : add al, ch ; xor eax, 0x39fffa8e ; ret
0x00000000001b1077 : add al, cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a4397 : add al, cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bc357 : add al, cl ; jne 0x1bc35a ; call rcx
0x00000000001ae667 : add al, cl ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000001961a0 : add al, cl ; sti ; call rax
0x00000000001a54d7 : add al, cl ; test ch, ch ; jmp qword ptr [rax]
0x00000000001a1057 : add al, cl ; test edx, ebp ; call qword ptr [rdi]
0x00000000001ae4f7 : add al, cl ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001b120f : add al, dh ; cmc ; jmp qword ptr [rcx]
0x000000000019d0cf : add al, dh ; jno 0x19d0bf ; jmp qword ptr [rax]
0x00000000001a7f3f : add al, dh ; jno 0x1a7f36 ; jmp qword ptr [rax]
0x00000000001b0eaf : add al, dh ; movsxd rsi, ebp ; jmp qword ptr [rcx]
0x00000000001a4acf : add al, dh ; pop rdi ; in eax, dx ; jmp qword ptr [rsi]
0x000000000019f18f : add al, dh ; push 0xe9 ; jmp qword ptr [rcx]
0x0000000000008c6f : add al, dh ; ret
0x0000000000004f67 : add al, dh ; ret 7
0x00000000001b312f : add al, dh ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001b239f : add al, dh ; stosd dword ptr [rdi], eax ; cmc ; call rdi
0x00000000001a6bff : add al, dh ; sub ebp, esi ; jmp qword ptr [rcx]
0x00000000001b6b3f : add al, dh ; sub esi, edi ; call rcx
0x00000000001a566f : add al, dh ; xchg ebp, ebp ; call qword ptr [rdx]
0x00000000001a21c0 : add al, dl ; in al, dx ; jmp qword ptr [rax]
0x000000000018717f : add al, dl ; insd dword ptr [rdi], dx ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001b173f : add al, dl ; jo 0x1b173c ; jmp qword ptr [rcx]
0x00000000001b604f : add al, dl ; out 0xf6, al ; jmp qword ptr [rdi]
0x00000000001b0abf : add al, dl ; push rcx ; cmc ; jmp qword ptr [rcx]
0x00000000001a85af : add al, dl ; sbb edx, edi ; jmp qword ptr [rdi]
0x00000000001a106f : add al, dl ; test edx, ebp ; jmp qword ptr [rdx]
0x000000000002209f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000019611c : add bh, al ; sti ; jmp rax
0x0000000000173f3f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002f3d7 : add bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000001875ac : add bh, bh ; int1 ; jmp qword ptr [rax]
0x000000000013187c : add bh, bh ; loope 0x131815 ; ret
0x00000000000b9ed5 : add bh, bh ; ret
0x000000000002019b : add bh, bh ; ret 0x840f
0x000000000007b0ba : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000f6b32 : add bh, byte ptr [rax + 0x16] ; jbe 0xf6b49 ; ret
0x0000000000049170 : add bh, byte ptr [rax + 1] ; ret
0x0000000000106e6b : add bh, byte ptr [rax - 1] ; pop rbx ; pop rbp ; ret
0x000000000003529b : add bh, byte ptr [rax - 1] ; ret
0x00000000001b5708 : add bh, byte ptr [rbx + 0xa] ; ret
0x0000000000171b62 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000000df263 : add bh, byte ptr [rcx] ; ret
0x00000000001acf80 : add bh, byte ptr [rsi + 0xa] ; ret
0x00000000001af830 : add bh, ch ; hlt ; jmp qword ptr [rsi]
0x000000000011e00c : add bh, dh ; fsubr st(1) ; ret 0xfffd
0x000000000009a56b : add bh, dh ; ret
0x000000000009e679 : add bh, dh ; ret 0
0x000000000009e66d : add bh, dh ; ret 0xf800
0x00000000001af3e0 : add bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000000aab80 : add bl, al ; lea rax, qword ptr [rip + 0xc2a77] ; ret
0x00000000000ab744 : add bl, al ; lea rax, qword ptr [rip + 0xc6433] ; ret
0x000000000008eba4 : add bl, al ; lea rax, qword ptr [rip + 0xe1863] ; ret
0x0000000000124178 : add bl, al ; mov eax, 0x100 ; ret
0x0000000000124172 : add bl, al ; mov eax, 0x101 ; ret
0x000000000012417e : add bl, al ; mov eax, 0x102 ; ret
0x00000000000cd34c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000d7552 : add bl, al ; mov eax, 3 ; ret
0x00000000000d754c : add bl, al ; mov eax, 4 ; ret
0x00000000000cc30c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000d6c4c : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000131a81 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000142e4a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000008976c : add bl, al ; ret
0x00000000001347ce : add bl, al ; xor eax, eax ; ret
0x0000000000189ad7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000000d02b3 : add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000019e93d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001b0289 : add bl, byte ptr [rbp + 0x283100e] ; ret
0x00000000001b2d85 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000d02b4 : add bl, byte ptr [rbx + 0x5d] ; ret
0x000000000019ea46 : add bl, byte ptr [rbx + 0xa] ; ret
0x00000000001a3187 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001a5b1a : add bl, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000187448 : add bl, ch ; int1 ; call qword ptr [rax]
0x0000000000088894 : add bl, ch ; ret
0x00000000000d884d : add bl, ch ; ret 0x8d4c
0x000000000002c2fc : add bl, ch ; sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000000a5f1f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a5f2f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000020782 : add bl, dh ; ret
0x0000000000032eee : add bl, sil ; ret
0x000000000019e2a0 : add bpl, cl ; call qword ptr [rbx]
0x000000000019e318 : add bpl, cl ; call qword ptr [rcx]
0x000000000019e300 : add bpl, cl ; jmp qword ptr [rax]
0x00000000000cc497 : add byte ptr [r13 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004854a : add byte ptr [r8 + 1], r9b ; ret 0x3948
0x00000000000f3d77 : add byte ptr [r8 + 1], r9b ; ret 0x894c
0x0000000000060fbd : add byte ptr [r8 + 1], r9b ; ret 0xae9
0x00000000001030a2 : add byte ptr [r8 - 0x77], r9b ; ret
0x000000000006fe31 : add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x0000000000051278 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e5a8a
0x000000000002cf40 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4802
0x000000000002450c : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000010601 : add byte ptr [r8], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000075ae6 : add byte ptr [r8], al ; cmp eax, 0xff ; jne 0x75af9 ; pop rbx ; ret
0x0000000000077980 : add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x7792a
0x000000000002483b : add byte ptr [r9 + 0x39], r9b ; ret 0x860f
0x0000000000103059 : add byte ptr [r9 + 0xf], r8b ; lahf ; ret 0x8545
0x00000000001a9cff : add byte ptr [rax + 0x15], al ; int1 ; jmp qword ptr [rcx]
0x00000000001aff6f : add byte ptr [rax + 0x19], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001aff87 : add byte ptr [rax + 0x19], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001aff57 : add byte ptr [rax + 0x19], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000034a0b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000cc3cf : add byte ptr [rax + 0x20], bh ; ret
0x00000000001a6887 : add byte ptr [rax + 0x20], cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000003f01c : add byte ptr [rax + 0x21], cl ; ret 0x8348
0x00000000001722cf : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x000000000004d71e : add byte ptr [rax + 0x29], cl ; fmul dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000032651 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000bfab5 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000051e63 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000e4e3f : add byte ptr [rax + 0x29], cl ; ret 0x84c7
0x0000000000028cdb : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000001a9f0f : add byte ptr [rax + 0x2d], dl ; int1 ; jmp rsp
0x00000000001a0737 : add byte ptr [rax + 0x30], bl ; cli ; jmp qword ptr [rcx]
0x00000000001a172f : add byte ptr [rax + 0x37], ah ; jmp 0x1a1737
0x0000000000025376 : add byte ptr [rax + 0x39], cl ; ret
0x000000000007eadf : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000079647 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002c52e : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000b83a0 : add byte ptr [rax + 0x39], cl ; ret 0x8943
0x0000000000114e39 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000114f00 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000000cc41f : add byte ptr [rax + 0x40], bh ; ret
0x00000000000f9d87 : add byte ptr [rax + 0x415d5b0a], dh ; pop rsp ; pop r13 ; ret
0x0000000000195bad : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000110327 : add byte ptr [rax + 0x440f4c04], ch ; ret
0x00000000001a6d97 : add byte ptr [rax + 0x45], bl ; out dx, al ; call qword ptr [rdx]
0x00000000001bba7f : add byte ptr [rax + 0x4a], ah ; clc ; call qword ptr [rax]
0x00000000001b4547 : add byte ptr [rax + 0x4f], cl ; idiv bh ; ret 1
0x00000000001ae697 : add byte ptr [rax + 0x51], bh ; stc ; call qword ptr [rax]
0x00000000001b0b4f : add byte ptr [rax + 0x52], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b37 : add byte ptr [rax + 0x52], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019da57 : add byte ptr [rax + 0x53], ch ; std ; jmp qword ptr [rdi]
0x00000000001ade8f : add byte ptr [rax + 0x59], dh ; stc ; call qword ptr [rax]
0x000000000001f573 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000123bc0 : add byte ptr [rax + 0x5d5b1155], cl ; pop r12 ; ret
0x0000000000106ee8 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000001b0d1f : add byte ptr [rax + 0x62], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d37 : add byte ptr [rax + 0x62], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000f290b : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005ace4 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000006d8ad : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x0000000000085537 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000000330c9 : add byte ptr [rax + 0x63], cl ; adc al, 0xb1 ; add rdx, rcx ; jmp rdx
0x000000000006dd6b : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x0000000000020f85 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000046cbe : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000001340c3 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000002ebc0 : add byte ptr [rax + 0x63], cl ; add al, 0x8a ; add rdx, rax ; jmp rdx
0x00000000000df7d4 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rcx ; jmp rax
0x00000000000a9a76 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000005a9f9 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000006333a : add byte ptr [rax + 0x63], cl ; or al, 0x8e ; add rsi, rcx ; jmp rsi
0x000000000005b28b : add byte ptr [rax + 0x63], cl ; or al, 0x90 ; add rax, rcx ; jmp rax
0x00000000000af61f : add byte ptr [rax + 0x63], cl ; ret
0x00000000000bab9c : add byte ptr [rax + 0x63], cl ; ret 0x148
0x000000000006d1da : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000112bc0 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x000000000013170f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000000000d9ac6 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000001316ff : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000007415f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000d39f5 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x00000000000e0b49 : add byte ptr [rax + 0x63], cl ; ret 0xf748
0x00000000000454dd : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ba398 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000001b0f3f : add byte ptr [rax + 0x64], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f57 : add byte ptr [rax + 0x64], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a6f77 : add byte ptr [rax + 0x64], bl ; out dx, al ; jmp rdx
0x00000000001b0f27 : add byte ptr [rax + 0x64], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b1017 : add byte ptr [rax + 0x65], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b10ef : add byte ptr [rax + 0x66], al ; cmc ; jmp qword ptr [rcx]
0x00000000000cbb0f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000001b11af : add byte ptr [rax + 0x67], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001bc117 : add byte ptr [rax + 0x67], cl ; clc ; call qword ptr [rax]
0x00000000001b1197 : add byte ptr [rax + 0x67], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000cbb2f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000001b1317 : add byte ptr [rax + 0x69], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000cbb1f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000cbb3f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000000cbd6f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001b16af : add byte ptr [rax + 0x70], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b16c7 : add byte ptr [rax + 0x70], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b16df : add byte ptr [rax + 0x70], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000899ff : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001a71a7 : add byte ptr [rax + 0x76], ch ; out dx, al ; call qword ptr [rax]
0x00000000000a646f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001b19a7 : add byte ptr [rax + 0x7c], ch ; cmc ; jmp rax
0x00000000000cc307 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000cc25a : add byte ptr [rax + 0x7f], bh ; ret
0x00000000001bb097 : add byte ptr [rax + 0xb], ch ; clc ; jmp qword ptr [rcx]
0x00000000001072cf : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x000000000002e244 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008d425 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000c7ece : add byte ptr [rax + 0xf], cl ; ret
0x0000000000079d12 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000ca740 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000008e602 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000025ad6 : add byte ptr [rax + 0xf], cl ; ret 0x8545
0x00000000000511c3 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000029713 : add byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000f98c4 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000bcd2a : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000069271 : add byte ptr [rax + 0xf], cl ; ret 0xba66
0x00000000000582bb : add byte ptr [rax + 0xf], cl ; ret 0xbd83
0x00000000000287fa : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cc2ae : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000012674c : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000cc31f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000490d5 : add byte ptr [rax + 1], bh ; ret
0x000000000008e8b5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000064a5e : add byte ptr [rax + 1], cl ; ret
0x000000000004854b : add byte ptr [rax + 1], cl ; ret 0x3948
0x00000000000bab5d : add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000f3d78 : add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000ba2f4 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000060fbe : add byte ptr [rax + 1], cl ; ret 0xae9
0x0000000000048bd8 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x000000000007885e : add byte ptr [rax + 1], dil ; ret
0x000000000012e0df : add byte ptr [rax + 2], bh ; ret
0x000000000013f26f : add byte ptr [rax + 3], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000001a9a0f : add byte ptr [rax + 4], dl ; int1 ; call qword ptr [rsi]
0x00000000000d7547 : add byte ptr [rax + 5], bh ; ret
0x00000000001ab6bf : add byte ptr [rax + 7], al ; jmp qword ptr [rcx]
0x00000000000cc526 : add byte ptr [rax + 7], bh ; ret
0x00000000001ab6d7 : add byte ptr [rax + 7], bl ; jmp qword ptr [rcx]
0x0000000000000c2b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001a493b : add byte ptr [rax + rax*4 + 0x58800000], dl ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001a4903 : add byte ptr [rax + rax*4], bl ; add al, bl ; push rdi ; in eax, dx ; jmp rax
0x000000000002ff9f : add byte ptr [rax + rax*8 - 0x7cb7eb8c], al ; ret 0x4901
0x0000000000033f3f : add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000019c817 : add byte ptr [rax + rax*8 - 3], dh ; jmp rsp
0x00000000000a5aec : add byte ptr [rax + rax], 0 ; ret
0x00000000001b8b3f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000000c9894 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x000000000006bdce : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a8b9f : add byte ptr [rax + rax], bh ; add ah, bh ; ret 0
0x00000000000042c7 : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x25
0x000000000019c8c3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; pop rax ; sub ebp, eax ; call rax
0x00000000001a8c9f : add byte ptr [rax + rax], ch ; add ah, bh ; ret
0x00000000001b8c67 : add byte ptr [rax + rax], cl ; add ah, al ; ret
0x00000000000830f1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000835a9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000103f5 : add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rbx]
0x0000000000010605 : add byte ptr [rax + rax], cl ; push rax ; ret
0x0000000000009405 : add byte ptr [rax + rax], cl ; ret 7
0x0000000000197d6f : add byte ptr [rax + rbp - 0x16], dh ; jmp rsp
0x00000000001af133 : add byte ptr [rax + rbp - 0x2247ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000ab425 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001b30fb : add byte ptr [rax + rbp*2 + 1], dl ; add al, al ; sbb dh, dh ; jmp qword ptr [rsi]
0x0000000000198c07 : add byte ptr [rax + rbp*2 - 0x12], ah ; call rsp
0x0000000000197807 : add byte ptr [rax + rbp*2 - 0x17], dl ; call rsp
0x00000000001b30cb : add byte ptr [rax + rbp*2], ah ; add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b30e3 : add byte ptr [rax + rbp*2], bh ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b30b3 : add byte ptr [rax + rbp*2], cl ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x0000000000197c1f : add byte ptr [rax + rbp*8 - 0x17], ah ; call rsp
0x00000000001ab133 : add byte ptr [rax + rbp*8 - 0xa480000], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001ae133 : add byte ptr [rax + rbx - 0x70f7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001aa103 : add byte ptr [rax + rbx*8], bl ; add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x00000000000cdb64 : add byte ptr [rax + rcx + 0xf], dh ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000ffefd : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x00000000001b1163 : add byte ptr [rax + rcx*2 + 0x66e80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b10eb : add byte ptr [rax + rcx*2 + 1], al ; add byte ptr [rax + 0x66], al ; cmc ; jmp qword ptr [rcx]
0x0000000000044d26 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001b10d3 : add byte ptr [rax + rcx*2], ch ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b10bb : add byte ptr [rax + rcx*2], dl ; add dword ptr [rax], eax ; adc byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000000f26b1 : add byte ptr [rax + rcx*4 + 0x34], al ; sbb cl, byte ptr [rax - 0x7d] ; ret
0x000000000019c55f : add byte ptr [rax + rcx*8], al ; cli ; jmp rsp
0x000000000019d0b3 : add byte ptr [rax + rcx], cl ; add byte ptr [rax], al ; clc ; jno 0x19d0ab ; call qword ptr [rax]
0x00000000001bc113 : add byte ptr [rax + rdi*8 + 1], ch ; add byte ptr [rax + 0x67], cl ; clc ; call qword ptr [rax]
0x00000000001bc0e3 : add byte ptr [rax + rdi*8], bh ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call qword ptr [rdi]
0x000000000019b25f : add byte ptr [rax + rdx - 8], al ; jmp rsp
0x000000000019b927 : add byte ptr [rax + rdx*2 - 7], dh ; jmp rsp
0x00000000001b18bb : add byte ptr [rax + rdx*2], dl ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], bh ; jmp rdi
0x00000000001ab8f3 : add byte ptr [rax + rsi*8], cl ; add byte ptr [rax], bl ; sbb edx, esi ; call qword ptr [rax]
0x00000000001af79f : add byte ptr [rax - 0x13], dh ; hlt ; jmp qword ptr [rsi]
0x00000000001aaf5f : add byte ptr [rax - 0x14], ah ; int1 ; call rdi
0x000000000013321d : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001215d3 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894c
0x00000000000f1a51 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x8b49
0x00000000001a28ef : add byte ptr [rax - 0x17], al ; in al, dx ; call qword ptr [rax]
0x0000000000030179 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b4c
0x00000000001af5c7 : add byte ptr [rax - 0x19], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001af4b7 : add byte ptr [rax - 0x1c], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001af32f : add byte ptr [rax - 0x1e], dl ; hlt ; jmp qword ptr [rbx]
0x00000000001ad60f : add byte ptr [rax - 0x28], ah ; jmp qword ptr [rax]
0x00000000001a5d97 : add byte ptr [rax - 0x28], bh ; in eax, dx ; call rdi
0x00000000001aee27 : add byte ptr [rax - 0x2a], bl ; hlt ; call qword ptr [rbx]
0x0000000000035ed1 : add byte ptr [rax - 0x2d], cl ; loopne 0x35f27 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001a223f : add byte ptr [rax - 0x30], dl ; in al, dx ; call qword ptr [rax]
0x00000000001a84d7 : add byte ptr [rax - 0x34], ch ; out dx, eax ; call rsp
0x000000000003c02f : add byte ptr [rax - 0x39], cl ; ret
0x00000000000bb205 : add byte ptr [rax - 0x39], cl ; ret 0
0x00000000000bb155 : add byte ptr [rax - 0x39], cl ; ret 0x400
0x0000000000020893 : add byte ptr [rax - 0x39], cl ; ret 0x800
0x000000000005ca22 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000006ff56 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000aae6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000aae4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000aaeaf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000aae5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000aae9f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001a84bf : add byte ptr [rax - 0x3a], dl ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000034d45 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000fee7e : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034a6a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002a45d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000c8acf : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000bf4e0 : add byte ptr [rax - 0x46], cl ; ret
0x00000000000090d7 : add byte ptr [rax - 0x47], dl ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000003c785 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001ae7df : add byte ptr [rax - 0x5d], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ae80f : add byte ptr [rax - 0x5d], dh ; hlt ; jmp qword ptr [rcx]
0x000000000011f96e : add byte ptr [rax - 0x68], cl ; pop rbx ; mov eax, dword ptr [rdx + rax*8 + 4] ; ret
0x00000000001ae557 : add byte ptr [rax - 0x69], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae56f : add byte ptr [rax - 0x69], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae45f : add byte ptr [rax - 0x6b], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1ef : add byte ptr [rax - 0x71], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae05f : add byte ptr [rax - 0x73], al ; hlt ; jmp qword ptr [rsi]
0x000000000002727f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000027263 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002d3a7 : add byte ptr [rax - 0x73], cl ; add eax, 0x15eddf ; ret
0x0000000000020b3f : add byte ptr [rax - 0x73], cl ; add eax, 0x16b15c ; ret
0x0000000000020b4f : add byte ptr [rax - 0x73], cl ; add eax, 0x16d2b5 ; ret
0x00000000000fe41c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8e54 ; ret
0x00000000000fe254 : add byte ptr [rax - 0x73], cl ; add eax, 0x2c901c ; ret
0x000000000002729b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ab46f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ab47f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x0000000000120c7f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a7f95 ; call rax
0x00000000000ab45f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000133684 : add byte ptr [rax - 0x73], cl ; jo 0x1336ca ; mov rdi, rcx ; jmp r8
0x000000000005aa6e : add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f3d92 : add byte ptr [rax - 0x73], cl ; push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004411d : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x0000000000070628 : add byte ptr [rax - 0x73], cl ; xor eax, 0x20 ; call rax
0x000000000007d4e8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe120 ; call rax
0x000000000007d048 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe5c0 ; call rax
0x000000000007cc48 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe9c0 ; call rax
0x000000000007bb88 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007b918 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x00000000000708e0 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd68 ; call rax
0x00000000001abddf : add byte ptr [rax - 0x74], al ; jmp qword ptr [rbx]
0x0000000000105ecf : add byte ptr [rax - 0x75], cl ; add al, 0 ; add byte ptr [rax], al ; ret
0x000000000012dde6 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x000000000002de81 : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; ret
0x00000000000f04c7 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000142f56 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000003a511 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000bd41f : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000001406bf : add byte ptr [rax - 0x75], cl ; add eax, 0x2823b9 ; jmp rax
0x0000000000140732 : add byte ptr [rax - 0x75], cl ; add eax, 0x284db6 ; call qword ptr [rax]
0x0000000000140135 : add byte ptr [rax - 0x75], cl ; add eax, 0x2853b3 ; call qword ptr [rax]
0x0000000000121467 : add byte ptr [rax - 0x75], cl ; add eax, 0x2a4541 ; ret
0x000000000007d8af : add byte ptr [rax - 0x75], cl ; add eax, 0x347d49 ; ret
0x000000000002a48f : add byte ptr [rax - 0x75], cl ; add eax, 0x39b5a1 ; ret
0x00000000000221ff : add byte ptr [rax - 0x75], cl ; add eax, 0x3a7641 ; ret
0x00000000000221ef : add byte ptr [rax - 0x75], cl ; add eax, 0x3a7661 ; ret
0x00000000000fdf3e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000075168 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000dca3f : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007d7b9 : add byte ptr [rax - 0x75], cl ; imul ecx, dword ptr [rax], -0x15 ; ret
0x000000000008493f : add byte ptr [rax - 0x75], cl ; je 0x8496e ; call rax
0x000000000008493e : add byte ptr [rax - 0x75], cl ; je 0x8496f ; call rax
0x000000000008522f : add byte ptr [rax - 0x75], cl ; je 0x85261 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x00000000000ec49e : add byte ptr [rax - 0x75], cl ; jge 0xec431 ; call r14
0x00000000000ec5db : add byte ptr [rax - 0x75], cl ; jge 0xec56e ; call r14
0x00000000000f23c0 : add byte ptr [rax - 0x75], cl ; jl 0xf23f1 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f4451 : add byte ptr [rax - 0x75], cl ; jl 0xf4482 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000007c3e6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000074416 : add byte ptr [rax - 0x75], cl ; jp 0x74461 ; jmp 0x743e6
0x0000000000073227 : add byte ptr [rax - 0x75], cl ; js 0x73243 ; call 0x1f4c7
0x00000000000763af : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000002e384 : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + rdi*4] ; ret
0x000000000013b237 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x0000000000023b4f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002e364 : add byte ptr [rax - 0x75], cl ; pop rax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000105ec7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000012d534 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; call rbx
0x000000000015226f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000084c0f : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x000000000010947e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000005a8d5 : add byte ptr [rax - 0x75], cl ; xor eax, 0x369683 ; call rax
0x000000000005a361 : add byte ptr [rax - 0x75], cl ; xor eax, 0x369bf7 ; call rax
0x00000000000551cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x36ed8b ; call rax
0x000000000004f2d9 : add byte ptr [rax - 0x75], cl ; xor eax, 0x374c7f ; call rax
0x0000000000049e7d : add byte ptr [rax - 0x75], cl ; xor eax, 0x37a0db ; call rax
0x00000000000f3757 : add byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff512 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000006f5f4 : add byte ptr [rax - 0x76b80000], al ; ret 0x4375
0x0000000000120710 : add byte ptr [rax - 0x77], bl ; rcr byte ptr [rcx + 0x5b], 1 ; pop rbp ; pop r12 ; ret
0x0000000000142f44 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000089716 : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x000000000014316f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000001092f7 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x35528
0x00000000000893ae : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000011605f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a48f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007d8df : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000078d8a : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006c02e : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000084843 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007362c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000073474 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000142a19 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009fa5e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0x86e8
0x0000000000088274 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000002d654 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000136fa5 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfc66
0x000000000007156f : add byte ptr [rax - 0x77], cl ; jmp 0x48f59ec8
0x0000000000136bb1 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffff8d5b8a2c
0x000000000006f0f5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000079543 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x0000000000088f93 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e39c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000006d833 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call r8
0x0000000000103c01 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012cad3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000082ebd : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x30 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000001f6e2 : add byte ptr [rax - 0x77], cl ; ret
0x00000000001280d2 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000007ea2d : add byte ptr [rax - 0x77], cl ; ret 0x1fe9
0x00000000000ae85e : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x000000000002b578 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000065371 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006f8da : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000045f54 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x000000000006f5f7 : add byte ptr [rax - 0x77], cl ; ret 0x4375
0x0000000000051d03 : add byte ptr [rax - 0x77], cl ; ret 0x57e9
0x000000000006fd4b : add byte ptr [rax - 0x77], cl ; ret 0x5e8b
0x00000000000cf2b9 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000db15d : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002f8b4 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010cf73 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007ffbf : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000005155f : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x0000000000049b27 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bb54f : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000006fe32 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002cdbf : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000000704d8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c8116 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000f1d27 : add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000009c327 : add byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000000fe5ea : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c77ce : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000006fedf : add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x00000000000fe145 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x0000000000057714 : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000008e5a0 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000043dde : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000ff3bf : add byte ptr [rax - 0x77], cl ; ret 0xd88
0x0000000000044d2a : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000000c683c : add byte ptr [rax - 0x77], cl ; ret 0xed31
0x000000000009515b : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000892f2 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007b0c0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000142efc : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000009f2c2 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x0000000000069481 : add byte ptr [rax - 0x77], cl ; test dword ptr [rax - 0x17000002], edi ; ret 0x422
0x00000000001141c4 : add byte ptr [rax - 0x77], cl ; xchg eax, r8d ; call rcx
0x000000000013194c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x131964 ; ret
0x000000000013471c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134734 ; ret
0x0000000000134734 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13474c ; ret
0x0000000000134f6c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134f84 ; ret
0x0000000000134f84 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134f9c ; ret
0x0000000000134fb4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x134fcc ; ret
0x00000000001190c7 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001a55bf : add byte ptr [rax - 0x79], dh ; in eax, dx ; call qword ptr [rsi]
0x000000000006fcc4 : add byte ptr [rax - 0x7af10000], al ; ret 0
0x00000000001bb32f : add byte ptr [rax - 0x7b], ah ; sti ; jmp qword ptr [rdx]
0x0000000000073efa : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x000000000003effc : add byte ptr [rax - 0x7b], cl ; ret 0x8949
0x0000000000052c23 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000401dc : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 1
0x00000000000a2413 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000080daf : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf539
0x00000000001385c3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x00000000000fe1ed : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x33], 0x5b ; ret
0x00000000000fe3ae : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x34], 0x5b ; ret
0x0000000000096edb : add byte ptr [rax - 0x7bf0ffc6], al ; ret
0x00000000001a738f : add byte ptr [rax - 0x7c], dl ; out dx, al ; call qword ptr [rcx]
0x000000000016c457 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000051279 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e5a89
0x0000000000084da1 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000087a4d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002dffa : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000011f0df : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000001735c6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x1735d7 ; ret
0x000000000002d3b7 : add byte ptr [rax - 0x7d], cl ; rcl byte ptr [rax], 0x48 ; mov eax, dword ptr [rsi + rax*8] ; ret
0x000000000002142c : add byte ptr [rax - 0x7d], cl ; ret
0x0000000000081fdf : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000ce28f : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000126ccf : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122d9a : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000a928f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb6f : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000833f9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x0000000000070704 : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000013dd07 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000000220a5 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002cf41 : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000075bf8 : add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000065388 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048ccf : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000001739ff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001089ca : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000009f5cf : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000000000002450d : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000297c8 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000007fed7 : add byte ptr [rax - 0x7d], cl ; ret 0x4907
0x00000000001446cf : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000073e17 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000069c48 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000b7e80 : add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x000000000008eaaf : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea3f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000b1117 : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d6b47 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x0000000000023e44 : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x0000000000024933 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e5cbf : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000e69df : add byte ptr [rax - 0x7d], cl ; ret 0x8b01
0x00000000000d1803 : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000010e1c7 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011fc40 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008de40 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000005ce5f : add byte ptr [rax - 0x7d], cl ; ret 0xe908
0x00000000001466b3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000db146 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000062f57 : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000000001446f3 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d3732 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009fd8f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002ba2f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000070275 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000116d67 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000000450c8 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000ba3f6 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x48 ; mov ecx, dword ptr [rdx + rax*8] ; jmp 0xba3bc
0x00000000000b163f : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000001a9a3f : add byte ptr [rax - 0x7f], al ; cld ; jmp qword ptr [rbx]
0x0000000000084830 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000072c4c : add byte ptr [rax - 0x7f], cl ; ret
0x000000000015888b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000705cf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001a2cff : add byte ptr [rax - 0xb], al ; in al, dx ; jmp rbx
0x0000000000141f4a : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033c9d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000352cd : add byte ptr [rax - 1], bh ; ret
0x000000000007da0e : add byte ptr [rax - 1], dil ; ret
0x00000000000e889b : add byte ptr [rax], 0 ; add al, ch ; pop rsp ; ret
0x0000000000079104 : add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007ea05 : add byte ptr [rax], 0 ; add al, ch ; ret 0x961
0x000000000006f935 : add byte ptr [rax], 0 ; add al, ch ; ret 0xa52
0x000000000006c8db : add byte ptr [rax], 0 ; add bl, dh ; ret
0x00000000000b3ff9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfef6 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000007b0bd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000173f3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013b86b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015b06b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001141c0 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rax ; call rcx
0x0000000000105ec3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000009635b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000046dbb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002c4c3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000110773 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000fbbcb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000a9cab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000966fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000711c7 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000df1dc : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8341
0x000000000007ece8 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000045895 : add byte ptr [rax], 0 ; add byte ptr [rcx], al ; ret 0xdce9
0x000000000016dfa1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a4905 : add byte ptr [rax], 0 ; fcom dword ptr [rdi - 0x13] ; jmp rax
0x0000000000034fdf : add byte ptr [rax], 0 ; ret
0x0000000000142f59 : add byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000001a9c9f : add byte ptr [rax], ah ; adc al, 0xf1 ; jmp qword ptr [rax]
0x000000000003effa : add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x8949
0x00000000001a68cb : add byte ptr [rax], ah ; add byte ptr [rax], al ; xor byte ptr [rcx], ah ; out dx, al ; jmp qword ptr [rdi]
0x000000000019e23f : add byte ptr [rax], ah ; add ch, cl ; call qword ptr [rbx]
0x00000000001b027f : add byte ptr [rax], ah ; and esi, ebp ; call rsi
0x00000000001a472f : add byte ptr [rax], ah ; in eax, dx ; jmp qword ptr [rsi]
0x000000000010e2b7 : add byte ptr [rax], ah ; jmp 0x10e280
0x000000000002e284 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000000ab47 : add byte ptr [rax], ah ; ret
0x00000000001affff : add byte ptr [rax], ah ; sbb dh, ch ; jmp qword ptr [rdx]
0x00000000001b315f : add byte ptr [rax], ah ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001a851e : add byte ptr [rax], al ; adc ah, dh ; out dx, eax ; jmp rbx
0x00000000001b0aba : add byte ptr [rax], al ; adc al, 0x42 ; add dword ptr [rax], eax ; rcl byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b10ba : add byte ptr [rax], al ; adc al, 0x48 ; add dword ptr [rax], eax ; adc byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b18ba : add byte ptr [rax], al ; adc al, 0x50 ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], bh ; jmp rdi
0x00000000001a21ba : add byte ptr [rax], al ; adc al, 0x59 ; add byte ptr [rax], al ; add al, dl ; in al, dx ; jmp qword ptr [rax]
0x00000000001b31ba : add byte ptr [rax], al ; adc al, 0x69 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001a55ba : add byte ptr [rax], al ; adc al, 0x8d ; add byte ptr [rax], al ; jo 0x1a5552 ; in eax, dx ; call qword ptr [rsi]
0x00000000001ad4ba : add byte ptr [rax], al ; adc al, 0xc ; add dword ptr [rax], eax ; adc dh, dl ; jmp qword ptr [rcx]
0x0000000000198d8e : add byte ptr [rax], al ; adc al, 0xfc ; out dx, al ; call rsp
0x0000000000198816 : add byte ptr [rax], al ; adc al, 9 ; out dx, al ; call rsp
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000103f2 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; call qword ptr [rbx]
0x0000000000010602 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000009402 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; ret 7
0x00000000001a096e : add byte ptr [rax], al ; adc byte ptr [rbx - 0x16], bl ; call rdx
0x00000000001ab62e : add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001a9d7e : add byte ptr [rax], al ; adc byte ptr [rsi], 0xf1 ; jmp rax
0x0000000000006b6a : add byte ptr [rax], al ; adc dword ptr [rax], eax ; verw word ptr [rcx] ; ret 0x18
0x00000000001a8c89 : add byte ptr [rax], al ; add ah, ah ; ret
0x00000000001a8b89 : add byte ptr [rax], al ; add ah, ah ; ret 0
0x00000000001b8c69 : add byte ptr [rax], al ; add ah, al ; ret
0x00000000001b8b69 : add byte ptr [rax], al ; add ah, al ; ret 1
0x00000000001a8ca1 : add byte ptr [rax], al ; add ah, bh ; ret
0x00000000001a8ba1 : add byte ptr [rax], al ; add ah, bh ; ret 0
0x00000000001b8b81 : add byte ptr [rax], al ; add ah, bl ; ret 1
0x00000000001a8b71 : add byte ptr [rax], al ; add ah, cl ; ret 0
0x00000000000c9893 : add byte ptr [rax], al ; add al, 0 ; add al, ch ; ret
0x0000000000198896 : add byte ptr [rax], al ; add al, 0x14 ; out dx, al ; call rsp
0x00000000001af5aa : add byte ptr [rax], al ; add al, 0x2d ; add dword ptr [rax], eax ; xor bh, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000198a76 : add byte ptr [rax], al ; add al, 0x4a ; out dx, al ; jmp rsp
0x00000000001b16aa : add byte ptr [rax], al ; add al, 0x4e ; add dword ptr [rax], eax ; jo 0x1b16b1 ; jmp qword ptr [rcx]
0x0000000000198be6 : add byte ptr [rax], al ; add al, 0x65 ; out dx, al ; jmp rsp
0x00000000001b2faa : add byte ptr [rax], al ; add al, 0x67 ; add dword ptr [rax], eax ; nop ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001b3baa : add byte ptr [rax], al ; add al, 0x73 ; add dword ptr [rax], eax ; cmp sil, sil ; call qword ptr [rax]
0x00000000001983de : add byte ptr [rax], al ; add al, 0x7d ; in eax, dx ; jmp rsp
0x00000000001981c6 : add byte ptr [rax], al ; add al, 0x82 ; jmp 0x1981d0
0x00000000001ad3aa : add byte ptr [rax], al ; add al, 0xb ; add dword ptr [rax], eax ; adc ch, 0xf3 ; call qword ptr [rbx]
0x00000000001a7eaa : add byte ptr [rax], al ; add al, 0xb6 ; add byte ptr [rax], al ; nop ; outsd dx, dword ptr [rsi] ; out dx, eax ; call rax
0x00000000001a85aa : add byte ptr [rax], al ; add al, 0xbd ; add byte ptr [rax], al ; rcr byte ptr [rcx], 1 ; cli ; jmp qword ptr [rdi]
0x000000000019caaa : add byte ptr [rax], al ; add al, 2 ; add byte ptr [rax], al ; xor byte ptr [rcx - 0x18], cl ; call qword ptr [rcx]
0x00000000001987ee : add byte ptr [rax], al ; add al, 6 ; out dx, al ; jmp rsp
0x000000000001c28d : add byte ptr [rax], al ; add al, ah ; ret 7
0x00000000001115a7 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000132c43 : add byte ptr [rax], al ; add al, ch ; cmc ; ret 0xffff
0x00000000001431ac : add byte ptr [rax], al ; add al, ch ; in al, dx ; ret 0xffed
0x00000000000e889c : add byte ptr [rax], al ; add al, ch ; pop rsp ; ret
0x0000000000079105 : add byte ptr [rax], al ; add al, ch ; ret
0x000000000007ea06 : add byte ptr [rax], al ; add al, ch ; ret 0x961
0x000000000006f936 : add byte ptr [rax], al ; add al, ch ; ret 0xa52
0x00000000000dac96 : add byte ptr [rax], al ; add al, ch ; ret 0xf447
0x00000000000ff716 : add byte ptr [rax], al ; add al, ch ; ret 0xf782
0x000000000009f8e6 : add byte ptr [rax], al ; add al, ch ; ret 0xf8e7
0x000000000008d883 : add byte ptr [rax], al ; add al, ch ; xor eax, 0x39fffa8e ; ret
0x000000000001c2ed : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001c2a5 : add byte ptr [rax], al ; add al, dh ; ret 7
0x00000000001a21be : add byte ptr [rax], al ; add al, dl ; in al, dx ; jmp qword ptr [rax]
0x0000000000173f3d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013187a : add byte ptr [rax], al ; add bh, bh ; loope 0x131817 ; ret
0x00000000000cd34a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000d7550 : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d754a : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00000000000d6c4a : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000008976a : add byte ptr [rax], al ; add bl, al ; ret
0x00000000001347cc : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000001b0287 : add byte ptr [rax], al ; add bl, byte ptr [rbp + 0x283100e] ; ret
0x0000000000088892 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000d884b : add byte ptr [rax], al ; add bl, ch ; ret 0x8d4c
0x00000000000a5f1d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a5f2d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002c4c5 : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000019e29e : add byte ptr [rax], al ; add bpl, cl ; call qword ptr [rbx]
0x000000000019e316 : add byte ptr [rax], al ; add bpl, cl ; call qword ptr [rcx]
0x000000000019e2fe : add byte ptr [rax], al ; add bpl, cl ; jmp qword ptr [rax]
0x00000000000cc3cd : add byte ptr [rax], al ; add byte ptr [rax + 0x20], bh ; ret
0x0000000000054f13 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000bfab3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000051e61 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000005521f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002c52c : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000195bab : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000af61d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001316fd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000007415d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000e0b47 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf748
0x00000000000a646d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000cc258 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000c7ecc : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000079d10 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000ca73e : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000140072 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000025ad4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8545
0x000000000007a669 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000029711 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000f98c2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000582b9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xbd83
0x00000000000287f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cc2ac : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cc31d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000490d3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a9da0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000bba2f : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000bab5b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012e0dd : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000013f26d : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000000000cc524 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x0000000000033f3d : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x00000000001b8b3d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001a8b9d : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add ah, bh ; ret 0
0x00000000001a8c9d : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add ah, bh ; ret
0x00000000001b8c65 : add byte ptr [rax], al ; add byte ptr [rax + rax], cl ; add ah, al ; ret
0x00000000000ab423 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000fd05d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000034a68 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002a45b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000c8acd : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ab46d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ab47d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ab45d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000bd41d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000fdf3c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000dca3d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007d7b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; imul ecx, dword ptr [rax], -0x15 ; ret
0x00000000000ec49c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0xec433 ; call r14
0x00000000000ec5d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jge 0xec570 ; call r14
0x000000000007c3e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000074414 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x74463 ; jmp 0x743e8
0x0000000000073225 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x73245 ; call 0x1f4c9
0x0000000000023b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000105ec5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000014316d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000007d8dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000002d652 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000088f91 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e39a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000006d831 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call r8
0x0000000000103bff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000001f6e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ae85c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x000000000006fd49 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5e8b
0x00000000000f05fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000007ffbd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000ec0b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000704d6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000dfef7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000006fedd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x000000000005247d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000ff3bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd88
0x00000000000c683a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed31
0x0000000000095159 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007b0be : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001141c2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xchg eax, r8d ; call rcx
0x0000000000052c21 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001385c1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x0000000000096ed9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7bf0ffc6], al ; ret
0x000000000002b2ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000081fdd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000ce28d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000126ccd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x000000000012bb7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000a928d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fec2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000070702 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x00000000000220a3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000075bf6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x00000000001739fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001089c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000101b41 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000297c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000007fed5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4907
0x00000000001461f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d59fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000024931 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000005ce5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe908
0x0000000000147d71 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000067c6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000014621d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d3730 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009fd8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002ba2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000b163d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000bc55f : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000015a084 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033c9b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000352cb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000003eff8 : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x8949
0x000000000001c2d5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001c28b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 7
0x00000000000e6bb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001c2eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001c2a3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 7
0x00000000000a5f2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000076cdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007415b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x00000000000ab46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ab47b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ab45b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007d8db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007ffbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000df4cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000006fedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xb4e9
0x000000000002b2ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000081fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000012bb7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000a928b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fec2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000009843b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000173b6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d59fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000067c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000003eff6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x8949
0x000000000001c2d3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x000000000001c289 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 7
0x00000000000e6bb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001c2e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001c2a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 7
0x000000000001c2d1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000001beb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bfac0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001bdfe8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000001580 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000198e9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x18
0x000000000001aea9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x18
0x0000000000019979 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret 0x18
0x0000000000019991 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bl ; ret 0x18
0x0000000000018131 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret 0x18
0x0000000000019919 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dl ; ret 0x18
0x000000000000a192 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x00000000001864fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 0x6d ; out dx, al ; call rax
0x0000000000194efa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000000011d6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bfac2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000a162 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x0000000000018132 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x000000000001985a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c1
0x000000000001071a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000017d7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000000042ca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x25
0x0000000000004a92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000017dc92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000ef7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38
0x0000000000009982 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x00000000001bdfea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000001582 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000198eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x18
0x00000000000a8ceb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000003f016 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax + 0x21], cl ; ret 0x8348
0x00000000000456ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000137d9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bdf93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 6], bl ; add byte ptr [rax], al ; ret 5
0x000000000003a689 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000101a4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000001245fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000a94cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000012469b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x00000000000d7cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000001446ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000194efb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000001aeab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x18
0x000000000005334b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; push rsi ; ret 0xb850
0x000000000001997b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret 0x18
0x0000000000019993 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bl ; ret 0x18
0x0000000000018133 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret 0x18
0x000000000001991b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dl ; ret 0x18
0x0000000000185d3f : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; fdivp st(7) ; call qword ptr [rsi]
0x00000000000dba8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006f02b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000534db : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000000000aae2c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000c64bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fe52c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001bd238 : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rax], ecx ; add byte ptr [rax], al ; ret
0x00000000001431ab : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f4a6
0x0000000000173f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000014333c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000017f7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017e97c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000000fba17 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000001085c7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000fdd85 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000ca73d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000001fc65 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000097426 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000001a8c9c : add byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000000001a8b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1a8bab ; add byte ptr [rax], al ; cld ; ret 0
0x000000000000a194 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000004cd5f : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001703bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001703cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001703dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001703ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001703fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000017033c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000017034c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017035c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000017036c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000017037c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000017038c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000017039c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001703ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ab45c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ab47c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ab46c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000017032c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000001864fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov al, 0x6d ; out dx, al ; call rax
0x00000000001684dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a646c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a4e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a5e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a5b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016851c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016853c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000016850c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f622c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a5e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a5e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a5e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000cc3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000cc31c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007363c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000490d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e0dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000013b86c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d598c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000c730c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x00000000001190fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000006ecbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000012469c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000001183cb : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11839c
0x000000000015b06c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076a24 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000001141c1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rax ; call rcx
0x000000000016854c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013bc18 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a5e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a5eac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012d9ea : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000105ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000c71fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007d8cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007d8dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000006f9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000173294 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rbx, qword ptr [rdi] ; call 0x1f4c9
0x00000000001684ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a5e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a5f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a5f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000015b1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002078b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000132db8 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013ba19 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096ca2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001090d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a68a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007c690 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ae81 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000194efc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000195baa : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000011d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ea1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000a164 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x0000000000018134 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x000000000001985c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c1
0x000000000001071c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000017e79c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017ef34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000017d7a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000000042cc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x25
0x0000000000004a94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000017dc94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000ef7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38
0x0000000000009984 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x0000000000009f1c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001bdfec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x0000000000001584 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x0000000000110774 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000a8cec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a592 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003abac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000966fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000198ed : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0x18
0x00000000000a8ced : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000003f018 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax + 0x21], cl ; ret 0x8348
0x00000000001b8c66 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, al ; ret
0x00000000000531bb : add byte ptr [rax], al ; add byte ptr [rbp + 0x29], al ; rol byte ptr [rbp - 0x77], 1 ; ret 0x98e9
0x000000000002a120 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r14
0x00000000000c1f1b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000456ad : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x00000000000540fc : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000071f3f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000ee11b : add byte ptr [rax], al ; add byte ptr [rbp + 0x6348ff55], cl ; ret 0x8d48
0x0000000000066f5f : add byte ptr [rax], al ; add byte ptr [rbp + 0x76850fff], al ; ret 0xffff
0x000000000013bb84 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x00000000000fbfae : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x25], cl ; jmp qword ptr [rax]
0x000000000012cf78 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000e2562 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x95 ; ret 0xe183
0x00000000000632cd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb776f4], cl ; ret
0x00000000000d90ec : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d470d : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006c875 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000a9ae9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000e181b : add byte ptr [rax], al ; add byte ptr [rbx + 0x3958244c], cl ; ret 0x1472
0x0000000000115556 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015a94d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000036a90 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002a5c9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003573e : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ad3ef : add byte ptr [rax], al ; add byte ptr [rbx + 0x97413f8], al ; mov edx, eax ; jmp 0xad3c9
0x00000000000afc4f : add byte ptr [rax], al ; add byte ptr [rbx + 0x97413f8], al ; mov edx, eax ; jmp 0xafc29
0x00000000000b230f : add byte ptr [rax], al ; add byte ptr [rbx + 0x97413f8], al ; mov edx, eax ; jmp 0xb22e9
0x000000000003a7ed : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x000000000008888d : add byte ptr [rax], al ; add byte ptr [rbx + 2], bh ; jmp 0x88863
0x00000000001bdf95 : add byte ptr [rax], al ; add byte ptr [rbx + 6], bl ; add byte ptr [rax], al ; ret 5
0x00000000001700d8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000000583b0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10a743], al ; call qword ptr [rax]
0x0000000000056b77 : add byte ptr [rax], al ; add byte ptr [rbx - 0x10d743], al ; call qword ptr [rax]
0x000000000003a68b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000006f4d6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e9a3d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000101a4d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000074404 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x000000000016853d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012fafa : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x00000000000c85c0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x0000000000070b65 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000116764 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000016851d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a5e7d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000076a25 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000001245fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000000000a97df : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000df1dd : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8341
0x00000000000a94cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000ed78e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x89a58
0x0000000000103841 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x00000000000babc1 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0x0000000000112315 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x10e528
0x000000000002f38c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000103975 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cbd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x000000000012469d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x000000000007ece9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000005714e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x733a8
0x00000000001037aa : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x00000000001037b9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001a4dee : add byte ptr [rax], al ; add byte ptr [rcx - 0x13], dh ; jmp qword ptr [rcx]
0x00000000000f622d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000d6b0b : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret
0x000000000012c769 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rax ; adc dh, dh ; ret 0x7401
0x00000000000aeedc : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000038fd5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000000b3f17 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000008e140 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000002165d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000000e111f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d7cfd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000ee853 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00000000000e3c0f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000001446ad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007aebd : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; enter 0x4880, -0x77 ; ret
0x0000000000194efd : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008ebd0 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ebf6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x0000000000045896 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xdce9
0x0000000000045d74 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfee9
0x00000000000d4575 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4506
0x00000000000b8a45 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000e779f : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x860f
0x00000000000d9266 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e2752 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000d90fb : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x0000000000110775 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; clc ; ret
0x000000000008d91c : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x000000000001aead : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x18
0x00000000000c4dc8 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c305b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c14f5 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a07b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x00000000000c2fc4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c1234 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c1533 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret 0x145
0x00000000000fcebf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x000000000005334d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; push rsi ; ret 0xb850
0x0000000000039fda : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008b5d7 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x00000000000aab42 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172182 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000875a4 : add byte ptr [rax], al ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000000e6f98 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x00000000001154a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000a9a45 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b14d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b1bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000263cf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d027d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008eaed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c5f04 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c43de : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x00000000000b4fee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1f0f
0x00000000000dda13 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3b41
0x000000000001fc66 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x41c3
0x000000000002affe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000001156ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000004472c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x000000000004524c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000fba18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eb03d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xbce9
0x00000000000db25f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x000000000004595e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd3e9
0x00000000000c223f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000ed0fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000133cb0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xda09
0x0000000000149fc5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000d6cbc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000013519d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x00000000001a817e : add byte ptr [rax], al ; add byte ptr [rdx - 0x11], bh ; call qword ptr [rcx]
0x00000000001aa02e : add byte ptr [rax], al ; add byte ptr [rdx - 0xf], al ; jmp qword ptr [rcx]
0x000000000001997d : add byte ptr [rax], al ; add byte ptr [rdx], bl ; ret 0x18
0x000000000016dfa2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008ea02 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000103783 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f6b35 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001baf1e : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x000000000019ef8e : add byte ptr [rax], al ; add byte ptr [rsi - 0x17], ah ; jmp qword ptr [rcx]
0x0000000000019995 : add byte ptr [rax], al ; add byte ptr [rsi], bl ; ret 0x18
0x0000000000018135 : add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret 0x18
0x000000000001991d : add byte ptr [rax], al ; add byte ptr [rsi], dl ; ret 0x18
0x00000000000f6207 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000019e1df : add byte ptr [rax], al ; add ch, cl ; call qword ptr [rbx]
0x000000000010e97a : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x75] ; push rsp ; and al, 0x18 ; call rax
0x0000000000050460 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000effb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xf3ea
0x0000000000040f66 : add byte ptr [rax], al ; add cl, ch ; ret 0xffe4
0x00000000000f0823 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x0000000000085f31 : add byte ptr [rax], al ; add dh, al ; and al, 0x20 ; add al, ch ; ret 0xfc37
0x0000000000185d41 : add byte ptr [rax], al ; add dh, bl ; fdivp st(7) ; call qword ptr [rsi]
0x00000000000259e8 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000024716 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000006f02d : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000001715f1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000f744d : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000534dd : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000000000a03f0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a03f9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000001aed9f : add byte ptr [rax], al ; add dl, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000001b2ff2 : add byte ptr [rax], al ; add dword ptr [eax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x0000000000114482 : add byte ptr [rax], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000de2b4 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d4576 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001b300a : add byte ptr [rax], al ; add dword ptr fs:[eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001aff0a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; add byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b16f2 : add byte ptr [rax], al ; add qword ptr [rax], r8 ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b10ea : add byte ptr [rax], al ; add qword ptr [rax], rax ; cmc ; jmp qword ptr [rcx]
0x00000000000aae2e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000008e8b4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000132431 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000134ef1 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134651 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000131874 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000c64be : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003583a : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000035206 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x0000000000034996 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000034c8b : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000034fc6 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000020d5b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007b88c : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001190bb : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f78d : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000020bbc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00000000000354da : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000044d31 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d82a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000022257 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036d2e : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001b8b3e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x0000000000198b5e : add byte ptr [rax], al ; and al, 0x61 ; out dx, al ; jmp rsp
0x0000000000198f46 : add byte ptr [rax], al ; and al, 0x63 ; out dx, eax ; jmp rsp
0x00000000001b30ca : add byte ptr [rax], al ; and al, 0x68 ; add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b5dca : add byte ptr [rax], al ; and al, 0x95 ; add dword ptr [rax], eax ; sbb dl, 0xf6 ; call qword ptr [rdi]
0x00000000001a68ca : add byte ptr [rax], al ; and al, 0xa0 ; add byte ptr [rax], al ; xor byte ptr [rcx], ah ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a4bfe : add byte ptr [rax], al ; and byte ptr [rax - 0x13], ch ; jmp rsi
0x00000000001a9c9e : add byte ptr [rax], al ; and byte ptr [rcx + rsi*8], dl ; jmp qword ptr [rax]
0x00000000001a472e : add byte ptr [rax], al ; and byte ptr [rsi - 0x13], cl ; jmp qword ptr [rsi]
0x00000000001bd23a : add byte ptr [rax], al ; and dword ptr [rax], ecx ; add byte ptr [rax], al ; ret
0x000000000010704f : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x00000000001a6886 : add byte ptr [rax], al ; and sil, bpl ; jmp qword ptr [rdx]
0x000000000008eaee : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008b937 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008d424 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x000000000019fa56 : add byte ptr [rax], al ; call 0x1219e409
0x00000000001a9c36 : add byte ptr [rax], al ; call 0x121a8d4b
0x0000000000132c44 : add byte ptr [rax], al ; call 0x12ef44
0x00000000001a5636 : add byte ptr [rax], al ; call 0x131a43c9
0x00000000000bb14f : add byte ptr [rax], al ; call 0x1436f9
0x00000000001a85c6 : add byte ptr [rax], al ; call 0x181a7fec
0x00000000000e3166 : add byte ptr [rax], al ; call 0x1f464
0x00000000001431ad : add byte ptr [rax], al ; call 0x1f4a4
0x00000000001a9bb6 : add byte ptr [rax], al ; call 0x221a8ccb
0x00000000001aa016 : add byte ptr [rax], al ; call 0x221a9163
0x00000000001ab356 : add byte ptr [rax], al ; call 0x221aa55e
0x00000000001a4256 : add byte ptr [rax], al ; call 0x281a2fa7
0x00000000000cdd38 : add byte ptr [rax], al ; call 0x2e0b8
0x0000000000109223 : add byte ptr [rax], al ; call 0x35524
0x000000000010dfae : add byte ptr [rax], al ; call 0x72489
0x00000000001aa816 : add byte ptr [rax], al ; call 0xffffffffd81a99ef
0x0000000000173f3e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000017cc62 : add byte ptr [rax], al ; call qword ptr [rcx]
0x00000000000bacae : add byte ptr [rax], al ; call r12
0x00000000000baf6e : add byte ptr [rax], al ; call r15
0x0000000000020a60 : add byte ptr [rax], al ; call rax
0x0000000000103789 : add byte ptr [rax], al ; call rbx
0x000000000014333e : add byte ptr [rax], al ; call rcx
0x000000000017f7ce : add byte ptr [rax], al ; call rdi
0x0000000000030412 : add byte ptr [rax], al ; call rdx
0x000000000017e97e : add byte ptr [rax], al ; call rsp
0x000000000019e1c6 : add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rdx]
0x000000000019e136 : add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rsi]
0x000000000019d0b6 : add byte ptr [rax], al ; clc ; jno 0x19d0a8 ; call qword ptr [rax]
0x00000000001a5aa6 : add byte ptr [rax], al ; clc ; popfq ; in eax, dx ; call qword ptr [rdi]
0x00000000001ab6a2 : add byte ptr [rax], al ; cld ; in eax, dx ; add byte ptr [rax], al ; sub byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001a8ca2 : add byte ptr [rax], al ; cld ; ret
0x00000000001a8ba2 : add byte ptr [rax], al ; cld ; ret 0
0x00000000001a71a2 : add byte ptr [rax], al ; cld ; test al, 0 ; add byte ptr [rax + 0x76], ch ; out dx, al ; call qword ptr [rax]
0x00000000001a5aa2 : add byte ptr [rax], al ; cld ; xchg eax, ecx ; add byte ptr [rax], al ; clc ; popfq ; in eax, dx ; call qword ptr [rdi]
0x00000000001a2cfe : add byte ptr [rax], al ; cmc ; in al, dx ; jmp rbx
0x00000000001a4326 : add byte ptr [rax], al ; cmc ; mov bh, 0xe7 ; call rdx
0x00000000000fba19 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x00000000001085c9 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x000000000012410f : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000fdd87 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000ca73f : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000001fc67 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000097428 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000cc2ad : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010e86f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001aab46 : add byte ptr [rax], al ; cmp ah, bl ; int1 ; call rdi
0x00000000001af4e2 : add byte ptr [rax], al ; cmp al, 0x2c ; add dword ptr [rax], eax ; fsub st(4) ; hlt ; jmp qword ptr [rcx]
0x00000000001b0fe2 : add byte ptr [rax], al ; cmp al, 0x47 ; add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b12e2 : add byte ptr [rax], al ; cmp al, 0x4a ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b30e2 : add byte ptr [rax], al ; cmp al, 0x68 ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001a6ee2 : add byte ptr [rax], al ; cmp al, 0xa6 ; add byte ptr [rax], al ; test al, 0x49 ; out dx, al ; jmp qword ptr [rax]
0x00000000001a7ce2 : add byte ptr [rax], al ; cmp al, 0xb4 ; add byte ptr [rax], al ; or al, bh ; out dx, al ; call rcx
0x00000000001ab2e2 : add byte ptr [rax], al ; cmp al, 0xea ; add byte ptr [rax], al ; cwde ; stc ; int1 ; call qword ptr [rax]
0x00000000001bc0e2 : add byte ptr [rax], al ; cmp al, 0xf8 ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call qword ptr [rdi]
0x000000000016c456 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001aa106 : add byte ptr [rax], al ; cmp byte ptr [rcx - 0xf], cl ; call qword ptr [rdx]
0x00000000001b3b0f : add byte ptr [rax], al ; cmp dh, dh ; call qword ptr [rax]
0x00000000000ad3f0 : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xad408 ; mov edx, eax ; jmp 0xad3c8
0x00000000000afc50 : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xafc68 ; mov edx, eax ; jmp 0xafc28
0x00000000000b2310 : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xb2328 ; mov edx, eax ; jmp 0xb22e8
0x0000000000075ae7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x75af8 ; pop rbx ; ret
0x00000000000cafc0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcafd3 ; ret
0x00000000000abae7 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xabb01 ; mov eax, edi ; ret
0x00000000000c618e : add byte ptr [rax], al ; cmp esi, 1 ; je 0xc61a9 ; xor eax, eax ; ret
0x0000000000073e95 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x73ea9 ; ret
0x00000000000cc398 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcc3d8 ; ret
0x00000000001a4f56 : add byte ptr [rax], al ; cwde ; je 0x1a4f4d ; call qword ptr [rsi]
0x00000000001ab2e6 : add byte ptr [rax], al ; cwde ; stc ; int1 ; call qword ptr [rax]
0x00000000001a6d16 : add byte ptr [rax], al ; fadd dword ptr [rbx - 0x12] ; call qword ptr [rax]
0x000000000019e566 : add byte ptr [rax], al ; fcom dword ptr [rcx + rbp*8] ; call qword ptr [rdx]
0x00000000001a4906 : add byte ptr [rax], al ; fcom dword ptr [rdi - 0x13] ; jmp rax
0x00000000001a6882 : add byte ptr [rax], al ; fcomp qword ptr [rdi + 0x20480000] ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ae882 : add byte ptr [rax], al ; fcomp qword ptr [rdi] ; add dword ptr [rax], eax ; call 0x221add39
0x00000000001aa182 : add byte ptr [rax], al ; fcomp st(0), st(0) ; add byte ptr [rax], al ; test al, 0x7c ; int1 ; call qword ptr [rax]
0x00000000001aa682 : add byte ptr [rax], al ; fcomp st(0), st(5) ; add byte ptr [rax], al ; test al, 0xcb ; int1 ; call qword ptr [rbx]
0x00000000001af982 : add byte ptr [rax], al ; fdiv qword ptr [rax] ; add dword ptr [rax], eax ; cwde ; clc ; hlt ; jmp qword ptr [rcx]
0x00000000001aff82 : add byte ptr [rax], al ; fdiv qword ptr [rsi] ; add dword ptr [rax], eax ; js 0x1affac ; cmc ; jmp qword ptr [rcx]
0x0000000000197b0e : add byte ptr [rax], al ; fldl2t ; call rsp
0x00000000001b1782 : add byte ptr [rax], al ; fmul qword ptr [rsi + 1] ; add byte ptr [rax], bl ; jno 0x1b1789 ; jmp qword ptr [rcx]
0x0000000000034f06 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001b3082 : add byte ptr [rax], al ; fsub qword ptr [rdi + 1] ; add byte ptr [rax], cl ; or al, 0xf9 ; jmp qword ptr [rsi]
0x00000000001bb682 : add byte ptr [rax], al ; fsub st(5), st(0) ; add dword ptr [rax], eax ; cwde ; cmp eax, edi ; call rbx
0x000000000019f306 : add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x17] ; jmp rsp
0x00000000001af482 : add byte ptr [rax], al ; fsubr qword ptr [rbx] ; add dword ptr [rax], eax ; sbb ah, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b309a : add byte ptr [rax], al ; hlt ; add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001af79a : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; jo 0x1af798 ; hlt ; jmp qword ptr [rsi]
0x00000000001aff9a : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001b179a : add byte ptr [rax], al ; hlt ; add qword ptr [rax], r8 ; xor byte ptr [rcx - 0xb], dh ; jmp rbx
0x00000000001a3eb2 : add byte ptr [rax], al ; hlt ; and dword ptr [rax], eax ; add byte ptr [rax], ch ; cmp ebp, ebp ; jmp qword ptr [rbx]
0x000000000019775e : add byte ptr [rax], al ; hlt ; cmp cl, ch ; jmp rsp
0x000000000019876e : add byte ptr [rax], al ; hlt ; imul ch ; call rsp
0x00000000001ab59a : add byte ptr [rax], al ; hlt ; in al, dx ; add byte ptr [rax], al ; mov al, 5 ; jmp qword ptr [rcx]
0x00000000001986ee : add byte ptr [rax], al ; hlt ; in eax, -0x13 ; inc esp ; ret 0
0x00000000001983ae : add byte ptr [rax], al ; hlt ; jns 0x1983a5 ; call rsp
0x00000000001a9c9a : add byte ptr [rax], al ; hlt ; rol dword ptr [rax], cl ; add byte ptr [rax], ah ; adc al, 0xf1 ; jmp qword ptr [rax]
0x00000000001b31ea : add byte ptr [rax], al ; imul r8d, dword ptr [rcx], 0xf619b000 ; jmp qword ptr [rsi]
0x00000000001ab68a : add byte ptr [rax], al ; in al, -0x13 ; add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x000000000019824e : add byte ptr [rax], al ; in al, -0x28 ; jmp 0x198258
0x00000000001a738a : add byte ptr [rax], al ; in al, -0x56 ; add byte ptr [rax], al ; push rax ; test dh, ch ; call qword ptr [rcx]
0x0000000000198516 : add byte ptr [rax], al ; in al, -0x57 ; in eax, dx ; call rsp
0x00000000001b698a : add byte ptr [rax], al ; in al, -0x60 ; add dword ptr [rax], eax ; and ch, cl ; sti ; call rsi
0x00000000001abd8a : add byte ptr [rax], al ; in al, -0xc ; add byte ptr [rax], al ; mov al, 0x8a ; call rdi
0x00000000001af46f : add byte ptr [rax], al ; in al, -0xc ; jmp qword ptr [rcx]
0x0000000000198746 : add byte ptr [rax], al ; in al, -0xf ; in eax, dx ; call rsp
0x00000000001ade8a : add byte ptr [rax], al ; in al, 0x15 ; add dword ptr [rax], eax ; jo 0x1adef4 ; stc ; call qword ptr [rax]
0x000000000019ef8a : add byte ptr [rax], al ; in al, 0x26 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x17], ah ; jmp qword ptr [rcx]
0x00000000001af38a : add byte ptr [rax], al ; in al, 0x2a ; add dword ptr [rax], eax ; mov al, 0xe2 ; hlt ; jmp qword ptr [rcx]
0x00000000001b318a : add byte ptr [rax], al ; in al, 0x68 ; add dword ptr [rax], eax ; push rax ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001ad48a : add byte ptr [rax], al ; in al, 0xb ; add dword ptr [rax], eax ; loopne 0x1ad470 ; jmp qword ptr [rcx]
0x00000000001b0e92 : add byte ptr [rax], al ; in al, dx ; add dword ptr [r8], r8d ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b1192 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], rax ; cmc ; jmp qword ptr [rcx]
0x00000000001a4392 : add byte ptr [rax], al ; in al, dx ; jp 0x1a43a0 ; add al, cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a6d92 : add byte ptr [rax], al ; in al, dx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rdx]
0x00000000001bb092 : add byte ptr [rax], al ; in al, dx ; out 1, eax ; add byte ptr [rax + 0xb], ch ; clc ; jmp qword ptr [rcx]
0x00000000001b6592 : add byte ptr [rax], al ; in al, dx ; pushfq ; add dword ptr [rax], eax ; adc rdi, rsi ; call qword ptr [rcx]
0x00000000001ae692 : add byte ptr [rax], al ; in al, dx ; sbb eax, 0x51780001 ; stc ; call qword ptr [rax]
0x00000000001b7792 : add byte ptr [rax], al ; in al, dx ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], cl ; call qword ptr [rdi]
0x00000000001af592 : add byte ptr [rax], al ; in al, dx ; sub al, 1 ; add byte ptr [rax], bl ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001a5d92 : add byte ptr [rax], al ; in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; js 0x1a5d7b ; in eax, dx ; call rdi
0x0000000000197bee : add byte ptr [rax], al ; in eax, -0x17 ; call rsp
0x00000000001a8c9e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000000001b1312 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add qword ptr [rax], rax ; js 0x1b138c ; cmc ; jmp qword ptr [rcx]
0x00000000001bc112 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; clc ; add dword ptr [rax], eax ; clc ; call qword ptr [rax]
0x00000000001b147f : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a6d12 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fadd dword ptr [rbx - 0x12] ; call qword ptr [rax]
0x00000000001b9c12 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; rol dword ptr [rcx], cl ; add al, bh ; fcompi st(7) ; jmp rdx
0x00000000001aa012 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xlatb ; add byte ptr [rax], al ; call 0x221a9167
0x00000000001afa12 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor dword ptr [rcx], eax ; add al, bh ; clc ; hlt ; jmp rcx
0x00000000001aa02f : add byte ptr [rax], al ; int1 ; jmp qword ptr [rcx]
0x000000000019868e : add byte ptr [rax], al ; iretd ; in eax, dx ; jmp rsp
0x00000000001a3bf2 : add byte ptr [rax], al ; jae 0x1a3c00 ; add byte ptr [rax], bl ; xor ch, ch ; jmp rbx
0x00000000001b3af2 : add byte ptr [rax], al ; jb 0x1b3b01 ; add byte ptr [rax], cl ; cmp dh, dh ; call qword ptr [rax]
0x00000000001b3b0a : add byte ptr [rax], al ; jb 0x1b3b19 ; add byte ptr [rax], al ; cmp dh, dh ; call qword ptr [rax]
0x00000000000f6b36 : add byte ptr [rax], al ; jbe 0xf6b45 ; ret
0x00000000001986de : add byte ptr [rax], al ; je 0x1986cd ; in eax, dx ; call qword ptr [rdx + rax*8]
0x0000000000198b06 : add byte ptr [rax], al ; je 0x198b66 ; out dx, al ; jmp rsp
0x00000000001a851a : add byte ptr [rax], al ; je 0x1a84e3 ; add byte ptr [rax], al ; adc ah, dh ; out dx, eax ; jmp rbx
0x00000000001b0a1a : add byte ptr [rax], al ; je 0x1b0a68 ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dl ; jmp rax
0x00000000000714c7 : add byte ptr [rax], al ; je 0x714e1 ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000000875a5 : add byte ptr [rax], al ; je 0x875b5 ; ret
0x00000000000890a6 : add byte ptr [rax], al ; je 0x890b4 ; ret
0x000000000009439d : add byte ptr [rax], al ; je 0x943a6 ; ret
0x0000000000096c32 : add byte ptr [rax], al ; je 0x96c49 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab424 : add byte ptr [rax], al ; je 0xab498 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000e7206 : add byte ptr [rax], al ; je 0xe7246 ; xor eax, eax ; ret
0x00000000000f6208 : add byte ptr [rax], al ; je 0xf6215 ; ret
0x0000000000172183 : add byte ptr [rax], al ; jg 0x172196 ; neg eax ; ret
0x00000000000aab43 : add byte ptr [rax], al ; jg 0xaab4f ; neg eax ; ret
0x00000000001700d9 : add byte ptr [rax], al ; jl 0x1700e6 ; neg eax ; ret
0x00000000001a4322 : add byte ptr [rax], al ; jl 0x1a43a9 ; add byte ptr [rax], al ; cmc ; mov bh, 0xe7 ; call rdx
0x00000000001a7822 : add byte ptr [rax], al ; jl 0x1a77de ; add byte ptr [rax], al ; mov ah, ah ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a8b9e : add byte ptr [rax], al ; jl 0x1a8ba9 ; add byte ptr [rax], al ; cld ; ret 0
0x00000000001a8c22 : add byte ptr [rax], al ; jl 0x1a8bf2 ; add byte ptr [rax], al ; pop rax ; xor dh, al ; jmp rdx
0x00000000001ae522 : add byte ptr [rax], al ; jl 0x1ae54b ; add dword ptr [rax], eax ; clc ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001aee22 : add byte ptr [rax], al ; jl 0x1aee54 ; add dword ptr [rax], eax ; pop rax ; salc ; hlt ; call qword ptr [rbx]
0x00000000001aff22 : add byte ptr [rax], al ; jl 0x1aff65 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f22 : add byte ptr [rax], al ; jl 0x1b0f75 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001b1222 : add byte ptr [rax], al ; jl 0x1b1278 ; add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b3022 : add byte ptr [rax], al ; jl 0x1b3096 ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x000000000010da20 : add byte ptr [rax], al ; jmp 0x10d92f
0x000000000019ef8f : add byte ptr [rax], al ; jmp 0x1198
0x000000000001f469 : add byte ptr [rax], al ; jmp 0x1f429
0x000000000005744e : add byte ptr [rax], al ; jmp 0x573db
0x00000000000627ee : add byte ptr [rax], al ; jmp 0x5a5b1
0x0000000000066f30 : add byte ptr [rax], al ; jmp 0x631e4
0x0000000000063bf8 : add byte ptr [rax], al ; jmp 0x63cc7
0x0000000000088893 : add byte ptr [rax], al ; jmp 0x8885d
0x00000000000d884c : add byte ptr [rax], al ; jmp 0xd8815
0x00000000000f3074 : add byte ptr [rax], al ; jmp 0xf2c16
0x00000000001875cc : add byte ptr [rax], al ; jmp qword ptr [rax]
0x000000000000a196 : add byte ptr [rax], al ; jmp qword ptr [rsi]
0x0000000000035185 : add byte ptr [rax], al ; jmp rax
0x000000000013187b : add byte ptr [rax], al ; jmp rcx
0x000000000013bb85 : add byte ptr [rax], al ; jne 0x13bb94 ; ret
0x000000000013bbc5 : add byte ptr [rax], al ; jne 0x13bbd4 ; ret
0x00000000001a4def : add byte ptr [rax], al ; jno 0x1a4de4 ; jmp qword ptr [rcx]
0x00000000001b176f : add byte ptr [rax], al ; jno 0x1b176c ; jmp qword ptr [rcx]
0x00000000001be8c6 : add byte ptr [rax], al ; jnp 0x1be8d2 ; add byte ptr [rax], al ; ret 6
0x00000000001a55be : add byte ptr [rax], al ; jo 0x1a554e ; in eax, dx ; call qword ptr [rsi]
0x00000000001a817f : add byte ptr [rax], al ; jp 0x1a8176 ; call qword ptr [rcx]
0x00000000001af3df : add byte ptr [rax], al ; jrcxz 0x1af3db ; jmp qword ptr [rcx]
0x00000000001a5d96 : add byte ptr [rax], al ; js 0x1a5d77 ; in eax, dx ; call rdi
0x00000000000cc525 : add byte ptr [rax], al ; js 0xcc535 ; ret
0x00000000001bf826 : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000012cb69 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf79 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000001703be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000001703ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000001703de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000001703ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000001703fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000017031d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000017033e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000017034e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000017035e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000017036e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000017037e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000017038e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000001702ca : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000017039e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000001703ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ab2fb : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab45e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ab47e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ab46e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x000000000017032e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000020b3e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16b15c] ; ret
0x0000000000020b4e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16d2b5] ; ret
0x0000000000120c7e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a7f95] ; call rax
0x000000000004411c : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x0000000000070627 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x20] ; call rax
0x000000000007cc47 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1640] ; call rax
0x000000000007d047 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1a40] ; call rax
0x000000000007d4e7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1ee0] ; call rax
0x00000000000708df : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x298] ; call rax
0x000000000007b917 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007bb87 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000001ab8f2 : add byte ptr [rax], al ; lock add byte ptr [rax], al ; sbb byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000019da52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x53], ch ; std ; jmp qword ptr [rdi]
0x00000000001b3052 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [eax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b0f52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], r8d ; js 0x1b0fc7 ; cmc ; jmp qword ptr [rcx]
0x00000000001aff52 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add dword ptr ss:[rax], eax ; sbb rbp, rsi ; jmp qword ptr [rcx]
0x00000000001b1752 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [rax], r8 ; call 0x221b0cd6
0x00000000001b0652 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp eax, 0x42880001 ; cmc ; jmp rax
0x00000000001a4252 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; jns 0x1a4260 ; add al, ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001ae552 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb al, 1 ; add byte ptr [rax - 0x69], bl ; hlt ; jmp qword ptr [rcx]
0x000000000019e252 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; add ch, cl ; call qword ptr [rbx]
0x00000000001a750a : add byte ptr [rax], al ; lodsb al, byte ptr fs:[rsi] ; add byte ptr [rax], al ; xor byte ptr [rbx - 6], al ; call qword ptr [rax]
0x00000000001a760a : add byte ptr [rax], al ; lodsd eax, dword ptr fs:[rsi] ; add byte ptr [rax], al ; nop ; shr esi, cl ; jmp qword ptr [rsi]
0x00000000001988f6 : add byte ptr [rax], al ; mov ah, 0x1a ; out dx, al ; jmp rsp
0x00000000001af05a : add byte ptr [rax], al ; mov ah, 0x27 ; add dword ptr [rax], eax ; loopne 0x1af045 ; hlt ; jmp qword ptr [rcx]
0x00000000001b105a : add byte ptr [rax], al ; mov ah, 0x47 ; add dword ptr [rax], eax ; mov al, 0x65 ; cmc ; jmp qword ptr [rcx]
0x00000000001982f6 : add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; call rsp
0x00000000001a265a : add byte ptr [rax], al ; mov ah, 0x5d ; add byte ptr [rax], al ; rcr ch, 0xec ; jmp qword ptr [rbx]
0x00000000001ad45a : add byte ptr [rax], al ; mov ah, 0xb ; add dword ptr [rax], eax ; mov al, 0xd5 ; jmp qword ptr [rcx]
0x00000000001985f6 : add byte ptr [rax], al ; mov ah, 0xbd ; in eax, dx ; jmp rsp
0x00000000001a7826 : add byte ptr [rax], al ; mov ah, ah ; out dx, al ; jmp qword ptr [rsi]
0x000000000019cf7e : add byte ptr [rax], al ; mov al, 0x5d ; std ; jmp qword ptr [rdx]
0x00000000001864fe : add byte ptr [rax], al ; mov al, 0x6d ; out dx, al ; call rax
0x00000000001abd8e : add byte ptr [rax], al ; mov al, 0x8a ; call rdi
0x00000000001ac02e : add byte ptr [rax], al ; mov al, 0x9c ; jmp qword ptr [rdi]
0x00000000001aa69e : add byte ptr [rax], al ; mov al, 0xcb ; int1 ; call qword ptr [rbx]
0x00000000001ab59e : add byte ptr [rax], al ; mov al, 5 ; jmp qword ptr [rcx]
0x000000000016a83e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000016650e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000123bbf : add byte ptr [rax], al ; mov byte ptr [rbp + 0x11], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019ecf6 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x17], ah ; call qword ptr [rcx]
0x000000000019c9d6 : add byte ptr [rax], al ; mov byte ptr [rcx - 0x18], al ; call qword ptr [rax]
0x00000000001684de : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d42ee : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009ef4e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a646e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a4e6e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a5e3e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a5b3e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000016851e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000016853e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000016852e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000016850e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f622e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a5e5e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009ef7e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a5e7e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a5e8e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5e6e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000054b05 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000490a2 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x000000000012d98e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012d9ce : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012d9be : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f6a54 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c86a0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a4e7e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000cc3ce : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000cbb0e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000cbb2e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000cbb1e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000cbb3e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000cbd6e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000cc259 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000001072ce : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000cc31e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000141f49 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033c9c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000352cc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000490d4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e0de : add byte ptr [rax], al ; mov eax, 2 ; ret
0x00000000000d7546 : add byte ptr [rax], al ; mov eax, 5 ; ret
0x0000000000105c1a : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000016dc2e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007d5fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012d8fc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013b86e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d598e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f621e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007889e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007886e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000c730e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000007445e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x00000000000366ce : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38d9b2] ; ret
0x0000000000070b66 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000357d7 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000001190fe : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x00000000000219cc : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010cb9b : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000c85c1 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036918 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000541b2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000022043 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000116765 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ca59 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006cd82 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x000000000012469e : add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000008888e : add byte ptr [rax], al ; mov ebx, 2 ; jmp 0x88862
0x00000000001a9c32 : add byte ptr [rax], al ; mov ebx, ss ; add byte ptr [rax], al ; call 0x121a8d4f
0x00000000000a4eae : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001ab232 : add byte ptr [rax], al ; mov ecx, gs ; add byte ptr [rax], al ; test al, 0xf7 ; int1 ; jmp qword ptr [rcx]
0x00000000001183cd : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11839a
0x000000000015a94e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a4e9e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000072418 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x723c2
0x00000000000725bd : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72564
0x0000000000072756 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x726fb
0x0000000000077011 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x76fb9
0x0000000000077981 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x77929
0x0000000000076a26 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000103784 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001a4362 : add byte ptr [rax], al ; mov esp, 0x1800007a ; in eax, dx ; call rbx
0x00000000001b2f62 : add byte ptr [rax], al ; mov esp, 0x48000166 ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001ae662 : add byte ptr [rax], al ; mov esp, 0xc800011d ; sahf ; hlt ; jmp qword ptr [rcx]
0x000000000019e562 : add byte ptr [rax], al ; mov esp, 0xd800001c ; adc al, 0xe9 ; call qword ptr [rdx]
0x00000000001b1162 : add byte ptr [rax], al ; mov esp, 0xe8000148 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2062 : add byte ptr [rax], al ; mov esp, 0xf8000157 ; popfq ; cmc ; call rdi
0x00000000001141c3 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rax ; call rcx
0x0000000000142f43 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000142efb : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014316e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000016855e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000016857e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000016858e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000016859e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00000000001685ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000016856e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000016854e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000094bd6 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013bc1a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a5e9e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a5ebe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5ede : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5eee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5efe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5f0e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5ece : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a5eae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000490c0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000007772c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000013194b : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012d93c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b043 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f614c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d90c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001190c6 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000013792f : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000066174 : add byte ptr [rax], al ; mov r13d, eax ; jmp 0x66143
0x000000000013d953 : add byte ptr [rax], al ; mov r8, qword ptr [rsp + 0x18] ; jmp 0x13d927
0x000000000003521c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000aae4e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000aae5e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000aae6e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000aae7e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000aae8e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000aae9e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000aaeae : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007bf09 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000075b00 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007c3e5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000105ec6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000003a510 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c71fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000763ae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d8ce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140731 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284db6] ; call qword ptr [rax]
0x0000000000140134 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2853b3] ; call qword ptr [rax]
0x000000000007d8ae : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x347d49] ; ret
0x00000000000221fe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a7641] ; ret
0x00000000000221ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a7661] ; ret
0x00000000000fdf3d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000084e70 : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ecea : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006f01e : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007aa55 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c02d : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003a89c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033c2c : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000033c36 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007d8de : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001408aa : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000006f9be : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000006ff63 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x000000000007d7b8 : add byte ptr [rax], al ; mov rbp, qword ptr [rbx + 8] ; jmp 0x7d78a
0x0000000000173296 : add byte ptr [rax], al ; mov rbx, qword ptr [rdi] ; call 0x1f4c7
0x000000000012d533 : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; call rbx
0x0000000000073226 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x10] ; call 0x1f4c8
0x00000000000ec49d : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call r14
0x0000000000074415 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x743e7
0x0000000000112316 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x10e527
0x000000000002f38d : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000103976 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000ed78f : add byte ptr [rax], al ; mov rdi, r13 ; call 0x89a57
0x0000000000103842 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001037ba : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000005714f : add byte ptr [rax], al ; mov rdi, r15 ; call 0x733a7
0x00000000001037ab : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012e39b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000006d832 : add byte ptr [rax], al ; mov rdi, rbp ; call r8
0x0000000000103c00 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000136a25 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000088273 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000013a02e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a4ede : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000084c0e : add byte ptr [rax], al ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000000000087fd0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000698be : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0x6986d
0x000000000005a8d4 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x369683] ; call rax
0x000000000005a360 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x369bf7] ; call rax
0x00000000000551cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36ed8b] ; call rax
0x000000000004f2d8 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x374c7f] ; call rax
0x0000000000049e7c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37a0db] ; call rax
0x0000000000088cbe : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087dc0 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000babc2 : add byte ptr [rax], al ; mov rsi, r13 ; call r12
0x0000000000087b52 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088f92 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000019e132 : add byte ptr [rax], al ; mov word ptr [rax], ds ; add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rsi]
0x00000000001a5632 : add byte ptr [rax], al ; mov word ptr [rbp - 0x78180000], cs ; in eax, dx ; call qword ptr [rdx]
0x00000000001b7532 : add byte ptr [rax], al ; mov word ptr [rcx + rax - 0x8bd9800], gs ; jmp qword ptr [rbx]
0x00000000001b0d32 : add byte ptr [rax], al ; mov word ptr [rcx + rax], es ; js 0x1b0da5 ; cmc ; jmp qword ptr [rcx]
0x00000000001684fe : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001684ee : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a5e4e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009efee : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009ef5e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001b0b32 : add byte ptr [rax], al ; mov word ptr [rdx + 1], es ; add byte ptr [rax + 0x52], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001ae632 : add byte ptr [rax], al ; mov word ptr [rip - 0x6167ffff], ds ; hlt ; jmp qword ptr [rcx]
0x000000000003b08d : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b0d4 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001b2f32 : add byte ptr [rax], al ; mov word ptr [rsi + 1], fs ; add byte ptr [rax], bl ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001b1f32 : add byte ptr [rax], al ; mov word ptr [rsi + 1], ss ; add byte ptr [rax], bl ; xchg eax, edi ; cmc ; call rdi
0x00000000000e2e71 : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe2e5c
0x00000000000a5f1e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a5f2e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001ade4a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0x59a00001 ; stc ; call qword ptr [rax]
0x00000000001976e6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fucomi st(0) ; call rsp
0x00000000001ae89f : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001bb04a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out 1, eax ; add byte ptr [rax], dl ; or edi, eax ; call qword ptr [rdx]
0x000000000019861e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffed
0x000000000019c4ee : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffa
0x00000000001ae64a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x9eb00001 ; hlt ; jmp qword ptr [rcx]
0x000000000006dd6a : add byte ptr [rax], al ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000046cbd : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000198b8e : add byte ptr [rax], al ; movsxd rbp, esi ; call rsp
0x000000000015aade : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b1be : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b14e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000011dfb2 : add byte ptr [rax], al ; neg eax ; mov r14d, eax ; jmp 0x11df85
0x00000000001aad4e : add byte ptr [rax], al ; nop ; in eax, -0xf ; call rdi
0x000000000011910d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000001a74de : add byte ptr [rax], al ; nop ; or edx, edi ; call qword ptr [rax]
0x00000000001a7eae : add byte ptr [rax], al ; nop ; outsd dx, dword ptr [rsi] ; out dx, eax ; call rax
0x00000000001a480e : add byte ptr [rax], al ; nop ; push rbx ; in eax, dx ; call qword ptr [rax]
0x000000000002078d : add byte ptr [rax], al ; nop ; ret
0x00000000001a760e : add byte ptr [rax], al ; nop ; shr esi, cl ; jmp qword ptr [rsi]
0x00000000001a747e : add byte ptr [rax], al ; nop ; test esi, ebp ; call qword ptr [rax]
0x000000000012bf09 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x0000000000132dba : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013ba1b : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000019e2b2 : add byte ptr [rax], al ; or al, 0x1a ; add byte ptr [rax], al ; add bpl, cl ; call qword ptr [rbx]
0x00000000001af4b2 : add byte ptr [rax], al ; or al, 0x2c ; add dword ptr [rax], eax ; js 0x1af4a7 ; hlt ; jmp qword ptr [rcx]
0x00000000001b30b2 : add byte ptr [rax], al ; or al, 0x68 ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b32b2 : add byte ptr [rax], al ; or al, 0x6a ; add dword ptr [rax], eax ; call 0x271b2ec7
0x00000000001b3db2 : add byte ptr [rax], al ; or al, 0x75 ; add dword ptr [rax], eax ; pop rax ; cmp al, 0xf6 ; jmp rdi
0x00000000001a9bb2 : add byte ptr [rax], al ; or al, 0xd3 ; add byte ptr [rax], al ; call 0x221a8ccf
0x00000000001bbab2 : add byte ptr [rax], al ; or al, 0xf2 ; add dword ptr [rax], eax ; cwde ; clc ; jmp qword ptr [rcx]
0x00000000001accb2 : add byte ptr [rax], al ; or al, 4 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xd], dh ; call qword ptr [rsi]
0x000000000019d0b2 : add byte ptr [rax], al ; or al, 8 ; add byte ptr [rax], al ; clc ; jno 0x19d0ac ; call qword ptr [rax]
0x00000000001a7ce6 : add byte ptr [rax], al ; or al, bh ; out dx, al ; call rcx
0x000000000003a321 : add byte ptr [rax], al ; or bl, ch ; ret
0x000000000019cea6 : add byte ptr [rax], al ; or byte ptr [rax - 0x18], ah ; call qword ptr [rsi]
0x00000000000fc79a : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x850f
0x000000000019eba6 : add byte ptr [rax], al ; or byte ptr [rsi - 0x17], bl ; jmp qword ptr [rbx]
0x00000000001ad60a : add byte ptr [rax], al ; or eax, 0xd8600001 ; jmp qword ptr [rax]
0x000000000019c5f6 : add byte ptr [rax], al ; or ebx, edi ; call rsp
0x00000000001af82f : add byte ptr [rax], al ; out dx, eax ; hlt ; jmp qword ptr [rsi]
0x000000000019e346 : add byte ptr [rax], al ; pop rax ; add ch, cl ; call qword ptr [rcx]
0x00000000001a6d96 : add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rdx]
0x00000000001a6f76 : add byte ptr [rax], al ; pop rax ; out dx, al ; jmp rdx
0x0000000000106ee7 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x000000000019c8c6 : add byte ptr [rax], al ; pop rax ; sub ebp, eax ; call rax
0x00000000001a8c26 : add byte ptr [rax], al ; pop rax ; xor dh, al ; jmp rdx
0x00000000001a0736 : add byte ptr [rax], al ; pop rax ; xor dl, bh ; jmp qword ptr [rcx]
0x000000000005402d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000540fd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071f40 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001090da : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a9aea : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a68c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006f4d7 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006cbb0 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000051f2c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000071037 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000115557 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000046a52 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; mov eax, edx ; ret
0x000000000001fbe6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002051a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003573f : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002ae83 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ff056 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000194efe : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a4902 : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], 0 ; fcom dword ptr [rdi - 0x13] ; jmp rax
0x00000000001b0b02 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 0xb], dl ; jmp qword ptr [rcx]
0x00000000001b2f02 : add byte ptr [rax], al ; pop rsp ; add word ptr [rax], ax ; call 0x271b252d
0x00000000001aa102 : add byte ptr [rax], al ; pop rsp ; fadd dword ptr [rax] ; add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x00000000001bc202 : add byte ptr [rax], al ; pop rsp ; stc ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call rcx
0x00000000001a9a0e : add byte ptr [rax], al ; push rax ; add al, 0xf1 ; call qword ptr [rsi]
0x000000000019e32e : add byte ptr [rax], al ; push rax ; add ch, cl ; call qword ptr [rcx]
0x00000000001b190a : add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; mov al, 0x7a ; cmc ; jmp rax
0x0000000000195bac : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001a223e : add byte ptr [rax], al ; push rax ; shr ah, 1 ; call qword ptr [rax]
0x00000000001a738e : add byte ptr [rax], al ; push rax ; test dh, ch ; call qword ptr [rcx]
0x00000000001154be : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001a2cfa : add byte ptr [rax], al ; push rsp ; add byte ptr fs:[rax], al ; cmc ; in al, dx ; jmp rbx
0x00000000001a4bfa : add byte ptr [rax], al ; push rsp ; add dword ptr [rax], 0 ; and byte ptr [rax - 0x13], ch ; jmp rsi
0x00000000001a83fa : add byte ptr [rax], al ; push rsp ; mov ebx, 0xa5100000 ; sti ; call qword ptr [rax]
0x00000000001b1042 : add byte ptr [rax], al ; pushfq ; add dword ptr [r8], r8d ; cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001b1542 : add byte ptr [rax], al ; pushfq ; add qword ptr [rax], r8 ; clc ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x00000000001b3d42 : add byte ptr [rax], al ; pushfq ; je 0x1b3d51 ; add al, ch ; cmp dh, dh ; jmp qword ptr [rax]
0x00000000001aab42 : add byte ptr [rax], al ; pushfq ; loop 0x1aab50 ; add byte ptr [rax], bh ; fdivr st(1), st(0) ; call rdi
0x00000000001b8b42 : add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001afe42 : add byte ptr [rax], al ; pushfq ; xor eax, 0x17280001 ; cmc ; call qword ptr [rdx]
0x000000000019db0e : add byte ptr [rax], al ; rcl ch, 0xe8 ; jmp qword ptr [rsi]
0x00000000001a5d2e : add byte ptr [rax], al ; rcl dh, 0xed ; call qword ptr [rsi]
0x00000000001a85ae : add byte ptr [rax], al ; rcr byte ptr [rcx], 1 ; cli ; jmp qword ptr [rdi]
0x00000000001a265e : add byte ptr [rax], al ; rcr ch, 0xec ; jmp qword ptr [rbx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000000c32 : add byte ptr [rax], al ; ret 0
0x000000000017cd66 : add byte ptr [rax], al ; ret 0x12
0x000000000000a166 : add byte ptr [rax], al ; ret 0x15
0x0000000000018136 : add byte ptr [rax], al ; ret 0x18
0x000000000001985e : add byte ptr [rax], al ; ret 0x18c1
0x000000000001071e : add byte ptr [rax], al ; ret 0x19
0x000000000017e79e : add byte ptr [rax], al ; ret 0x1d4
0x000000000017ef36 : add byte ptr [rax], al ; ret 0x1d5
0x000000000017d7a6 : add byte ptr [rax], al ; ret 0x24
0x00000000000042ce : add byte ptr [rax], al ; ret 0x25
0x0000000000004a96 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x000000000017dc96 : add byte ptr [rax], al ; ret 0x33
0x000000000000ef7e : add byte ptr [rax], al ; ret 0x38
0x0000000000009986 : add byte ptr [rax], al ; ret 0x43
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000017c566 : add byte ptr [rax], al ; ret 0xc
0x000000000017c966 : add byte ptr [rax], al ; ret 0xf
0x0000000000009f1e : add byte ptr [rax], al ; ret 1
0x000000000017fd82 : add byte ptr [rax], al ; ret 2
0x000000000017ff82 : add byte ptr [rax], al ; ret 3
0x00000000000013aa : add byte ptr [rax], al ; ret 4
0x0000000000001586 : add byte ptr [rax], al ; ret 5
0x0000000000001726 : add byte ptr [rax], al ; ret 6
0x0000000000180782 : add byte ptr [rax], al ; ret 7
0x0000000000180982 : add byte ptr [rax], al ; ret 8
0x000000000017c166 : add byte ptr [rax], al ; ret 9
0x00000000000013a6 : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001aba3e : add byte ptr [rax], al ; rol byte ptr [rdx + rsi*8 - 1], 1 ; ret 0
0x00000000001a9a0a : add byte ptr [rax], al ; rol dword ptr fs:[rax], 1 ; add byte ptr [rax + 4], dl ; int1 ; call qword ptr [rsi]
0x00000000001a686e : add byte ptr [rax], al ; ror dl, 1 ; cld ; call qword ptr [rdx]
0x000000000019c8c2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; pop rax ; sub ebp, eax ; call rax
0x000000000019e1c2 : add byte ptr [rax], al ; sbb al, 0x19 ; add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rdx]
0x00000000001ae4c2 : add byte ptr [rax], al ; sbb al, 0x1c ; add dword ptr [rax], eax ; cwde ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001af5c2 : add byte ptr [rax], al ; sbb al, 0x2d ; add dword ptr [rax], eax ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001afec2 : add byte ptr [rax], al ; sbb al, 0x36 ; add dword ptr [rax], eax ; mov byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b16c2 : add byte ptr [rax], al ; sbb al, 0x4e ; add dword ptr [rax], eax ; pop rax ; jo 0x1b16c9 ; jmp qword ptr [rcx]
0x00000000001a4fc2 : add byte ptr [rax], al ; sbb al, 0x87 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x13], dh ; call qword ptr [rcx]
0x00000000001a85c2 : add byte ptr [rax], al ; sbb al, 0xbd ; add byte ptr [rax], al ; call 0x181a7ff0
0x00000000001ab1c2 : add byte ptr [rax], al ; sbb al, 0xe9 ; add byte ptr [rax], al ; sbb bh, dh ; int1 ; call qword ptr [rdx]
0x00000000001ae50a : add byte ptr [rax], al ; sbb al, 1 ; add al, ah ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae4f2 : add byte ptr [rax], al ; sbb al, 1 ; add al, cl ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x000000000019cbc2 : add byte ptr [rax], al ; sbb al, 3 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x18], cl ; jmp qword ptr [rax]
0x00000000001ab1c6 : add byte ptr [rax], al ; sbb bh, dh ; int1 ; call qword ptr [rdx]
0x00000000001a3bf6 : add byte ptr [rax], al ; sbb byte ptr [rax], dh ; in eax, dx ; jmp rbx
0x00000000001a8236 : add byte ptr [rax], al ; sbb byte ptr [rbp - 0x11], bh ; call qword ptr [rdi]
0x00000000001ab8f6 : add byte ptr [rax], al ; sbb byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000001a4366 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], al ; call rbx
0x000000000019cbc6 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0x18], cl ; jmp qword ptr [rax]
0x00000000001b2f1f : add byte ptr [rax], al ; sbb dh, dh ; jmp qword ptr [rsi]
0x0000000000035b5e : add byte ptr [rax], al ; sbb dh, dh ; ret 0x4402
0x00000000001ae1ea : add byte ptr [rax], al ; sbb dword ptr [rcx], r8d ; add byte ptr [rax - 0x71], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019e20a : add byte ptr [rax], al ; sbb dword ptr fs:[rax], eax ; add byte ptr [rax], dl ; add ch, cl ; call qword ptr [rbx]
0x00000000001aff0f : add byte ptr [rax], al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x000000000019e1f2 : add byte ptr [rax], al ; sbb qword ptr [rax], r8 ; add byte ptr [rax], cl ; add ch, cl ; call qword ptr [rdx]
0x000000000019ed9e : add byte ptr [rax], al ; shl byte ptr [rdx - 0x17], 1 ; jmp qword ptr [rsi]
0x00000000001a21bf : add byte ptr [rax], al ; shr ah, 1 ; jmp qword ptr [rax]
0x000000000018717e : add byte ptr [rax], al ; shr byte ptr [rbp - 4], 1 ; push rax ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000197a6e : add byte ptr [rax], al ; shr ecx, 1 ; jmp rsp
0x00000000000f60b6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019ebd2 : add byte ptr [rax], al ; sub al, 0x23 ; add byte ptr [rax], al ; sub byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x00000000001b10d2 : add byte ptr [rax], al ; sub al, 0x48 ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b2cd2 : add byte ptr [rax], al ; sub al, 0x64 ; add dword ptr [rax], eax ; cmp ch, bh ; cmc ; jmp qword ptr [rsi]
0x00000000001b31d2 : add byte ptr [rax], al ; sub al, 0x69 ; add dword ptr [rax], eax ; cwde ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001ad4d2 : add byte ptr [rax], al ; sub al, 0xc ; add dword ptr [rax], eax ; sub dh, dl ; jmp qword ptr [rcx]
0x00000000001bb4d2 : add byte ptr [rax], al ; sub al, 0xec ; add dword ptr [rax], eax ; call 0x231bb069
0x000000000019c9d2 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; mov byte ptr [rcx - 0x18], al ; call qword ptr [rax]
0x00000000001a3eb6 : add byte ptr [rax], al ; sub byte ptr [rbx], bh ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001a4fc6 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x13], dh ; call qword ptr [rcx]
0x00000000001ab6a6 : add byte ptr [rax], al ; sub byte ptr [rdi], al ; jmp qword ptr [rcx]
0x000000000019ebd6 : add byte ptr [rax], al ; sub byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x00000000001ab076 : add byte ptr [rax], al ; sub cl, dh ; int1 ; jmp rdi
0x00000000001af1ea : add byte ptr [rax], al ; sub dword ptr [rcx], r8d ; add al, al ; fdivrp st(4) ; jmp qword ptr [rcx]
0x000000000016e9ec : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000110776 : add byte ptr [rax], al ; sub eax, edi ; ret
0x00000000000fcec0 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000034d2d : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000007cd46 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008b2e1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000011f0de : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000f6b6b : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000114c15 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000cbb03 : add byte ptr [rax], al ; syscall ; ret
0x00000000001a6ee6 : add byte ptr [rax], al ; test al, 0x49 ; out dx, al ; jmp qword ptr [rax]
0x00000000001aa186 : add byte ptr [rax], al ; test al, 0x7c ; int1 ; call qword ptr [rax]
0x00000000001aa686 : add byte ptr [rax], al ; test al, 0xcb ; int1 ; call qword ptr [rbx]
0x00000000001ab236 : add byte ptr [rax], al ; test al, 0xf7 ; int1 ; jmp qword ptr [rcx]
0x0000000000198cfe : add byte ptr [rax], al ; test bh, cl ; out dx, al ; jmp rsp
0x00000000001ac02a : add byte ptr [rax], al ; test bh, dh ; add byte ptr [rax], al ; mov al, 0x9c ; jmp qword ptr [rdi]
0x00000000001aa02a : add byte ptr [rax], al ; test bh, dl ; add byte ptr [rax], al ; add byte ptr [rdx - 0xf], al ; jmp qword ptr [rcx]
0x00000000001b312a : add byte ptr [rax], al ; test byte ptr [rax + 1], ch ; add al, dh ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001a5d2a : add byte ptr [rax], al ; test byte ptr [rax + rax - 0x12294000], dl ; call qword ptr [rsi]
0x00000000001aec2a : add byte ptr [rax], al ; test byte ptr [rbx], ah ; add dword ptr [rax], eax ; loopne 0x1aec07 ; hlt ; jmp rbx
0x00000000001ad42a : add byte ptr [rax], al ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; adc ch, 0xf3 ; jmp qword ptr [rcx]
0x00000000001af02a : add byte ptr [rax], al ; test byte ptr [rdi], ah ; add dword ptr [rax], eax ; mov al, 0xda ; hlt ; jmp qword ptr [rcx]
0x00000000001af82a : add byte ptr [rax], al ; test byte ptr [rdi], ch ; add dword ptr [rax], eax ; add bh, ch ; hlt ; jmp qword ptr [rsi]
0x000000000019e32a : add byte ptr [rax], al ; test byte ptr [rdx], bl ; add byte ptr [rax], al ; push rax ; add ch, cl ; call qword ptr [rcx]
0x00000000001af32a : add byte ptr [rax], al ; test byte ptr [rdx], ch ; add dword ptr [rax], eax ; push rax ; loop 0x1af330 ; jmp qword ptr [rbx]
0x00000000001ade2a : add byte ptr [rax], al ; test byte ptr [rip - 0x7befffff], dl ; hlt ; call qword ptr [rax]
0x00000000001a472a : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add byte ptr [rax], ah ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a172a : add byte ptr [rax], al ; test byte ptr [rsi], cl ; add byte ptr [rax + 0x37], ah ; jmp 0x1a173c
0x00000000001ab62a : add byte ptr [rax], al ; test ch, ch ; add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001a4dea : add byte ptr [rax], al ; test dword ptr [rax], r8d ; add byte ptr [rax], al ; jno 0x1a4de9 ; jmp qword ptr [rcx]
0x000000000012d85f : add byte ptr [rax], al ; test eax, eax ; je 0x12d878 ; xor eax, eax ; ret
0x00000000000adb86 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xadba9
0x00000000000b03a7 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb03c9
0x00000000000b2a7f : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb2aa1
0x000000000006c876 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6c887 ; ret
0x00000000000fe1ec : add byte ptr [rax], al ; test rax, rax ; jne 0xfe1c8 ; pop rbx ; ret
0x00000000000fe3ad : add byte ptr [rax], al ; test rax, rax ; jne 0xfe388 ; pop rbx ; ret
0x00000000001385c2 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x1385b8 ; pop rbx ; ret
0x00000000001b303a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b173a : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [rax], r8 ; sal byte ptr [rax - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001aa33a : add byte ptr [rax], al ; xchg eax, esp ; fiadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000198d46 : add byte ptr [rax], al ; xchg eax, esp ; in eax, -0x12 ; call rsp
0x0000000000198706 : add byte ptr [rax], al ; xchg eax, esp ; jmp 0x1986ff
0x0000000000198fa6 : add byte ptr [rax], al ; xchg eax, esp ; jp 0x198f9f ; jmp rsp
0x00000000001a7f3a : add byte ptr [rax], al ; xchg eax, esp ; mov dh, 0 ; add al, dh ; jno 0x1a7f3b ; jmp qword ptr [rax]
0x00000000001ad63a : add byte ptr [rax], al ; xchg eax, esp ; or eax, 0x500001 ; hlt ; jmp rcx
0x00000000001a223a : add byte ptr [rax], al ; xchg eax, esp ; pop rcx ; add byte ptr [rax], al ; push rax ; shr ah, 1 ; call qword ptr [rax]
0x00000000001a9a3a : add byte ptr [rax], al ; xchg eax, esp ; rol dword ptr [rax], 1 ; add byte ptr [rax - 0x7f], al ; cld ; jmp qword ptr [rbx]
0x000000000019e23a : add byte ptr [rax], al ; xchg eax, esp ; sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; add ch, cl ; call qword ptr [rbx]
0x00000000001981ee : add byte ptr [rax], al ; xchg eax, esp ; stosd dword ptr [rdi], eax ; jmp 0x1981f8
0x000000000019902e : add byte ptr [rax], al ; xchg eax, esp ; test bh, ch ; jmp rsp
0x00000000001ae4da : add byte ptr [rax], al ; xor al, 0x1c ; add dword ptr [rax], eax ; mov al, 0x96 ; hlt ; jmp qword ptr [rcx]
0x00000000001af3da : add byte ptr [rax], al ; xor al, 0x2b ; add dword ptr [rax], eax ; add bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b16da : add byte ptr [rax], al ; xor al, 0x4e ; add dword ptr [rax], eax ; jo 0x1b175b ; cmc ; jmp qword ptr [rcx]
0x00000000001b2fda : add byte ptr [rax], al ; xor al, 0x67 ; add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x0000000000198fe6 : add byte ptr [rax], al ; xor al, 0x7e ; out dx, eax ; jmp rsp
0x0000000000198cb6 : add byte ptr [rax], al ; xor al, 0xa2 ; out dx, al ; call rsp
0x00000000001a74da : add byte ptr [rax], al ; xor al, 0xac ; add byte ptr [rax], al ; nop ; or edx, edi ; call qword ptr [rax]
0x00000000001985a6 : add byte ptr [rax], al ; xor al, 0xb6 ; in eax, dx ; call rsp
0x0000000000198646 : add byte ptr [rax], al ; xor al, 0xcb ; in eax, dx ; call rsp
0x00000000000f6b44 : add byte ptr [rax], al ; xor al, al ; ret
0x00000000001a750e : add byte ptr [rax], al ; xor byte ptr [rbx - 6], al ; call qword ptr [rax]
0x000000000019caae : add byte ptr [rax], al ; xor byte ptr [rcx - 0x18], cl ; call qword ptr [rcx]
0x00000000000fc52a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001a68ce : add byte ptr [rax], al ; xor byte ptr [rcx], ah ; out dx, al ; jmp qword ptr [rdi]
0x000000000019ebee : add byte ptr [rax], al ; xor byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x00000000000a8cee : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000143776 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000ba504 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012e18e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e146 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000039fdb : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c739b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039c13 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039c36 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007b06e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7b089 ; ret
0x000000000003ad78 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000ad412 : add byte ptr [rax], al ; xor ebx, ebx ; mov edx, eax ; jmp 0xad3c5
0x00000000000afc72 : add byte ptr [rax], al ; xor ebx, ebx ; mov edx, eax ; jmp 0xafc25
0x00000000000b2332 : add byte ptr [rax], al ; xor ebx, ebx ; mov edx, eax ; jmp 0xb22e5
0x00000000001127d1 : add byte ptr [rax], al ; xor edi, edi ; call 0x2ea86
0x000000000008d781 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000001036f6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000010371b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010373f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010375f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000002a121 : add byte ptr [rax], al ; xor r9d, r9d ; call r14
0x000000000008ea9d : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001afc77 : add byte ptr [rax], bh ; add al, 0xf5 ; jmp rdx
0x000000000019e287 : add byte ptr [rax], bh ; add ch, cl ; call qword ptr [rbx]
0x00000000001b0fe7 : add byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b3b77 : add byte ptr [rax], bh ; cmp dh, dh ; call qword ptr [rax]
0x00000000001aab47 : add byte ptr [rax], bh ; fdivr st(1), st(0) ; call rdi
0x00000000001aa107 : add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x00000000001b3177 : add byte ptr [rax], bh ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001b2cd7 : add byte ptr [rax], bh ; std ; cmc ; jmp qword ptr [rsi]
0x000000000019e227 : add byte ptr [rax], bl ; add ch, cl ; call qword ptr [rbx]
0x00000000001b0ef7 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ab1c7 : add byte ptr [rax], bl ; div ecx ; call qword ptr [rdx]
0x00000000001af487 : add byte ptr [rax], bl ; in al, -0xc ; jmp qword ptr [rcx]
0x00000000001a4367 : add byte ptr [rax], bl ; in eax, dx ; call rbx
0x00000000001b1497 : add byte ptr [rax], bl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a8237 : add byte ptr [rax], bl ; jge 0x1a822e ; call qword ptr [rdi]
0x00000000001b1787 : add byte ptr [rax], bl ; jno 0x1b1784 ; jmp qword ptr [rcx]
0x000000000019fe07 : add byte ptr [rax], bl ; mov al, 0xe9 ; jmp qword ptr [rdx]
0x00000000001af597 : add byte ptr [rax], bl ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001b0b07 : add byte ptr [rax], bl ; push rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b2f37 : add byte ptr [rax], bl ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001aff27 : add byte ptr [rax], bl ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001ab8f7 : add byte ptr [rax], bl ; sbb edx, esi ; call qword ptr [rax]
0x00000000001adde7 : add byte ptr [rax], bl ; test ah, dh ; call qword ptr [rsi]
0x00000000001b1f37 : add byte ptr [rax], bl ; xchg eax, edi ; cmc ; call rdi
0x00000000001a3bf7 : add byte ptr [rax], bl ; xor ch, ch ; jmp rbx
0x000000000019e257 : add byte ptr [rax], ch ; add ch, cl ; call qword ptr [rbx]
0x00000000001bc0e7 : add byte ptr [rax], ch ; clc ; call qword ptr [rdi]
0x00000000001bc207 : add byte ptr [rax], ch ; clc ; call rcx
0x00000000001b10d7 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a3eb7 : add byte ptr [rax], ch ; cmp ebp, ebp ; jmp qword ptr [rbx]
0x00000000001ab077 : add byte ptr [rax], ch ; int1 ; int1 ; jmp rdi
0x00000000001a4fc7 : add byte ptr [rax], ch ; ja 0x1a4fbc ; call qword ptr [rcx]
0x00000000001accb7 : add byte ptr [rax], ch ; jae 0x1accb2 ; call qword ptr [rsi]
0x00000000001ad4d7 : add byte ptr [rax], ch ; salc ; jmp qword ptr [rcx]
0x00000000001a1c47 : add byte ptr [rax], ch ; stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x000000000009439b : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x943a8 ; ret
0x000000000019e1f7 : add byte ptr [rax], cl ; add ch, cl ; call qword ptr [rdx]
0x00000000001a7ce7 : add byte ptr [rax], cl ; clc ; out dx, al ; call rcx
0x00000000001b3af7 : add byte ptr [rax], cl ; cmp dh, dh ; call qword ptr [rax]
0x000000000003a322 : add byte ptr [rax], cl ; jmp 0x3a2ec
0x000000000002e1e4 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001b2ff7 : add byte ptr [rax], cl ; or al, 0xf9 ; jmp qword ptr [rsi]
0x00000000001b6037 : add byte ptr [rax], cl ; out 0xf6, al ; call rcx
0x00000000000198ef : add byte ptr [rax], cl ; ret 0x18
0x00000000001b9757 : add byte ptr [rax], cl ; sal edi, cl ; jmp rdi
0x00000000001b3147 : add byte ptr [rax], cl ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001bb257 : add byte ptr [rax], cl ; xchg bl, bh ; jmp qword ptr [rdx]
0x000000000019e26f : add byte ptr [rax], dh ; add ch, cl ; call qword ptr [rdx]
0x00000000001a68cf : add byte ptr [rax], dh ; and esi, ebp ; jmp qword ptr [rdi]
0x0000000000009917 : add byte ptr [rax], dh ; call qword ptr [rbx]
0x00000000001a750f : add byte ptr [rax], dh ; cli ; call qword ptr [rax]
0x00000000001b0f0f : add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000a8cef : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b179f : add byte ptr [rax], dh ; jno 0x1b179c ; jmp rbx
0x00000000001af5af : add byte ptr [rax], dh ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001b2f4f : add byte ptr [rax], dh ; sbb dh, dh ; jmp qword ptr [rsi]
0x000000000003f01a : add byte ptr [rax], dl ; add byte ptr [rax + 0x21], cl ; ret 0x8348
0x0000000000115251 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c185 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006c193 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000019e20f : add byte ptr [rax], dl ; add ch, cl ; call qword ptr [rbx]
0x00000000001b10bf : add byte ptr [rax], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad63f : add byte ptr [rax], dl ; hlt ; jmp rcx
0x00000000001a851f : add byte ptr [rax], dl ; hlt ; out dx, eax ; jmp rbx
0x00000000001bc33f : add byte ptr [rax], dl ; insb byte ptr [rdi], dx ; clc ; call qword ptr [rax]
0x00000000001b18bf : add byte ptr [rax], dl ; jns 0x1b18bc ; jmp rdi
0x00000000001a83ff : add byte ptr [rax], dl ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000002e2c4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001bb04f : add byte ptr [rax], dl ; or edi, eax ; call qword ptr [rdx]
0x00000000001b0a1f : add byte ptr [rax], dl ; push rcx ; cmc ; jmp rax
0x00000000001ad4bf : add byte ptr [rax], dl ; salc ; jmp qword ptr [rcx]
0x00000000001ade2f : add byte ptr [rax], dl ; test ah, dh ; call qword ptr [rax]
0x00000000001a1b8f : add byte ptr [rax], dl ; test al, 0xec ; jmp qword ptr [rax]
0x00000000001b8c68 : add byte ptr [rax], r8b ; add ah, al ; ret
0x0000000000034fc5 : add byte ptr [rax], r8b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000036d2d : add byte ptr [rax], r8b ; add rsp, 8 ; ret
0x0000000000034f05 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000d42ed : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009ef4d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009ef7d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000036705 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cd345 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000001385cd : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000000d7545 : add byte ptr [rax], r8b ; mov eax, 5 ; ret
0x000000000007445d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00000000000a4e9d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000077010 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x76fba
0x0000000000094bd5 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x00000000001190c5 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000033c35 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x0000000000094375 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a4edd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000084c0d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000698bd : add byte ptr [rax], r8b ; mov rdx, r8 ; jmp 0x6986e
0x00000000000d5a3d : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c5bd : add byte ptr [rax], r8b ; pop rbx ; ret
0x00000000000ff055 : add byte ptr [rax], r8b ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000044a75 : add byte ptr [rax], r8b ; ret
0x0000000000143775 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000e6e3d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012eded : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a5ed : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039c35 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000aab4d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000001430f7 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000531bd : add byte ptr [rbp + 0x29], al ; rol byte ptr [rbp - 0x77], 1 ; ret 0x98e9
0x00000000000495ef : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x0000000000142fbc : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000b8a67 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x000000000011286d : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a122 : add byte ptr [rbp + 0x31], al ; leave ; call r14
0x00000000000c1f1d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000001154bf : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000450a1 : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000140615 : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000005402e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000540fe : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000020622 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008d7fe : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006c11e : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000ee11d : add byte ptr [rbp + 0x6348ff55], cl ; ret 0x8d48
0x0000000000066f61 : add byte ptr [rbp + 0x76850fff], al ; ret 0xffff
0x000000000010b5b0 : add byte ptr [rbp + 0xa], dh ; jmp 0x10b5df
0x000000000014092a : add byte ptr [rbp + 0xa], dh ; jmp 0x140958
0x000000000010b68b : add byte ptr [rbp + 0xb], dh ; jmp 0x10b6bc
0x0000000000039a84 : add byte ptr [rbp + 0xb], dh ; jmp 0x39ab5
0x0000000000039e00 : add byte ptr [rbp + 0xb], dh ; jmp 0x39e31
0x00000000000c87a1 : add byte ptr [rbp + 0xb], dh ; jmp 0xc87d1
0x0000000000047aff : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000479ef : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001aee23 : add byte ptr [rbp + 1], bh ; add byte ptr [rax - 0x2a], bl ; hlt ; call qword ptr [rbx]
0x000000000000ea4f : add byte ptr [rbp + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000003a4ba : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x000000000013bb86 : add byte ptr [rbp + 7], dh ; ret
0x0000000000143084 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001a4deb : add byte ptr [rbp + rax*4], al ; add byte ptr [rax], al ; jno 0x1a4de8 ; jmp qword ptr [rcx]
0x00000000000cc498 : add byte ptr [rbp + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001ab62b : add byte ptr [rbp + rbp*8 + 0x7100000], al ; jmp qword ptr [rcx]
0x00000000001ae663 : add byte ptr [rbp + rbx - 0x6137ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae64b : add byte ptr [rbp + rbx - 0x614fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae633 : add byte ptr [rbp + rbx - 0x6167ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a265b : add byte ptr [rbp + rbx*2 - 0x22400000], dh ; in al, dx ; jmp qword ptr [rbx]
0x00000000001ad63b : add byte ptr [rbp + rcx + 0x500001], dl ; hlt ; jmp rcx
0x00000000001ad60b : add byte ptr [rbp + rcx + 1], ah ; add byte ptr [rax - 0x28], ah ; jmp qword ptr [rax]
0x00000000000714c8 : add byte ptr [rbp + rcx - 0x77], dh ; ret 0xd089
0x00000000001516e6 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0x449
0x00000000000fbfb0 : add byte ptr [rbp + rcx*4 + 0x25], cl ; jmp qword ptr [rax]
0x000000000007fb81 : add byte ptr [rbp + rcx*4 + 0x2c], cl ; sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000012cb6a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000012cf7a : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x00000000000d7fff : add byte ptr [rbp + rcx*4 + 0x6d], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000001a5633 : add byte ptr [rbp + rcx*4 - 0x78180000], cl ; in eax, dx ; call qword ptr [rdx]
0x00000000001b0653 : add byte ptr [rbp + rdi + 0x42880001], ch ; cmc ; jmp rax
0x0000000000195e48 : add byte ptr [rbp + rdi*8 - 0x2730f01], cl ; call qword ptr [rsi]
0x00000000001ade4b : add byte ptr [rbp + rdx + 0x59a00001], ah ; stc ; call qword ptr [rax]
0x00000000001ade2b : add byte ptr [rbp + rdx - 0x7befffff], al ; hlt ; call qword ptr [rax]
0x00000000001afe43 : add byte ptr [rbp + rsi + 0x17280001], bl ; cmc ; call qword ptr [rdx]
0x000000000019fe03 : add byte ptr [rbp + rsi], bl ; add byte ptr [rax], bl ; mov al, 0xe9 ; jmp qword ptr [rdx]
0x0000000000197bef : add byte ptr [rbp - 0x17], al ; call rsp
0x00000000001af5c3 : add byte ptr [rbp - 0x18b7ffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af5ab : add byte ptr [rbp - 0x18cfffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000000adb87 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xadba8
0x00000000000b03a8 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb03c8
0x00000000000b2a80 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb2aa0
0x0000000000173328 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x000000000010a693 : add byte ptr [rbp - 0x48f0feaa], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000e2564 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x95 ; ret 0xe183
0x00000000000632cf : add byte ptr [rbp - 0x7cb776f4], cl ; ret
0x00000000000d90ee : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d470f : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000123227 : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x00000000000460b7 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000085ab5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000035165 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000006c877 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000001bb5bb : add byte ptr [rbp*8 - 0x7ccfffff], dl ; sti ; jmp qword ptr [rdx]
0x0000000000146539 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000007889f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000a9aeb : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000075ae8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000010918d : add byte ptr [rbx + 0x2be52c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d5b9f : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000008412f : add byte ptr [rbx + 0x340ace35], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000007d947 : add byte ptr [rbx + 0x34900505], al ; add byte ptr [rcx], al ; ret
0x00000000000e181d : add byte ptr [rbx + 0x3958244c], cl ; ret 0x1472
0x00000000000cbcf8 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000115558 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000051f2d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a4eaf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000016a87f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016dc2f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a72cf : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000011014f : add byte ptr [rbx + 0x488b1850], cl ; or dh, dh ; ret 0x7508
0x0000000000071038 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000015a94f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000d45fd : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x0000000000084eef : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x0000000000046a53 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; mov eax, edx ; ret
0x00000000000232ed : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fbe7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002051b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000035740 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000078fbf : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000004f656 : add byte ptr [rbx + 0x634807ea], al ; ror byte ptr [rax - 0x7d], cl ; ret 0x6408
0x00000000000a5599 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000f621f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000007886f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000ad3f1 : add byte ptr [rbx + 0x97413f8], al ; mov edx, eax ; jmp 0xad3c7
0x00000000000afc51 : add byte ptr [rbx + 0x97413f8], al ; mov edx, eax ; jmp 0xafc27
0x00000000000b2311 : add byte ptr [rbx + 0x97413f8], al ; mov edx, eax ; jmp 0xb22e7
0x00000000000abae8 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000000c618f : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x0000000000098f1e : add byte ptr [rbx + 0xc], cl ; xchg byte ptr [rax - 0x77], cl ; ret
0x00000000001a6848 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa4e0202], al ; ret
0x00000000000e4d7e : add byte ptr [rbx + 0xf4801e1], al ; ret
0x000000000003a7ef : add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000076ccf : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001be8c7 : add byte ptr [rbx + 2], bh ; add byte ptr [rax], al ; ret 6
0x000000000008888f : add byte ptr [rbx + 2], bh ; jmp 0x88861
0x00000000001bdf97 : add byte ptr [rbx + 6], bl ; add byte ptr [rax], al ; ret 5
0x00000000001700da : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001b0c2b : add byte ptr [rbx + rax*2 + 0x61800001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c43 : add byte ptr [rbx + rax*2 + 0x61980001], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b61f : add byte ptr [rbx + rax*8 - 8], ah ; jmp rsp
0x000000000019cbc3 : add byte ptr [rbx + rax], bl ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x18], cl ; jmp qword ptr [rax]
0x00000000001a744b : add byte ptr [rbx + rbp*4 + 0x2d800000], ah ; cli ; call qword ptr [rax]
0x00000000001af3db : add byte ptr [rbx + rbp], dh ; add dword ptr [rax], eax ; add bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae45b : add byte ptr [rbx + rbx - 0x6a9fffff], dh ; hlt ; jmp qword ptr [rcx]
0x000000000010c56a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001ad45b : add byte ptr [rbx + rcx - 0x2a4fffff], dh ; jmp qword ptr [rcx]
0x00000000001ad443 : add byte ptr [rbx + rcx - 0x2a67ffff], bl ; jmp qword ptr [rcx]
0x00000000001ad42b : add byte ptr [rbx + rcx - 0x2a7fffff], al ; jmp qword ptr [rcx]
0x000000000011459a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x000000000013d954 : add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x18 ; jmp 0x13d926
0x0000000000049027 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000047437 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000e951f : add byte ptr [rbx + rcx*4 + 0xc], cl ; ret 0x8b49
0x0000000000198647 : add byte ptr [rbx + rcx*8], dh ; in eax, dx ; call rsp
0x00000000001ad3ab : add byte ptr [rbx + rcx], al ; add dword ptr [rax], eax ; adc ch, 0xf3 ; call qword ptr [rbx]
0x000000000019b1ef : add byte ptr [rbx + rcx], dl ; clc ; jmp rsp
0x00000000001a83fb : add byte ptr [rbx + rdi*4], dl ; add byte ptr [rax], dl ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call qword ptr [rax]
0x0000000000195d28 : add byte ptr [rbx + rdi*8], 0xff ; mov al, 0xf6 ; cli ; jmp qword ptr [rax]
0x000000000019beff : add byte ptr [rbx + rdx - 6], ah ; jmp rsp
0x000000000019b79f : add byte ptr [rbx + rdx - 7], al ; jmp rsp
0x00000000001a1c43 : add byte ptr [rbx + rdx*2 - 0x54d80000], bl ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a9c33 : add byte ptr [rbx + rdx*8 + 0x9e80000], cl ; int1 ; call qword ptr [rcx]
0x00000000001b9c13 : add byte ptr [rbx + rdx*8 + 1], ch ; add al, bh ; fcompi st(7) ; jmp rdx
0x0000000000199087 : add byte ptr [rbx + rdx*8 - 0x11], al ; call rsp
0x00000000001a9bb3 : add byte ptr [rbx + rdx*8], cl ; add byte ptr [rax], al ; call 0x221a8cce
0x000000000019c027 : add byte ptr [rbx + rsi - 6], al ; jmp rsp
0x00000000001b3bab : add byte ptr [rbx + rsi*2], al ; add dword ptr [rax], eax ; cmp sil, sil ; call qword ptr [rax]
0x00000000001a3bf3 : add byte ptr [rbx + rsi*2], cl ; add byte ptr [rax], bl ; xor ch, ch ; jmp rbx
0x00000000000583b2 : add byte ptr [rbx - 0x10a743], al ; call qword ptr [rax]
0x0000000000056b79 : add byte ptr [rbx - 0x10d743], al ; call qword ptr [rax]
0x0000000000198b8f : add byte ptr [rbx - 0x12], ah ; call rsp
0x00000000001218f0 : add byte ptr [rbx - 0x1f773], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc985
0x00000000000cbac7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcbae1 ; ret
0x00000000001aec2b : add byte ptr [rbx - 0x331fffff], al ; hlt ; jmp rbx
0x0000000000075a7f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a9b6f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000a9b68 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a9b61 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a9b5a : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a9b53 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a9b4c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000105c1b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000128866 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x128878 ; ret
0x0000000000114cdf : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x114cf9 ; ret
0x00000000000a98ae : add byte ptr [rbx - 0x50f0fe3e], al ; ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x00000000000a98a0 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xda89
0x00000000000d7751 : add byte ptr [rbx - 0x6bf0a005], al ; ret 0xc085
0x000000000019721c : add byte ptr [rbx - 0x6d6f0004], dl ; cld ; jmp qword ptr [rax]
0x000000000004554f : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fac0f : add byte ptr [rbx - 0x74b7bfa3], cl ; and r14b, r14b ; ret
0x000000000018b748 : add byte ptr [rbx - 0x74df0006], cl ; cli ; jmp qword ptr [rax]
0x000000000018b744 : add byte ptr [rbx - 0x74ff0006], cl ; cli ; jmp qword ptr [rax]
0x000000000003a514 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000005ca36 : add byte ptr [rbx - 0x76be0008], al ; ret 0x850f
0x0000000000020fc1 : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x000000000006f4d8 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002097f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000069039 : add byte ptr [rbx - 0x7af09108], al ; ret 3
0x0000000000171796 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d016f : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00000000000e9a3f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x0000000000125d19 : add byte ptr [rbx - 0x7cbbdb84], cl ; ret
0x0000000000101a4f : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000074406 : add byte ptr [rbx - 0xd], bl ; ret
0x00000000001967f8 : add byte ptr [rbx - 4], cl ; call qword ptr [rax + 0x20fffc4a]
0x000000000018b724 : add byte ptr [rbx - 6], ah ; call qword ptr [rax]
0x0000000000198f47 : add byte ptr [rbx], ah ; out dx, eax ; jmp rsp
0x000000000019ebd3 : add byte ptr [rbx], ch ; add byte ptr [rax], al ; sub byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x00000000001a6bfb : add byte ptr [rbx], dl ; add al, dh ; sub ebp, esi ; jmp qword ptr [rcx]
0x00000000001964d4 : add byte ptr [rbx], dl ; cld ; jmp rax
0x0000000000054b06 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000bb2b6 : add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000016853f : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000d1784 : add byte ptr [rcx + 0x39], al ; ret
0x000000000003f9c1 : add byte ptr [rcx + 0x39], cl ; ret
0x000000000003caf7 : add byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000012fafc : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000002483c : add byte ptr [rcx + 0x39], cl ; ret 0x860f
0x000000000003ccc9 : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000008f4d6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005a2d0 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000c85c2 : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f76be : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x0000000000070b67 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000715b2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116766 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x000000000016851f : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a5e7f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007c6f6 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000ea8e6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000101f9a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000076a27 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x000000000015093e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000016dc9c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a4d28 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001245ff : add byte ptr [rcx + 0x63], cl ; ret
0x000000000002e38f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000034ab7 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34ab2 ; ret
0x00000000000725b7 : add byte ptr [rcx + 0xde1e8d6], cl ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x7256a
0x0000000000102f6d : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x000000000010305a : add byte ptr [rcx + 0xf], al ; lahf ; ret 0x8545
0x00000000000ee8db : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000a97e1 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000df1df : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8341
0x00000000000a94cf : add byte ptr [rcx + 1], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x000000000007f96e : add byte ptr [rcx + rax + 0x55], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000857e8 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000004a3af : add byte ptr [rcx + rax - 0xe], cl ; call qword ptr [r11 + rax*8]
0x00000000001b0a1b : add byte ptr [rcx + rax*2 + 1], dh ; add byte ptr [rax], dl ; push rcx ; cmc ; jmp rax
0x000000000019bc67 : add byte ptr [rcx + rax*8 - 7], dl ; call rsp
0x000000000019c9d3 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; mov byte ptr [rcx - 0x18], al ; call qword ptr [rax]
0x00000000001af1eb : add byte ptr [rcx + rbp + 1], al ; add al, al ; fdivrp st(4) ; jmp qword ptr [rcx]
0x000000000013324c : add byte ptr [rcx + rbp - 0x15], cl ; mov r15, rax ; call 0x1f469
0x00000000001b31d3 : add byte ptr [rcx + rbp*2], ch ; add dword ptr [rax], eax ; cwde ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001b31bb : add byte ptr [rcx + rbp*2], dl ; add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001bb253 : add byte ptr [rcx + rbp*8 - 0x79f7ffff], ch ; sti ; jmp qword ptr [rdx]
0x00000000001ab233 : add byte ptr [rcx + rbp*8 - 0x8580000], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001ab1c3 : add byte ptr [rcx + rbp*8], bl ; add byte ptr [rax], al ; sbb bh, dh ; int1 ; call qword ptr [rdx]
0x00000000001ae1eb : add byte ptr [rcx + rbx + 1], al ; add byte ptr [rax - 0x71], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae24b : add byte ptr [rcx + rbx - 0x701fffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ae233 : add byte ptr [rcx + rbx - 0x7037ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a223b : add byte ptr [rcx + rbx*2 - 0x2fb00000], dl ; in al, dx ; call qword ptr [rax]
0x00000000001a21bb : add byte ptr [rcx + rbx*2], dl ; add byte ptr [rax], al ; add al, dl ; in al, dx ; jmp qword ptr [rax]
0x0000000000197b0f : add byte ptr [rcx + rbx*8 - 0x17], ah ; call rsp
0x000000000019e20b : add byte ptr [rcx + rbx], ah ; add byte ptr [rax], dl ; add ch, cl ; call qword ptr [rbx]
0x000000000019e223 : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], bl ; add ch, cl ; call qword ptr [rbx]
0x000000000019e1c3 : add byte ptr [rcx + rbx], bl ; add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rdx]
0x000000000019e1f3 : add byte ptr [rcx + rbx], cl ; add byte ptr [rax], cl ; add ch, cl ; call qword ptr [rdx]
0x000000000017c15f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x00000000001ad24b : add byte ptr [rcx + rcx - 0x46cfffff], ah ; call rsp
0x00000000001ad233 : add byte ptr [rcx + rcx - 0x46e7ffff], cl ; jmp qword ptr [rdi]
0x000000000019c5f7 : add byte ptr [rcx + rcx - 5], ah ; call rsp
0x00000000001b120b : add byte ptr [rcx + rcx*2 + 1], ah ; add al, dh ; cmc ; jmp qword ptr [rcx]
0x0000000000137a41 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000c86a1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c876b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x0000000000094bd7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x00000000000ed790 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x89a56
0x0000000000103843 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x0000000000022ae9 : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000babc3 : add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0x0000000000112317 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x10e526
0x000000000002f38e : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000103977 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000120972 : add byte ptr [rcx + rcx*4 - 0x19], cl ; mov rax, qword ptr [rsp] ; call rax
0x0000000000088cbf : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000087dc1 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087fd1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000698bf : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0x6986c
0x000000000012469f : add byte ptr [rcx + rcx*4 - 0x40], al ; ret
0x0000000000084e71 : add byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007eceb : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x0000000000087b53 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000057150 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x733a6
0x00000000001037ac : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000013770d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000001037bb : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000012c9e4 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000001b91fb : add byte ptr [rcx + rcx*8 + 1], dl ; add al, al ; mov ah, 0xf7 ; call qword ptr [rbx]
0x00000000001996df : add byte ptr [rcx + rcx*8], dh ; jmp rsp
0x000000000019b64f : add byte ptr [rcx + rcx*8], dl ; clc ; call rsp
0x0000000000198817 : add byte ptr [rcx + rcx], dl ; out dx, al ; call rsp
0x00000000001a4253 : add byte ptr [rcx + rdi*2 + 0x45e80000], ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001a8233 : add byte ptr [rcx + rdi*4 + 0x7d180000], cl ; out dx, eax ; call qword ptr [rdi]
0x00000000001bc253 : add byte ptr [rcx + rdi*8 + 0x68b80001], ch ; clc ; jmp rdi
0x00000000001bc203 : add byte ptr [rcx + rdi*8 + 1], bl ; add byte ptr [rax], ch ; clc ; call rcx
0x000000000019da53 : add byte ptr [rcx + rdx + 0x53680000], ch ; std ; jmp qword ptr [rdi]
0x000000000019b567 : add byte ptr [rcx + rdx*4 - 8], al ; call rsp
0x0000000000197a6f : add byte ptr [rcx + rdx*8 - 0x17], al ; jmp rsp
0x00000000001a9a3b : add byte ptr [rcx + rdx*8 - 0x7ec00000], dl ; cld ; jmp qword ptr [rbx]
0x00000000001a9a0b : add byte ptr [rcx + rdx*8], ah ; add byte ptr [rax + 4], dl ; int1 ; call qword ptr [rsi]
0x00000000001afa13 : add byte ptr [rcx + rsi + 1], ch ; add al, bh ; clc ; hlt ; jmp rcx
0x000000000019b5e7 : add byte ptr [rcx + rsi*4 - 8], dl ; call rsp
0x00000000001984cf : add byte ptr [rcx - 0x13], al ; jmp rsp
0x00000000001a4df0 : add byte ptr [rcx - 0x13], dh ; jmp qword ptr [rcx]
0x0000000000064472 : add byte ptr [rcx - 0x1674b], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000002463 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00000000001ad5bb : add byte ptr [rcx - 0x285fffff], dl ; call qword ptr [rdx]
0x00000000000d1ce6 : add byte ptr [rcx - 0x28e773], cl ; dec dword ptr [rax + 0x63] ; ret 0x9589
0x00000000000c6d61 : add byte ptr [rcx - 0x3b7cb739], cl ; or cl, ch ; ret
0x00000000000f622f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000b1a82 : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d6b0d : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret
0x00000000000275c3 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000275e0 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x00000000000275fd : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000005e679 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000012c76b : add byte ptr [rcx - 0x75], al ; push rax ; adc dh, dh ; ret 0x7401
0x000000000013c71f : add byte ptr [rcx - 0x75], cl ; push rdx ; sbb byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000118a17 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000009ef7f : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000db6e3 : add byte ptr [rcx - 0x77], al ; fmul dword ptr [rbp - 0x76be0085] ; ret
0x00000000000d0b41 : add byte ptr [rcx - 0x77], al ; ret
0x0000000000063b58 : add byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000004930e : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000313ad : add byte ptr [rcx - 0x77], cl ; ret 0x14d
0x0000000000046cab : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x000000000004a0e3 : add byte ptr [rcx - 0x77], cl ; ret 0x3775
0x0000000000062d24 : add byte ptr [rcx - 0x77], cl ; ret 0x77e9
0x0000000000038fd7 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x00000000000b3f19 : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000fab5c : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x000000000008e142 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x00000000000313da : add byte ptr [rcx - 0x77], cl ; ret 0x8d8b
0x0000000000062447 : add byte ptr [rcx - 0x77], cl ; ret 0xbce9
0x000000000005fce2 : add byte ptr [rcx - 0x77], cl ; ret 0xeae9
0x0000000000064d3d : add byte ptr [rcx - 0x7d], al ; out dx, eax ; add dword ptr [rax + 1], ecx ; ret
0x000000000007af17 : add byte ptr [rcx - 0x7d], al ; ret
0x000000000002165f : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000003cb43 : add byte ptr [rcx - 0x7d], al ; stc ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000234c6 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d7cff : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000000000ee855 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00000000000655d9 : add byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x00000000000e3c11 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000001446af : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e3f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000655bb : add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx + rax*2], 0x83 ; ret
0x000000000012fd19 : add byte ptr [rcx - 0x7f], cl ; ret
0x000000000007aebf : add byte ptr [rcx - 0x80], al ; enter 0x4880, -0x77 ; ret
0x00000000000d2e00 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rcx]
0x00000000000f20a5 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000011409f : add byte ptr [rcx - 0x876b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007f2a5 : add byte ptr [rcx - 0xa], al ; ret
0x00000000001103a3 : add byte ptr [rcx - 0xa], al ; ret 0x7510
0x0000000000081c75 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001b1770 : add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000cbaca : add byte ptr [rcx - 0xcf68130], cl ; ret
0x0000000000194eff : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000008ebd2 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ebf8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001a55bb : add byte ptr [rcx*4 - 0x78900000], dl ; in eax, dx ; call qword ptr [rsi]
0x0000000000198b5f : add byte ptr [rcx], ah ; out dx, al ; jmp rsp
0x000000000018a10b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000008858e : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000142f5a : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x0000000000136d12 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e701 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008b2df : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000199085 : add byte ptr [rcx], al ; add byte ptr [rbx + rdx*8 - 0x11], al ; call rsp
0x000000000018761c : add byte ptr [rcx], al ; call qword ptr [rax]
0x000000000011a190 : add byte ptr [rcx], al ; jmp 0x119f6b
0x000000000011a530 : add byte ptr [rcx], al ; jmp 0x11a323
0x000000000002e2a4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000007e144 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000013b85f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007d94d : add byte ptr [rcx], al ; ret
0x00000000000d564f : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000e65f6 : add byte ptr [rcx], al ; ret 0xc083
0x0000000000045898 : add byte ptr [rcx], al ; ret 0xdce9
0x0000000000045d76 : add byte ptr [rcx], al ; ret 0xfee9
0x00000000000d4577 : add byte ptr [rcx], al ; setg dl ; jmp 0xd4504
0x00000000000b8a47 : add byte ptr [rcx], bh ; ret
0x00000000000e77a1 : add byte ptr [rcx], bh ; ret 0x860f
0x00000000000d9268 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e2754 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000d90fd : add byte ptr [rcx], bh ; ret 0x947c
0x0000000000082f22 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000001964a0 : add byte ptr [rcx], bl ; cld ; jmp rax
0x00000000001aff10 : add byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000110777 : add byte ptr [rcx], ch ; clc ; ret
0x000000000008b5e0 : add byte ptr [rcx], ch ; ret
0x0000000000006b6f : add byte ptr [rcx], ch ; ret 0x18
0x00000000000c4dca : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c305d : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c14f7 : add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a07d : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000034d2e : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c1236 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c1535 : add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret 0x145
0x00000000000fcec1 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000119191 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x00000000000d8623 : add byte ptr [rcx], cl ; ret
0x0000000000043e0f : add byte ptr [rcx], cl ; ret 0x840f
0x00000000000348df : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x000000000005334f : add byte ptr [rcx], dh ; push rsi ; ret 0xb850
0x0000000000137146 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000039fdc : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c8567 : add byte ptr [rcx], dh ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000008b5d9 : add byte ptr [rcx], dh ; ret
0x000000000002e39f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000007b06f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7b088 ; ret
0x0000000000039dcb : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d782 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000253a4 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000000244ef : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2076
0x00000000000bdbcb : add byte ptr [rcx], dh ; shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000006b6b : add byte ptr [rcx], dl ; add byte ptr [rdi], cl ; add byte ptr [rcx], ch ; ret 0x18
0x000000000015879a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000001bb04b : add byte ptr [rdi + 0xb100001], ah ; clc ; call qword ptr [rdx]
0x00000000001b3053 : add byte ptr [rdi + 0xc080001], ch ; stc ; jmp qword ptr [rsi]
0x00000000001b300b : add byte ptr [rdi + 1], ah ; add al, al ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001b3023 : add byte ptr [rdi + 1], bh ; add byte ptr [rax], cl ; or al, 0xf9 ; jmp qword ptr [rsi]
0x00000000001b2ff3 : add byte ptr [rdi + 1], cl ; add byte ptr [rax], cl ; or al, 0xf9 ; jmp qword ptr [rsi]
0x00000000000aab44 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000172184 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001bce7b : add byte ptr [rdi + rax + 0x3170000], ch ; add byte ptr [rax], al ; ret 7
0x00000000000875a6 : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000001b102b : add byte ptr [rdi + rax*2 + 0x65800001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b1043 : add byte ptr [rdi + rax*2 + 0x65980001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b105b : add byte ptr [rdi + rax*2 + 0x65b00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b1013 : add byte ptr [rdi + rax*2 + 1], ch ; add byte ptr [rax + 0x65], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fe3 : add byte ptr [rdi + rax*2], bh ; add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001a4fc3 : add byte ptr [rdi + rax*4], bl ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x13], dh ; call qword ptr [rcx]
0x00000000001af82b : add byte ptr [rdi + rbp - 0x10ffffff], al ; hlt ; jmp qword ptr [rsi]
0x00000000001ae80b : add byte ptr [rdi + rbx + 1], ah ; add byte ptr [rax - 0x5d], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae83b : add byte ptr [rdi + rbx - 0x5c5fffff], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000199547 : add byte ptr [rdi + rbx - 0xe], ah ; call rsp
0x00000000001afc73 : add byte ptr [rdi + rbx*8 + 0x4380000], dh ; cmc ; jmp rdx
0x000000000005219a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000017c95f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x0000000000096e8d : add byte ptr [rdi + rcx - 0x4a], al ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000019baf7 : add byte ptr [rdi + rcx*4 - 7], al ; call rsp
0x000000000019868f : add byte ptr [rdi + rcx*8 - 0x13], ah ; jmp rsp
0x000000000002e1a4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000019c7ff : add byte ptr [rdi + rdi*4 - 3], dh ; call rsp
0x00000000001ae05b : add byte ptr [rdi + rdx - 0x72bfffff], dh ; hlt ; jmp qword ptr [rsi]
0x00000000001ae043 : add byte ptr [rdi + rdx - 0x72d7ffff], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000198b07 : add byte ptr [rdi + rdx*2 - 0x12], dh ; jmp rsp
0x00000000001b2063 : add byte ptr [rdi + rdx*2 - 0x6207ffff], bh ; cmc ; call rdi
0x000000000019ad2f : add byte ptr [rdi + rdx*2 - 9], dl ; call rsp
0x00000000001aa02b : add byte ptr [rdi + rdx*8 + 0x42000000], al ; int1 ; jmp qword ptr [rcx]
0x00000000001aa013 : add byte ptr [rdi + rdx*8], ch ; add al, ch ; int1 ; jmp qword ptr [rcx]
0x00000000001afffb : add byte ptr [rdi + rsi + 1], dl ; add byte ptr [rax], ah ; sbb dh, ch ; jmp qword ptr [rdx]
0x00000000001ac02b : add byte ptr [rdi + rsi*8 - 0x63500000], al ; jmp qword ptr [rdi]
0x000000000019c03f : add byte ptr [rdi + rsi], al ; cli ; jmp rsp
0x00000000001af05b : add byte ptr [rdi - 0x251fffff], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001af043 : add byte ptr [rdi - 0x2537ffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af02b : add byte ptr [rdi - 0x254fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000000e6f9a : add byte ptr [rdi - 0xa], dh ; ret
0x0000000000196620 : add byte ptr [rdi - 4], al ; call qword ptr [rax + 0x20fffc46]
0x0000000000196b0c : add byte ptr [rdi - 4], ch ; call qword ptr [rax + 0x20fffc6e]
0x0000000000195db4 : add byte ptr [rdi - 5], 0xff ; ror byte ptr [rax - 5], 1 ; jmp qword ptr [rax]
0x00000000001a85ab : add byte ptr [rdi*4 + 0x19d00000], al ; cli ; jmp qword ptr [rdi]
0x00000000001a85c3 : add byte ptr [rdi*4 + 0x1ae80000], bl ; cli ; call qword ptr [rdi]
0x00000000001b2fab : add byte ptr [rdi], al ; add dword ptr [rax], eax ; nop ; sbb dh, dh ; jmp qword ptr [rsi]
0x0000000000034c0e : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000006b6d : add byte ptr [rdi], cl ; add byte ptr [rcx], ch ; ret 0x18
0x00000000001154a7 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000015a116 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000a9a47 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b14f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000108581 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a0dc : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10a06d ; loopne 0x10a0ed ; ret
0x000000000002e33d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2e2ce ; loopne 0x2e34e ; ret
0x00000000000c1603 : add byte ptr [rdi], cl ; mov bh, 5 ; ret
0x000000000007bfa7 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000015b1bf : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000cd495 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000263d1 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d027f : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008b0df : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000ab9c0 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000016dcaf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ec7f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009f68f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f69f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f67f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000d1d71 : add byte ptr [rdi], cl ; mov es, word ptr [rip - 0x7cfffffc] ; ret 0x4201
0x00000000000454a7 : add byte ptr [rdi], cl ; mov esi, 0x83480152 ; ret
0x00000000000966bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb0f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eaff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008eaef : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000034a27 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000c5f06 : add byte ptr [rdi], cl ; ret
0x00000000000c43e0 : add byte ptr [rdi], cl ; ret 0x144
0x00000000000b4ff0 : add byte ptr [rdi], cl ; ret 0x1f0f
0x00000000000dda15 : add byte ptr [rdi], cl ; ret 0x3b41
0x000000000001fc68 : add byte ptr [rdi], cl ; ret 0x41c3
0x000000000002b000 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000001364fe : add byte ptr [rdi], cl ; ret 0x8348
0x000000000004472e : add byte ptr [rdi], cl ; ret 0x8539
0x000000000004524e : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030196 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fba1a : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eb03f : add byte ptr [rdi], cl ; ret 0xbce9
0x00000000000db261 : add byte ptr [rdi], cl ; ret 0xc689
0x0000000000045960 : add byte ptr [rdi], cl ; ret 0xd3e9
0x00000000000c2241 : add byte ptr [rdi], cl ; ret 0xd801
0x0000000000124110 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000012414b : add byte ptr [rdi], cl ; ret 0xff83
0x0000000000034b35 : add byte ptr [rdi], cl ; sub cl, al ; ret
0x00000000000e85d2 : add byte ptr [rdi], cl ; test bh, ah ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000000760ee : add byte ptr [rdi], cl ; test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000025f22 : add byte ptr [rdi], cl ; test byte ptr [rbp - 0xa000000], dh ; ret
0x000000000011f79e : add byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000045072 : add byte ptr [rdi], cl ; test byte ptr [rdi - 0x7cfffff9], dl ; ret 0x8b01
0x00000000000bba4f : add byte ptr [rdi], cl ; test dword ptr [rax], ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000125eb9 : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x7c000002], eax ; ret
0x000000000003b779 : add byte ptr [rdi], cl ; test dword ptr [rbx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b2b9 : add byte ptr [rdi], cl ; test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005c381 : add byte ptr [rdi], cl ; xchg dword ptr [rdi], edx ; push -0x7cb80000 ; ret
0x00000000000ed0ff : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000004b3dd : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xbd83
0x0000000000133cb2 : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xda09
0x0000000000149fc7 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x00000000000d6cbe : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000013519f : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000010f44b : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfa80
0x0000000000021426 : add byte ptr [rdi], cl ; xchg esp, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b2fdb : add byte ptr [rdi], dh ; add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x000000000019c3bf : add byte ptr [rdi], dh ; cli ; call rsp
0x000000000012c4db : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x000000000016a83f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000016650f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a728f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x00000000000d05ba : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x000000000002203f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x000000000002203e : add byte ptr [rdx + 8], dil ; mov eax, edx ; ret
0x0000000000109063 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x000000000019a957 : add byte ptr [rdx + rax - 9], al ; jmp rsp
0x00000000001b0b33 : add byte ptr [rdx + rax*2 + 0x52480001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b4b : add byte ptr [rdx + rax*2 + 0x52600001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b03 : add byte ptr [rdx + rax*2 + 1], bl ; add byte ptr [rax], bl ; push rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000199367 : add byte ptr [rdx + rax*2], dh ; int1 ; jmp rsp
0x00000000001b0abb : add byte ptr [rdx + rax*2], dl ; add dword ptr [rax], eax ; rcl byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001981c7 : add byte ptr [rdx + rax*4], al ; jmp 0x1981cf
0x000000000019caab : add byte ptr [rdx + rax], al ; add byte ptr [rax], al ; xor byte ptr [rcx - 0x18], cl ; call qword ptr [rcx]
0x00000000001af32b : add byte ptr [rdx + rbp - 0x1dafffff], al ; hlt ; jmp qword ptr [rbx]
0x00000000001b32b3 : add byte ptr [rdx + rbp*2], cl ; add dword ptr [rax], eax ; call 0x271b2ec6
0x00000000001ab353 : add byte ptr [rdx + rbp*8 - 0x3180000], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001bb32b : add byte ptr [rdx + rbp*8 - 0x7a9fffff], al ; sti ; jmp qword ptr [rdx]
0x0000000000034abc : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00000000001ab2e3 : add byte ptr [rdx + rbp*8], bh ; add byte ptr [rax], al ; cwde ; stc ; int1 ; call qword ptr [rax]
0x000000000019771f : add byte ptr [rdx + rbx - 0x17], dh ; jmp rsp
0x000000000019952f : add byte ptr [rdx + rbx], ah ; call rsp
0x000000000019e2b3 : add byte ptr [rdx + rbx], cl ; add byte ptr [rax], al ; add bpl, cl ; call qword ptr [rbx]
0x0000000000096c33 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000026c8d : add byte ptr [rdx + rcx - 0xa], dh ; ret
0x00000000001b132b : add byte ptr [rdx + rcx*2 + 0x69900001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b135b : add byte ptr [rdx + rcx*2 + 0x69c00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b1313 : add byte ptr [rdx + rcx*2 + 1], ch ; add byte ptr [rax + 0x69], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019b8ff : add byte ptr [rdx + rcx*2], ah ; stc ; call rsp
0x0000000000198a77 : add byte ptr [rdx + rcx*2], al ; out dx, al ; jmp rsp
0x00000000001b12e3 : add byte ptr [rdx + rcx*2], bh ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001a4363 : add byte ptr [rdx + rdi*2 + 0x46180000], bh ; in eax, dx ; call rbx
0x00000000001a4323 : add byte ptr [rdx + rdi*2], bh ; add ch, dh ; mov bh, 0xe7 ; call rdx
0x00000000001bc33b : add byte ptr [rdx + rdi*8 + 0x6c100001], dl ; clc ; call qword ptr [rax]
0x00000000001bc353 : add byte ptr [rdx + rdi*8 + 0x75c80001], ch ; sti ; call rcx
0x000000000019a817 : add byte ptr [rdx + rdi*8 - 0xa], dl ; jmp rsp
0x000000000017cd5f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x000000000019aae7 : add byte ptr [rdx + rdx - 9], ah ; call rsp
0x00000000001b3b0b : add byte ptr [rdx + rsi*2 + 1], ah ; add byte ptr [rax], al ; cmp dh, dh ; call qword ptr [rax]
0x00000000001b3af3 : add byte ptr [rdx + rsi*2 + 1], cl ; add byte ptr [rax], cl ; cmp dh, dh ; call qword ptr [rax]
0x00000000001bbab3 : add byte ptr [rdx + rsi*8], cl ; add dword ptr [rax], eax ; cwde ; clc ; jmp qword ptr [rcx]
0x00000000001a8180 : add byte ptr [rdx - 0x11], bh ; call qword ptr [rcx]
0x00000000001aab43 : add byte ptr [rdx - 0x23c80000], bl ; int1 ; call rdi
0x00000000001adde3 : add byte ptr [rdx - 0x7be7ffff], bh ; hlt ; call qword ptr [rsi]
0x00000000001aa030 : add byte ptr [rdx - 0xf], al ; jmp qword ptr [rcx]
0x000000000010cba7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010cba6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x0000000000196f24 : add byte ptr [rdx - 4], ah ; push qword ptr [rax + 0x61] ; cld ; jmp rax
0x000000000019b8d5 : add byte ptr [rdx], al ; add ah, dl ; stc ; jmp rsp
0x0000000000132c41 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; cmc ; ret 0xffff
0x00000000000788a3 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000000000128406 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010ea87 : add byte ptr [rdx], al ; call rax
0x000000000010e97b : add byte ptr [rdx], al ; mov rdx, qword ptr [rsp + 0x18] ; call rax
0x000000000002e204 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000002593 : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000000997f : add byte ptr [rdx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x43
0x000000000001997f : add byte ptr [rdx], bl ; ret 0x18
0x000000000012d531 : add byte ptr [rdx], ch ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; call rbx
0x0000000000010717 : add byte ptr [rdx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x00000000001048bf : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000198cb7 : add byte ptr [rdx], dh ; out dx, al ; call rsp
0x00000000000103f3 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rbx]
0x0000000000010603 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x0000000000009403 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; ret 7
0x00000000000107a7 : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x0000000000107050 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x00000000000cafc1 : add byte ptr [rip - 0xfff], bh ; jae 0xcafd2 ; ret
0x0000000000137337 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149e85 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016dfa4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e2e72 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xdeeb
0x0000000000101e2d : add byte ptr [rsi + 0xf], ah ; ret
0x000000000009f59c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ea04 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000103785 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103972 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000010383e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000001037b6 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000001b2f1b : add byte ptr [rsi + 1], dh ; add byte ptr [rax], al ; sbb dh, dh ; jmp qword ptr [rsi]
0x0000000000103bf0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000103963 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x000000000010382f : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000001037a7 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f6b37 : add byte ptr [rsi + 6], dh ; ret
0x000000000000171f : add byte ptr [rsi + rax + 0x6bf0000], bh ; add byte ptr [rax], al ; ret 6
0x00000000001b0f3b : add byte ptr [rsi + rax*2 + 0x64600001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f53 : add byte ptr [rsi + rax*2 + 0x64780001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f0b : add byte ptr [rsi + rax*2 + 1], ah ; add byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f23 : add byte ptr [rsi + rax*2 + 1], bh ; add byte ptr [rax + 0x64], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0ef3 : add byte ptr [rsi + rax*2 + 1], cl ; add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a4f53 : add byte ptr [rsi + rax*4 + 0x74980000], ch ; in eax, dx ; call qword ptr [rsi]
0x00000000001987ef : add byte ptr [rsi + rax], al ; out dx, al ; jmp rsp
0x000000000019959f : add byte ptr [rsi + rbp], dh ; call rsp
0x00000000001baf20 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001a172b : add byte ptr [rsi + rcx*2 + 0x37600000], al ; jmp 0x1a173b
0x00000000001b173b : add byte ptr [rsi + rcx*2 + 0x70d00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b1753 : add byte ptr [rsi + rcx*2 + 0x70e80001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b16ab : add byte ptr [rsi + rcx*2], al ; add dword ptr [rax], eax ; jo 0x1b16b0 ; jmp qword ptr [rcx]
0x00000000001b16c3 : add byte ptr [rsi + rcx*2], bl ; add dword ptr [rax], eax ; pop rax ; jo 0x1b16c8 ; jmp qword ptr [rcx]
0x00000000001b16db : add byte ptr [rsi + rcx*2], dh ; add dword ptr [rax], eax ; jo 0x1b175a ; cmc ; jmp qword ptr [rcx]
0x000000000019bcaf : add byte ptr [rsi + rcx*8 - 7], al ; call rsp
0x00000000001a0733 : add byte ptr [rsi + rdi + 0x30580000], cl ; cli ; jmp qword ptr [rcx]
0x00000000001a472b : add byte ptr [rsi + rdi*2 + 0x4e200000], al ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000198fe7 : add byte ptr [rsi + rdi*2], dh ; out dx, eax ; jmp rsp
0x00000000001b1f33 : add byte ptr [rsi + rdx*2 - 0x68e7ffff], cl ; cmc ; call rdi
0x000000000019b43f : add byte ptr [rsi + rdx*2], dh ; clc ; jmp rsp
0x00000000001b9efb : add byte ptr [rsi + rdx*8 + 1], dl ; add al, ah ; out 0xf7, al ; call qword ptr [rdx]
0x00000000001a9f0b : add byte ptr [rsi + rdx*8], ah ; add byte ptr [rax + 0x2d], dl ; int1 ; jmp rsp
0x00000000001aff53 : add byte ptr [rsi + rsi + 0x19480001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001aff0b : add byte ptr [rsi + rsi + 1], ah ; add byte ptr [rax], al ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001aff23 : add byte ptr [rsi + rsi + 1], bh ; add byte ptr [rax], bl ; sbb ebp, esi ; jmp qword ptr [rcx]
0x000000000019b82f : add byte ptr [rsi + rsi - 7], dl ; jmp rsp
0x00000000001a7f3b : add byte ptr [rsi + rsi*4 + 0x71f00000], dl ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a7eab : add byte ptr [rsi + rsi*4], al ; add byte ptr [rax], al ; nop ; outsd dx, dword ptr [rsi] ; out dx, eax ; call rax
0x00000000001985a7 : add byte ptr [rsi + rsi*4], dh ; in eax, dx ; call rsp
0x000000000019b0df : add byte ptr [rsi + rsi*8], al ; idiv edi ; hlt ; ret
0x00000000001afec3 : add byte ptr [rsi + rsi], bl ; add dword ptr [rax], eax ; mov byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aaf5b : add byte ptr [rsi - 0x13a00000], dh ; int1 ; call rdi
0x000000000019ef90 : add byte ptr [rsi - 0x17], ah ; jmp qword ptr [rcx]
0x0000000000197004 : add byte ptr [rsi - 0x6a6f0004], dl ; cld ; jmp qword ptr [rax]
0x00000000000221dd : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000366bd : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38d9c6] ; ret
0x00000000001871d0 : add byte ptr [rsi - 0x788f0004], al ; cld ; jmp rax
0x0000000000188b14 : add byte ptr [rsi - 0xc], al ; inc dword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000188b18 : add byte ptr [rsi - 0xc], al ; jmp qword ptr [rax]
0x00000000001abddb : add byte ptr [rsi*8 - 0x73c00000], dh ; jmp qword ptr [rbx]
0x00000000001a6ee3 : add byte ptr [rsi], bh ; add byte ptr [rax], al ; test al, 0x49 ; out dx, al ; jmp qword ptr [rax]
0x00000000001813a4 : add byte ptr [rsi], bl ; jmp 0x1813aa
0x00000000001813a4 : add byte ptr [rsi], bl ; jmp 0x1813ae
0x0000000000019997 : add byte ptr [rsi], bl ; ret 0x18
0x0000000000018137 : add byte ptr [rsi], ch ; ret 0x18
0x000000000001991f : add byte ptr [rsi], dl ; ret 0x18
0x00000000000f6209 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001b0d33 : add byte ptr [rsp + rax*2 + 0x62780001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d4b : add byte ptr [rsp + rax*2 + 0x62900001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d63 : add byte ptr [rsp + rax*2 + 0x62a80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d1b : add byte ptr [rsp + rax*2 + 1], dh ; add byte ptr [rax + 0x62], ah ; cmc ; jmp qword ptr [rcx]
0x000000000019be0f : add byte ptr [rsp + rax], ah ; cli ; jmp rsp
0x00000000001accb3 : add byte ptr [rsp + rax], cl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xd], dh ; call qword ptr [rsi]
0x000000000019b9ff : add byte ptr [rsp + rbp*2 - 7], al ; call rsp
0x00000000001a753b : add byte ptr [rsp + rbp*4 - 0x58400000], dl ; out dx, al ; call qword ptr [rax]
0x00000000001a750b : add byte ptr [rsp + rbp*4], ah ; add byte ptr [rax], dh ; cli ; call qword ptr [rax]
0x00000000001a74db : add byte ptr [rsp + rbp*4], dh ; add byte ptr [rax], al ; nop ; or edx, edi ; call qword ptr [rax]
0x00000000001bb4d3 : add byte ptr [rsp + rbp*8], ch ; add dword ptr [rax], eax ; call 0x231bb068
0x00000000001af4e3 : add byte ptr [rsp + rbp], bh ; add dword ptr [rax], eax ; fsub st(4) ; hlt ; jmp qword ptr [rcx]
0x00000000001af4b3 : add byte ptr [rsp + rbp], cl ; add dword ptr [rax], eax ; js 0x1af4a6 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae50b : add byte ptr [rsp + rbx + 1], ah ; add al, ah ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae523 : add byte ptr [rsp + rbx + 1], bh ; add al, bh ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae4f3 : add byte ptr [rsp + rbx + 1], cl ; add al, cl ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae553 : add byte ptr [rsp + rbx - 0x68a7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae4c3 : add byte ptr [rsp + rbx], bl ; add dword ptr [rax], eax ; cwde ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae4db : add byte ptr [rsp + rbx], dh ; add dword ptr [rax], eax ; mov al, 0x96 ; hlt ; jmp qword ptr [rcx]
0x000000000017c55f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x000000000019aa7f : add byte ptr [rsp + rcx - 9], al ; call rsp
0x0000000000101293 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001b1543 : add byte ptr [rsp + rcx*2 + 0x6df80001], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001ad4d3 : add byte ptr [rsp + rcx], ch ; add dword ptr [rax], eax ; sub dh, dl ; jmp qword ptr [rcx]
0x00000000001ad4bb : add byte ptr [rsp + rcx], dl ; add dword ptr [rax], eax ; adc dh, dl ; jmp qword ptr [rcx]
0x00000000001b4543 : add byte ptr [rsp + rdi*2 + 0x4f480001], bl ; idiv bh ; ret 1
0x00000000001a851b : add byte ptr [rsp + rdi*4], dh ; add byte ptr [rax], dl ; hlt ; out dx, eax ; jmp rbx
0x00000000001bc50b : add byte ptr [rsp + rdi*8 + 1], ah ; add al, al ; jno 0x1bc513 ; call qword ptr [rcx]
0x0000000000199fa7 : add byte ptr [rsp + rdi*8 - 0xb], dl ; jmp rsp
0x0000000000196868 : add byte ptr [rsp + rdi*8], bh ; push qword ptr [rax + 0x3b] ; cld ; jmp rsi
0x0000000000198d8f : add byte ptr [rsp + rdi*8], dl ; out dx, al ; call rsp
0x00000000001a5d2b : add byte ptr [rsp + rdx*4 - 0x29400000], al ; in eax, dx ; call qword ptr [rsi]
0x00000000001a9cfb : add byte ptr [rsp + rdx*8], dl ; add byte ptr [rax + 0x15], al ; int1 ; jmp qword ptr [rcx]
0x0000000000198897 : add byte ptr [rsp + rdx], al ; out dx, al ; call rsp
0x00000000001a7ce3 : add byte ptr [rsp + rsi*4], bh ; add byte ptr [rax], al ; or al, bh ; out dx, al ; call rcx
0x000000000019c45f : add byte ptr [rsp + rsi*4], dl ; cli ; jmp rsp
0x000000000019803f : add byte ptr [rsp + rsi*8 - 0x16], al ; jmp rsp
0x00000000001998f7 : add byte ptr [rsp + rsi], dl ; call rsp
0x00000000001986df : add byte ptr [rsp - 0x13], dh ; call qword ptr [rdx + rax*8]
0x00000000001aad4b : add byte ptr [rsp - 0x1a700000], ah ; int1 ; call rdi
0x00000000001a6d13 : add byte ptr [rsp], ch ; add al, bl ; out dx, al ; call qword ptr [rax]
0x00000000001b2cd3 : add byte ptr [rsp], ch ; add dword ptr [rax], eax ; cmp ch, bh ; cmc ; jmp qword ptr [rsi]
0x00000000001a2cfb : add byte ptr [rsp], dl ; add byte ptr [rax - 0xb], al ; in al, dx ; jmp rbx
0x000000000001f6df : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a0735 : add byte ptr ds:[rax], al ; pop rax ; xor dl, bh ; jmp qword ptr [rcx]
0x00000000001025ad : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x0000000000035f8a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000019ef8d : add byte ptr es:[rax], al ; add byte ptr [rsi - 0x17], ah ; jmp qword ptr [rcx]
0x00000000001a2cfd : add byte ptr fs:[rax], al ; cmc ; in al, dx ; jmp rbx
0x000000000019775d : add byte ptr fs:[rax], al ; hlt ; cmp cl, ch ; jmp rsp
0x000000000007b040 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000071d54 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005ca21 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000136a24 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000195d08 : add ch, bh ; cli ; push rax ; std ; cli ; jmp rax
0x0000000000034f07 : add ch, bl ; fpatan ; ret
0x00000000001872c4 : add ch, bl ; int1 ; jmp qword ptr [rax]
0x00000000001853dc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001853dd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000001a208a : add ch, byte ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000bc0e9 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000742ba : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000001a8630 : add ch, byte ptr [rdi + 0x41280e0a] ; ret
0x00000000001962f8 : add ch, ch ; sti ; jmp rax
0x000000000019e1e1 : add ch, cl ; call qword ptr [rbx]
0x000000000019e319 : add ch, cl ; call qword ptr [rcx]
0x000000000019e1f9 : add ch, cl ; call qword ptr [rdx]
0x000000000019e301 : add ch, cl ; jmp qword ptr [rax]
0x000000000006dc21 : add ch, cl ; ret
0x000000000003d191 : add ch, cl ; ret 0xfffd
0x0000000000026c4a : add ch, cl ; ret 0xfffe
0x0000000000060f1f : add ch, cl ; sahf ; ret 0xffff
0x0000000000195ce8 : add ch, dh ; cli ; jmp qword ptr [rax]
0x00000000001a4327 : add ch, dh ; mov bh, 0xe7 ; call rdx
0x0000000000035de6 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000196110 : add cl, 0xfb ; inc dword ptr [rax - 0x3d] ; sti ; jmp qword ptr [rax]
0x00000000000a1bec : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000ab889 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c7bc : add cl, byte ptr [rax + 0x29] ; ret 0x894c
0x000000000003e4ab : add cl, byte ptr [rax + 0x29] ; ret 0x8b48
0x000000000003c7e7 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000027283 : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000123d30 : add cl, byte ptr [rax + 0x39] ; ret 0x1a72
0x0000000000058275 : add cl, byte ptr [rax + 0x39] ; ret 0x1e7f
0x0000000000088531 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000000888b9 : add cl, byte ptr [rax + 0x39] ; ret 0x9b75
0x0000000000123d3e : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x00000000001a2b90 : add cl, byte ptr [rax + 0xa] ; ret
0x00000000000754f9 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000b93b1 : add cl, byte ptr [rax + 1] ; ret
0x000000000002aa4e : add cl, byte ptr [rax + 1] ; ret 0x394c
0x000000000010e97c : add cl, byte ptr [rax - 0x75] ; push rsp ; and al, 0x18 ; call rax
0x00000000000a1bed : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009eeb7 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000007207f : add cl, byte ptr [rax - 0x77] ; ret
0x00000000000bf486 : add cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x000000000007d5e2 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ffb32 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000065131 : add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000089990 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000d4c3b : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000cdb6a : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000899f3 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013b5a5 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000073870 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000000582a9 : add cl, byte ptr [rax - 9] ; fmul dword ptr [rax + 1] ; ret 0x8948
0x0000000000033f5b : add cl, byte ptr [rbp - 0x77] ; in eax, -0x17 ; ret 0xfffd
0x000000000015af92 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000518e6 : add cl, byte ptr [rcx + 0x29] ; ret
0x000000000012e957 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000000b7131 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x00000000000456c0 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x0000000000044d89 : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x00000000001966cc : add cl, byte ptr [rcx - 4] ; call qword ptr [rdx + 0x22fffc48]
0x000000000002e1c4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000bba2b : add cl, byte ptr [rdi] ; mov ss, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000f793f : add cl, byte ptr [rdi] ; ret 0x8348
0x0000000000124165 : add cl, byte ptr [rdi] ; ret 0xf3c3
0x00000000000f7897 : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000eccb4 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000149e8b : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000a9843 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001a684e : add cl, byte ptr [rsi + 0xa] ; ret
0x00000000001873d0 : add cl, ch ; int1 ; call qword ptr [rax]
0x0000000000050462 : add cl, ch ; ret
0x00000000000effb8 : add cl, ch ; ret 0xf3ea
0x0000000000040f68 : add cl, ch ; ret 0xffe4
0x0000000000043e1e : add cl, ch ; ret 0xfff8
0x00000000000f0825 : add cl, ch ; ret 0xfffb
0x0000000000080334 : add cl, ch ; ret 0xfffc
0x00000000001abf52 : add dh, ah ; ret
0x0000000000044b38 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x0000000000032c1e : add dh, al ; add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085f33 : add dh, al ; and al, 0x20 ; add al, ch ; ret 0xfc37
0x00000000000ff3b3 : add dh, al ; inc dword ptr [rax] ; ret
0x00000000000d42ef : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000d8b34 : add dh, al ; or byte ptr [rax], r15b ; or dword ptr [rax + 1], ecx ; ret 0x6280
0x0000000000189adb : add dh, bh ; jmp rdi
0x000000000019a959 : add dh, bh ; jmp rsp
0x000000000017f7c7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000185d43 : add dh, bl ; fdivp st(7) ; call qword ptr [rsi]
0x00000000001872e8 : add dh, bl ; int1 ; jmp qword ptr [rax]
0x000000000015b143 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fbc8d : add dh, bl ; ret
0x000000000009fb4d : add dh, byte ptr [rax + rbp*4 + 0x48] ; mov eax, ebx ; pop rbx ; ret
0x00000000000a8d2b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a49fe : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x0000000000133872 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a1af5 : add dh, byte ptr [rcx + 0xa] ; ret
0x0000000000196bb8 : add dh, byte ptr [rcx - 4] ; call qword ptr [rdx + 0x22fffc70]
0x00000000000984ad : add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000133871 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000259ea : add dh, dh ; ret
0x0000000000024718 : add dh, dh ; ret 0x4801
0x000000000011030f : add dh, dh ; ret 0x4c04
0x000000000008f388 : add dh, dh ; ret 0x7404
0x00000000000202f9 : add dh, dh ; ret 0x7408
0x0000000000020306 : add dh, dh ; ret 0x7420
0x00000000001701c7 : add dh, dh ; ret 0x7501
0x00000000001701d4 : add dh, dh ; ret 0x7502
0x00000000000d001f : add dh, dh ; ret 0x7504
0x0000000000170199 : add dh, dh ; ret 0x7510
0x00000000001701a6 : add dh, dh ; ret 0x7520
0x00000000000f742f : add dh, dh ; ret 0x7540
0x000000000012321e : add dh, dh ; ret 0xf04
0x00000000000534df : add dh, dh ; ret 0xf08
0x00000000000e7f73 : add dh, dh ; ret 0xf10
0x00000000000a03f2 : add dh, dh ; ret 0xf20
0x00000000000a03fb : add dh, dh ; ret 0xf40
0x0000000000109951 : add dil, byte ptr [rcx] ; ret
0x00000000000b9ed4 : add dil, r15b ; ret
0x0000000000001587 : add dl, al ; add eax, 0 ; add byte ptr [rax], al ; ret
0x00000000001aeda1 : add dl, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x00000000000fe142 : add dl, byte ptr [rcx - 0x76b7ffd4] ; ret 0xb6e9
0x000000000018760d : add dl, dh ; call rax
0x0000000000187619 : add dl, dh ; inc dword ptr [rax] ; add edx, esi ; call qword ptr [rax]
0x0000000000187609 : add dl, dh ; inc eax ; add dl, dh ; call rax
0x00000000001875cd : add dl, dh ; jmp qword ptr [rax]
0x0000000000187611 : add dl, dh ; jmp rax
0x00000000000347bf : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000000704cc : add dword ptr [eax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001b2fad : add dword ptr [eax], eax ; nop ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001b2ff5 : add dword ptr [eax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b2fdd : add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000000a9871 : add dword ptr [r11 + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x00000000001a75cc : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00000000000275c6 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000455d4 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000024d93 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x00000000001b0a1d : add dword ptr [r8], eax ; adc byte ptr [rcx - 0xb], dl ; jmp rax
0x0000000000199a65 : add dword ptr [r8], eax ; hlt ; pop rsp ; call rsp
0x00000000001b0fe5 : add dword ptr [r8], r8d ; cmp byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b1045 : add dword ptr [r8], r8d ; cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001b0e95 : add dword ptr [r8], r8d ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b105d : add dword ptr [r8], r8d ; mov al, 0x65 ; cmc ; jmp qword ptr [rcx]
0x00000000000d7cce : add dword ptr [r9 + 0x39], eax ; ret
0x000000000010da08 : add dword ptr [r9 - 0x7d], ecx ; ret 0xeb08
0x00000000000db753 : add dword ptr [r9], edi ; ret
0x0000000000026bc3 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000078d9c : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d4398 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016a841 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000028e7f : add dword ptr [rax + 0x3948ff4d], ecx ; ret 0xe775
0x0000000000027267 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000b652b : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000e38ab : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x000000000009ea8b : add dword ptr [rax + 0x39], ecx ; ret 0x850f
0x0000000000048627 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000005127d : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x000000000009c69c : add dword ptr [rax + 0x39], ecx ; ret 0x974
0x000000000003b2c3 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x000000000003b527 : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x00000000000b7992 : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x000000000009a6ad : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x000000000009bfb3 : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x00000000000a00f0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x00000000000470a3 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000047233 : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x47230 ; xor eax, eax ; ret
0x00000000000c4502 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x00000000000fb2d6 : add dword ptr [rax + 0x63], ecx ; ret 0x148
0x0000000000101d0b : add dword ptr [rax + 0x63], ecx ; ret 0x5589
0x00000000000e4d81 : add dword ptr [rax + 0xf], ecx ; ret
0x0000000000085346 : add dword ptr [rax + 0xf], ecx ; ret 0x8348
0x0000000000064d41 : add dword ptr [rax + 1], ecx ; ret
0x0000000000020822 : add dword ptr [rax + 1], ecx ; ret 0x8948
0x0000000000033936 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000f583b : add dword ptr [rax + 1], ecx ; ror dword ptr [rax - 0x77], 1 ; add ecx, dword ptr [rax + 1] ; ret 0x8948
0x00000000000d4313 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000060e8c : add dword ptr [rax + rax*8 + 0x35e94475], eax ; ret
0x00000000001a328e : add dword ptr [rax + rbp*2], 0xa ; ret
0x00000000001acc8e : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000002f4e3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000195e94 : add dword ptr [rax - 0x6f6e0003], edx ; std ; jmp qword ptr [rcx]
0x00000000000f05c5 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf060b
0x00000000000a1bc6 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x00000000001664a2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009eea6 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000ae5be : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007f579 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007c0fb : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000007900d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008b471 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000000f130c : add dword ptr [rax - 0x77], ecx ; ret 0x348
0x00000000000f97a7 : add dword ptr [rax - 0x77], ecx ; ret 0x3948
0x00000000000ce470 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000010e2b1 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e286
0x00000000001244c0 : add dword ptr [rax - 0x78], eax ; ja 0x1244cb ; ret
0x000000000007fdca : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x0000000000049804 : add dword ptr [rax - 0x7d], ecx ; call qword ptr [rsi]
0x000000000016c45a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x00000000000d9f11 : add dword ptr [rax - 0x7d], ecx ; mov byte ptr [rsp + rax*2], 0x39 ; ret 0x637d
0x000000000002260f : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000023ec0 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000db49c : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e9a42 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x0000000000037d09 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d2272 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000000c6483 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000243cc : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x00000000000e546d : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000123211 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000cd499 : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000029da9 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000006e1d8 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x00000000000fb2eb : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000003d1b7 : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000003d53f : add dword ptr [rax - 0x7d], ecx ; ret 0xf04
0x00000000000e6945 : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d706c : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x0000000000109d4e : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x00000000001a4bfd : add dword ptr [rax], 0 ; and byte ptr [rax - 0x13], ch ; jmp rsi
0x0000000000109484 : add dword ptr [rax], 1 ; ret
0x000000000019988e : add dword ptr [rax], eax ; adc al, 0x25 ; jmp rsp
0x00000000001998f6 : add dword ptr [rax], eax ; adc al, 0x34 ; call rsp
0x0000000000199da6 : add dword ptr [rax], eax ; adc al, 0x7d ; cmc ; call rsp
0x000000000019b1ee : add dword ptr [rax], eax ; adc al, 0xb ; clc ; jmp rsp
0x000000000019b64e : add dword ptr [rax], eax ; adc al, 0xc9 ; clc ; call rsp
0x000000000019b25e : add dword ptr [rax], eax ; adc al, r15b ; jmp rsp
0x00000000001bb04e : add dword ptr [rax], eax ; adc byte ptr [rbx], cl ; clc ; call qword ptr [rdx]
0x00000000001b18be : add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], bh ; jmp rdi
0x00000000001b0a1e : add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dl ; jmp rax
0x00000000001b10be : add dword ptr [rax], eax ; adc byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001ad3ae : add dword ptr [rax], eax ; adc ch, 0xf3 ; call qword ptr [rbx]
0x00000000001ad3ee : add dword ptr [rax], eax ; adc ch, 0xf3 ; call qword ptr [rsi]
0x00000000001ad42e : add dword ptr [rax], eax ; adc ch, 0xf3 ; jmp qword ptr [rcx]
0x000000000019aae6 : add dword ptr [rax], eax ; adc dh, bh ; call rsp
0x00000000001ad4be : add dword ptr [rax], eax ; adc dh, dl ; jmp qword ptr [rcx]
0x00000000001b657e : add dword ptr [rax], eax ; adc edi, esi ; call qword ptr [rcx]
0x000000000019b79e : add dword ptr [rax], eax ; adc r15d, ecx ; jmp rsp
0x00000000001b6596 : add dword ptr [rax], eax ; adc rdi, rsi ; call qword ptr [rcx]
0x00000000001af46e : add dword ptr [rax], eax ; add ah, ah ; hlt ; jmp qword ptr [rcx]
0x000000000019c55e : add dword ptr [rax], eax ; add al, 0xc8 ; cli ; jmp rsp
0x000000000019b6e6 : add dword ptr [rax], eax ; add al, 0xdd ; clc ; jmp rsp
0x000000000019b0de : add dword ptr [rax], eax ; add al, 0xf6 ; idiv edi ; hlt ; ret
0x00000000000238e5 : add dword ptr [rax], eax ; add al, ch ; ret
0x0000000000120be6 : add dword ptr [rax], eax ; add al, ch ; ret 0xf0d4
0x00000000001af82e : add dword ptr [rax], eax ; add bh, ch ; hlt ; jmp qword ptr [rsi]
0x00000000000cd4a7 : add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000009e804 : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000000001af3de : add dword ptr [rax], eax ; add bl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000124176 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x0000000000124170 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x101 ; ret
0x000000000012417c : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x00000000001684cc : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006f0fa : add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000760f2 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000028cd9 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x0000000000025374 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bab9a : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x148
0x000000000006d1d8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000d9ac4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000006926f : add dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0xba66
0x00000000000f26af : add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 + 0x34], al ; sbb cl, byte ptr [rax - 0x7d] ; ret
0x0000000000136fa3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xfc66
0x00000000000c62c7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000097071 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002cdbd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000073ef8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000084d9f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002c10c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000833f7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b558b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004d249 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029fcc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000014514d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000069c46 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000249f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000d1801 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000008de3e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014b5ff : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001450a1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000072c4a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000734a0 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000000220a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000017f7ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017e97a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017e7a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017e79a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017ef32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000105b1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fdf90 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000103787 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000172181 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x172198 ; neg eax ; ret
0x00000000000aab41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xaab51 ; neg eax ; ret
0x00000000001700d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x1700e8 ; neg eax ; ret
0x00000000000d884a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xd8817
0x000000000004c810 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000013bb83 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x13bb96 ; ret
0x000000000013bbc3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x13bbd6 ; ret
0x00000000000cc523 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcc537 ; ret
0x00000000000490a0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x00000000001319f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000490be : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012d93a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000112314 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x10e529
0x0000000000103974 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103840 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001037b8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000006d830 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call r8
0x0000000000103bfe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000000540fb : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000071f3e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000073f8c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e5c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000088874 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000047084 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006c88e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ad410 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebx, ebx ; mov edx, eax ; jmp 0xad3c7
0x00000000000afc70 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebx, ebx ; mov edx, eax ; jmp 0xafc27
0x00000000000b2330 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebx, ebx ; mov edx, eax ; jmp 0xb22e7
0x00000000000f8776 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000020519 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d1782 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret
0x0000000000087dbf : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087fcf : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x0000000000087b51 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000234c4 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000012fd17 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7f], cl ; ret
0x00000000001103a1 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x7510
0x00000000001b176e : add dword ptr [rax], eax ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000e65f4 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0xc083
0x00000000001aff0e : add dword ptr [rax], eax ; add byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000c0fd5 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000244ed : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2076
0x00000000000cd493 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000012410e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x0000000000124149 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x00000000000e2e70 : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xdeeb
0x000000000009f59a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000080211 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000202f7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7408
0x0000000000020304 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000001701c5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001701d2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001701df : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170197 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001701a4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000001701b1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000019a956 : add dword ptr [rax], eax ; add r14b, dil ; jmp rsp
0x00000000000ffecd : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x0000000000054d65 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019952e : add dword ptr [rax], eax ; and al, 0x1a ; call rsp
0x00000000001996ae : add dword ptr [rax], eax ; and al, 0x75 ; jmp rsp
0x00000000001b027e : add dword ptr [rax], eax ; and byte ptr [rbx], ah ; cmc ; call rsi
0x00000000001afffe : add dword ptr [rax], eax ; and byte ptr [rdx], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001b698e : add dword ptr [rax], eax ; and ch, cl ; sti ; call rsi
0x00000000001b9a96 : add dword ptr [rax], eax ; call 0x141b927f
0x00000000001b3d46 : add dword ptr [rax], eax ; call 0x211b338c
0x00000000001ae886 : add dword ptr [rax], eax ; call 0x221add35
0x00000000001b1166 : add dword ptr [rax], eax ; call 0x221b06d8
0x00000000001b1756 : add dword ptr [rax], eax ; call 0x221b0cd2
0x00000000001bb4d6 : add dword ptr [rax], eax ; call 0x231bb065
0x00000000001b2f06 : add dword ptr [rax], eax ; call 0x271b2529
0x00000000001b32b6 : add dword ptr [rax], eax ; call 0x271b2ec3
0x00000000001ba8a6 : add dword ptr [rax], eax ; call 0xffffffffc41ba0b1
0x00000000001bc116 : add dword ptr [rax], eax ; clc ; call qword ptr [rax]
0x00000000001afa16 : add dword ptr [rax], eax ; clc ; clc ; hlt ; jmp rcx
0x00000000001b9c16 : add dword ptr [rax], eax ; clc ; fcompi st(7) ; jmp rdx
0x00000000001b1546 : add dword ptr [rax], eax ; clc ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x00000000001b2066 : add dword ptr [rax], eax ; clc ; popfq ; cmc ; call rdi
0x00000000001ae526 : add dword ptr [rax], eax ; clc ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001b0f26 : add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fe6 : add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b2cd6 : add dword ptr [rax], eax ; cmp ch, bh ; cmc ; jmp qword ptr [rsi]
0x00000000001b3bae : add dword ptr [rax], eax ; cmp sil, sil ; call qword ptr [rax]
0x00000000001af986 : add dword ptr [rax], eax ; cwde ; clc ; hlt ; jmp qword ptr [rcx]
0x00000000001bbab6 : add dword ptr [rax], eax ; cwde ; clc ; jmp qword ptr [rcx]
0x00000000001b1046 : add dword ptr [rax], eax ; cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001bb686 : add dword ptr [rax], eax ; cwde ; cmp eax, edi ; call rbx
0x00000000001ae636 : add dword ptr [rax], eax ; cwde ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000001b31d6 : add dword ptr [rax], eax ; cwde ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001ae4c6 : add dword ptr [rax], eax ; cwde ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001b1876 : add dword ptr [rax], eax ; fdiv dword ptr [rdi - 0xb] ; jmp qword ptr [rcx]
0x00000000001b4346 : add dword ptr [rax], eax ; fmul dword ptr [rdx - 0xa] ; call qword ptr [rax]
0x00000000001b0e96 : add dword ptr [rax], eax ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000001af4e6 : add dword ptr [rax], eax ; fsub st(4) ; hlt ; jmp qword ptr [rcx]
0x000000000019b0be : add dword ptr [rax], eax ; hlt ; out dx, eax ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x0000000000199a66 : add dword ptr [rax], eax ; hlt ; pop rsp ; call rsp
0x000000000019c516 : add dword ptr [rax], eax ; hlt ; ret 0xfffa
0x000000000019c83e : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001997ae : add dword ptr [rax], eax ; hlt ; std ; jmp rsp
0x00000000001b4546 : add dword ptr [rax], eax ; idiv r15b ; ret 1
0x000000000019c52e : add dword ptr [rax], eax ; in al, -0x3a ; cli ; call rsp
0x00000000001992e6 : add dword ptr [rax], eax ; in al, 0x27 ; int1 ; jmp rsp
0x00000000001995d6 : add dword ptr [rax], eax ; in al, 0x30 ; jmp rsp
0x00000000001993e6 : add dword ptr [rax], eax ; in al, 0x53 ; int1 ; call rsp
0x000000000019b1d6 : add dword ptr [rax], eax ; in al, 5 ; clc ; jmp rsp
0x000000000019c7fe : add dword ptr [rax], eax ; je 0x19c7c6 ; std ; call rsp
0x000000000019c816 : add dword ptr [rax], eax ; je 0x19c7df ; std ; jmp rsp
0x00000000000460b6 : add dword ptr [rax], eax ; jne 0x460b8 ; mov rax, rbx ; pop rbx ; ret
0x00000000001ade8e : add dword ptr [rax], eax ; jo 0x1adef0 ; stc ; call qword ptr [rax]
0x00000000001ae56e : add dword ptr [rax], eax ; jo 0x1ae50e ; hlt ; jmp qword ptr [rcx]
0x00000000001ae80e : add dword ptr [rax], eax ; jo 0x1ae7ba ; hlt ; jmp qword ptr [rcx]
0x00000000001af79e : add dword ptr [rax], eax ; jo 0x1af794 ; hlt ; jmp qword ptr [rsi]
0x00000000001b16ae : add dword ptr [rax], eax ; jo 0x1b16ad ; jmp qword ptr [rcx]
0x00000000001b16de : add dword ptr [rax], eax ; jo 0x1b1757 ; cmc ; jmp qword ptr [rcx]
0x00000000001ae696 : add dword ptr [rax], eax ; js 0x1ae6f0 ; stc ; call qword ptr [rax]
0x00000000001af4b6 : add dword ptr [rax], eax ; js 0x1af4a3 ; hlt ; jmp qword ptr [rcx]
0x00000000001aff86 : add dword ptr [rax], eax ; js 0x1affa8 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d36 : add dword ptr [rax], eax ; js 0x1b0da1 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f56 : add dword ptr [rax], eax ; js 0x1b0fc3 ; cmc ; jmp qword ptr [rcx]
0x00000000001b1316 : add dword ptr [rax], eax ; js 0x1b1388 ; cmc ; jmp qword ptr [rcx]
0x00000000001ad48e : add dword ptr [rax], eax ; loopne 0x1ad46c ; jmp qword ptr [rcx]
0x00000000001ade6e : add dword ptr [rax], eax ; loopne 0x1addfa ; hlt ; call qword ptr [rax]
0x00000000001ae24e : add dword ptr [rax], eax ; loopne 0x1ae1e6 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae50e : add dword ptr [rax], eax ; loopne 0x1ae4ad ; hlt ; jmp qword ptr [rcx]
0x00000000001aec2e : add dword ptr [rax], eax ; loopne 0x1aec03 ; hlt ; jmp rbx
0x00000000001af05e : add dword ptr [rax], eax ; loopne 0x1af041 ; hlt ; jmp qword ptr [rcx]
0x000000000019b376 : add dword ptr [rax], eax ; mov ah, 0x33 ; clc ; call rsp
0x0000000000199dc6 : add dword ptr [rax], eax ; mov ah, 0x8c ; cmc ; call rsp
0x000000000019c4f6 : add dword ptr [rax], eax ; mov ah, 0xc2 ; cli ; jmp rsp
0x000000000019b0ce : add dword ptr [rax], eax ; mov ah, 0xf2 ; idiv edi ; ret
0x00000000001b105e : add dword ptr [rax], eax ; mov al, 0x65 ; cmc ; jmp qword ptr [rcx]
0x00000000001b190e : add dword ptr [rax], eax ; mov al, 0x7a ; cmc ; jmp rax
0x00000000001ae4de : add dword ptr [rax], eax ; mov al, 0x96 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae64e : add dword ptr [rax], eax ; mov al, 0x9e ; hlt ; jmp qword ptr [rcx]
0x00000000001ad45e : add dword ptr [rax], eax ; mov al, 0xd5 ; jmp qword ptr [rcx]
0x00000000001ad56e : add dword ptr [rax], eax ; mov al, 0xd7 ; call qword ptr [rdi]
0x00000000001af02e : add dword ptr [rax], eax ; mov al, 0xda ; hlt ; jmp qword ptr [rcx]
0x00000000001af38e : add dword ptr [rax], eax ; mov al, 0xe2 ; hlt ; jmp qword ptr [rcx]
0x00000000001af99e : add dword ptr [rax], eax ; mov al, 0xf8 ; hlt ; jmp qword ptr [rcx]
0x00000000001b16f6 : add dword ptr [rax], eax ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001afec6 : add dword ptr [rax], eax ; mov byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0656 : add dword ptr [rax], eax ; mov byte ptr [rdx - 0xb], al ; jmp rax
0x000000000009f395 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009f2c1 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000001b5a36 : add dword ptr [rax], eax ; mov spl, 0xf6 ; call rdi
0x0000000000199196 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; add esi, eax ; call rsp
0x000000000019c74e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; std ; call rsp
0x000000000019b62e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019a68e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sal dh, 1 ; jmp rsp
0x0000000000199776 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; call rsp
0x00000000001b68ee : add dword ptr [rax], eax ; nop ; and dh, bh ; call qword ptr [rbx]
0x00000000001b0f6e : add dword ptr [rax], eax ; nop ; cmc ; jmp qword ptr [rcx]
0x00000000001b916e : add dword ptr [rax], eax ; nop ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x00000000001b0b7e : add dword ptr [rax], eax ; nop ; push rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b2fae : add dword ptr [rax], eax ; nop ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001aff9e : add dword ptr [rax], eax ; nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x000000000019aa7e : add dword ptr [rax], eax ; or al, 0xf7 ; call rsp
0x00000000001b1226 : add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b2ff6 : add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001af5c6 : add dword ptr [rax], eax ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001b3db6 : add dword ptr [rax], eax ; pop rax ; cmp al, 0xf6 ; jmp rdi
0x00000000001b16c6 : add dword ptr [rax], eax ; pop rax ; jo 0x1b16c5 ; jmp qword ptr [rcx]
0x00000000001aee26 : add dword ptr [rax], eax ; pop rax ; salc ; hlt ; call qword ptr [rbx]
0x00000000001ae556 : add dword ptr [rax], eax ; pop rax ; xchg eax, edi ; hlt ; jmp qword ptr [rcx]
0x0000000000032c20 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ad876 : add dword ptr [rax], eax ; pop rdx ; sub al, 0xe7 ; jmp qword ptr [rax]
0x00000000001ad63e : add dword ptr [rax], eax ; push rax ; add ah, dh ; jmp rcx
0x00000000001af32e : add dword ptr [rax], eax ; push rax ; loop 0x1af32c ; jmp qword ptr [rbx]
0x00000000001b318e : add dword ptr [rax], eax ; push rax ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001b0b36 : add dword ptr [rax], eax ; push rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000199fa6 : add dword ptr [rax], eax ; push rsp ; cld ; cmc ; jmp rsp
0x000000000019b5e6 : add dword ptr [rax], eax ; push rsp ; mov cl, 0xf8 ; call rsp
0x000000000019b616 : add dword ptr [rax], eax ; push rsp ; ret
0x000000000019b82e : add dword ptr [rax], eax ; push rsp ; stc ; jmp rsp
0x00000000001b0abe : add dword ptr [rax], eax ; rcl byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b2fde : add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001af1ee : add dword ptr [rax], eax ; rcr dh, 0xf4 ; jmp qword ptr [rcx]
0x0000000000089859 : add dword ptr [rax], eax ; ret
0x00000000001bc6f4 : add dword ptr [rax], eax ; ret 0x502
0x00000000001ad2fe : add dword ptr [rax], eax ; ret 0xfff3
0x00000000001bacfe : add dword ptr [rax], eax ; rol byte ptr [rdi], 1 ; clc ; jmp qword ptr [rbx]
0x00000000001b173e : add dword ptr [rax], eax ; sal byte ptr [rax - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001af486 : add dword ptr [rax], eax ; sbb ah, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001af596 : add dword ptr [rax], eax ; sbb bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b12e6 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b1786 : add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b31be : add dword ptr [rax], eax ; sbb byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001aff26 : add dword ptr [rax], eax ; sbb byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b06 : add dword ptr [rax], eax ; sbb byte ptr [rdx - 0xb], dl ; jmp qword ptr [rcx]
0x00000000001b5dce : add dword ptr [rax], eax ; sbb dl, 0xf6 ; call qword ptr [rdi]
0x00000000001aff56 : add dword ptr [rax], eax ; sbb rbp, rsi ; jmp qword ptr [rcx]
0x00000000001b2f66 : add dword ptr [rax], eax ; sbb sil, sil ; jmp qword ptr [rsi]
0x0000000000199086 : add dword ptr [rax], eax ; shr edi, cl ; call rsp
0x00000000001accb6 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xd], dh ; call qword ptr [rsi]
0x00000000001bc0e6 : add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call qword ptr [rdi]
0x00000000001bc206 : add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call rcx
0x00000000001afe46 : add dword ptr [rax], eax ; sub byte ptr [rdi], dl ; cmc ; call qword ptr [rdx]
0x00000000001b7796 : add dword ptr [rax], eax ; sub byte ptr [rdx - 9], cl ; call qword ptr [rdi]
0x00000000001b10d6 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001ad4d6 : add dword ptr [rax], eax ; sub dh, dl ; jmp qword ptr [rcx]
0x000000000019b0d6 : add dword ptr [rax], eax ; test ah, dh ; idiv edi ; pushfq ; ret
0x00000000001b0d66 : add dword ptr [rax], eax ; test al, 0x62 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f86 : add dword ptr [rax], eax ; test al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x000000000019ac9e : add dword ptr [rax], eax ; test byte ptr [rdi + rsi*8], bh ; jmp rsp
0x000000000019b86e : add dword ptr [rax], eax ; test byte ptr [rdi], bh ; stc ; jmp rsp
0x000000000019b85e : add dword ptr [rax], eax ; test byte ptr [rsi], bh ; stc ; call rsp
0x000000000019b7ce : add dword ptr [rax], eax ; test byte ptr [rsi], dl ; stc ; jmp rsp
0x000000000019b566 : add dword ptr [rax], eax ; xchg eax, ecx ; clc ; call rsp
0x0000000000199f66 : add dword ptr [rax], eax ; xchg eax, esp ; cli ; cmc ; jmp rsp
0x000000000019959e : add dword ptr [rax], eax ; xor al, 0x2e ; call rsp
0x000000000019b3ae : add dword ptr [rax], eax ; xor al, 0x3d ; clc ; call rsp
0x0000000000199366 : add dword ptr [rax], eax ; xor al, 0x42 ; int1 ; jmp rsp
0x000000000019b43e : add dword ptr [rax], eax ; xor al, 0x56 ; clc ; jmp rsp
0x00000000001996de : add dword ptr [rax], eax ; xor al, 0xc9 ; jmp rsp
0x0000000000199ebe : add dword ptr [rax], eax ; xor al, 0xf5 ; cmc ; call rsp
0x00000000001af5ae : add dword ptr [rax], eax ; xor bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b179e : add dword ptr [rax], eax ; xor byte ptr [rcx - 0xb], dh ; jmp rbx
0x000000000008e451 : add dword ptr [rax], edi ; ret
0x0000000000094363 : add dword ptr [rax], edi ; ret 0x4788
0x00000000001b0f25 : add dword ptr [rax], r8d ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d35 : add dword ptr [rax], r8d ; js 0x1b0da2 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f55 : add dword ptr [rax], r8d ; js 0x1b0fc4 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f6d : add dword ptr [rax], r8d ; nop ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d65 : add dword ptr [rax], r8d ; test al, 0x62 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f85 : add dword ptr [rax], r8d ; test al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x0000000000123bd4 : add dword ptr [rbp + 0x148fe4a], ecx ; jmp 0x123c2d
0x000000000009a58c : add dword ptr [rbp + 0x19], ecx ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000009c7d0 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000001244e5 : add dword ptr [rbp + 0xf], edx ; xchg eax, esi ; ret 0x8341
0x00000000000c2de2 : add dword ptr [rbp + 1], ecx ; ret
0x000000000005d14c : add dword ptr [rbp - 0x1d0], 1 ; jmp 0x5d11f
0x0000000000047080 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x0000000000095ba0 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x00000000000de2b6 : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x000000000015b002 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000980ba : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000d3db8 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x8d48
0x00000000000d6eea : add dword ptr [rbx + 0x294903e0], eax ; ret 0x149
0x0000000000002702 : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x0000000000082f1c : add dword ptr [rbx + 0x3412cd05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x000000000011d738 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000000e69e3 : add dword ptr [rbx + 0x5489d314], ecx ; ret
0x00000000000a9872 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; ret
0x00000000000d4601 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000d45fe : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001abef6 : add dword ptr [rbx + rax], 0x35 ; add dword ptr [rdx], ecx ; ret
0x00000000000332b1 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000e3819 : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d679d : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x000000000007e145 : add dword ptr [rbx - 0xd], ebx ; ret
0x00000000001a5a42 : add dword ptr [rbx], eax ; mov edi, 0x380e0a01 ; ret
0x000000000019d528 : add dword ptr [rbx], eax ; ret 0xe03
0x00000000001bc95a : add dword ptr [rbx], ecx ; ret
0x00000000001319e1 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000099812 : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000000d511f : add dword ptr [rcx + 0x29], ecx ; ret 0x2948
0x00000000000ab60f : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000094f08 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x0000000000024511 : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x00000000000253c4 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x000000000013e8f5 : add dword ptr [rcx + 0x752c2444], ecx ; sub al, 0x83 ; ret
0x0000000000111993 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89482404 ; ret 0xe883
0x000000000002db72 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000013a1ec : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000045ac3 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x00000000000e87ca : add dword ptr [rcx - 0x75], 0x39da8906 ; ret 0x3673
0x00000000000a1c06 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006d635 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000005b600 : add dword ptr [rcx - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000110139 : add dword ptr [rcx - 0x77], ecx ; ret
0x000000000005fd92 : add dword ptr [rcx - 0x77], ecx ; ret 0x3ae9
0x0000000000062d91 : add dword ptr [rcx - 0x77], ecx ; ret 0xae9
0x0000000000062506 : add dword ptr [rcx - 0x77], ecx ; ret 0xfde9
0x000000000006d634 : add dword ptr [rcx - 0x77], r8d ; ret 0xe883
0x0000000000044d86 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x0000000000026177 : add dword ptr [rcx - 0x78], eax ; dec qword ptr [r8 + 0x39] ; ret 0xe675
0x000000000005c342 : add dword ptr [rcx - 0x7d], eax ; call 0xffffffffc2890c52
0x000000000003d1b3 : add dword ptr [rcx - 0x7d], ecx ; out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000003d53b : add dword ptr [rcx - 0x7d], ecx ; out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret 0xf04
0x00000000000c1ef5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000005c346 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009bb5c : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x000000000010da09 : add dword ptr [rcx - 0x7d], ecx ; ret 0xeb08
0x00000000000c13e5 : add dword ptr [rcx - 0x7f], eax ; ret
0x00000000000bd1b9 : add dword ptr [rcx - 3], -1 ; push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008de57 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ab35b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000124175 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x00000000000d592d : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d597f : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x000000000003c287 : add dword ptr [rcx], ecx ; ret 0xd284
0x00000000001097c3 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000d6b11 : add dword ptr [rcx], edi ; ret
0x0000000000046dad : add dword ptr [rcx], edi ; ret 0x8949
0x00000000000daf6d : add dword ptr [rcx], edi ; ret 0xd675
0x00000000000d73b3 : add dword ptr [rcx], edi ; ret 0xe875
0x00000000000e950b : add dword ptr [rcx], edi ; ret 0xe87f
0x000000000013b850 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013b860 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013b8ef : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001735ca : add dword ptr [rdi + 3], esi ; ret
0x0000000000095937 : add dword ptr [rdi - 0x1a], edi ; ret
0x0000000000096dfc : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a68a3 : add dword ptr [rdi], 2 ; lodsb al, byte ptr [rsi] ; ret
0x00000000001ab4e3 : add dword ptr [rdi], 2 ; ret
0x00000000001b2b97 : add dword ptr [rdi], 3 ; xor eax, dword ptr [rdx] ; ret
0x00000000001258d0 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d4578 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002e2a5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000006dc1d : add dword ptr [rdi], ecx ; mov dh, 0x46 ; add ch, cl ; ret
0x00000000000bba18 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x00000000000a98a3 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a98b1 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x000000000016831e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x0000000000110804 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0x8441
0x00000000000d0343 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x840
0x00000000000458a8 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x543a
0x0000000000045948 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x00000000000a97a4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000a9ca0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000a1bc4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x00000000001722d2 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006c82e : add dword ptr [rdx + 4], 1 ; ret
0x000000000006c898 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000001091cb : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001b6146 : add dword ptr [rdx + rax], -0x59 ; ret
0x00000000001a4a56 : add dword ptr [rdx + rax], -0xa ; ret
0x00000000001b04ee : add dword ptr [rdx + rax], 0x55 ; ret
0x0000000000095599 : add dword ptr [rdx], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000019ea55 : add dword ptr [rdx], 0x44 ; ret
0x00000000001aa534 : add dword ptr [rdx], 0x4a ; ret
0x00000000001baf24 : add dword ptr [rdx], 0x51 ; ret
0x00000000001a685d : add dword ptr [rdx], 0x52 ; ret
0x00000000001b02ac : add dword ptr [rdx], 0x53 ; ret
0x00000000001aeda5 : add dword ptr [rdx], 0x54 ; ret
0x00000000001b330b : add dword ptr [rdx], 0x5b ; ret
0x00000000001a08fc : add dword ptr [rdx], 0x63 ; ret
0x00000000001b028d : add dword ptr [rdx], 0x67 ; ret
0x00000000001a1034 : add dword ptr [rdx], 0x6f ; ret
0x00000000000cec7f : add dword ptr [rdx], 0x75c08500 ; ret 0x858b
0x00000000001a0bc5 : add dword ptr [rdx], 2 ; insb byte ptr [rdi], dx ; ret
0x00000000001a33dc : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000001a31b4 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000001b56f4 : add dword ptr [rdx], 3 ; add dword ptr gs:[rdx], ecx ; ret
0x000000000019b8fd : add dword ptr [rdx], eax ; add byte ptr [rdx + rcx*2], ah ; stc ; call rsp
0x00000000001245bf : add dword ptr [rdx], eax ; pop rbx ; pop rbp ; ret
0x00000000001a9d29 : add dword ptr [rdx], eax ; ret
0x000000000019caa0 : add dword ptr [rdx], ecx ; ret
0x00000000001245be : add dword ptr [rdx], r8d ; pop rbx ; pop rbp ; ret
0x000000000007e13f : add dword ptr [rip + 0x348892], 1 ; pop rbx ; ret
0x000000000007d948 : add dword ptr [rip + 0x349005], 1 ; ret
0x00000000001a3f83 : add dword ptr [rip + 0x4d00e55], 2 ; ret 0xe0a
0x00000000000a1b55 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001a7b0f : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a208e : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a0a2b : add dword ptr [rsi + rcx + 0x20], ecx ; ret
0x00000000001a5b16 : add dword ptr [rsi + rcx + 0x70], ecx ; add bl, byte ptr [rsi + rcx + 0x38] ; ret
0x000000000019d524 : add dword ptr [rsi + rcx - 0x20], eax ; add dword ptr [rbx], eax ; ret 0xe03
0x0000000000119b0b : add dword ptr [rsi - 0x76b7ffd6], edi ; ret 0x8b48
0x00000000000a1bd7 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a4eae : add dword ptr [rsi], 0xa ; ret
0x00000000001abf50 : add dword ptr [rsi], 2 ; hlt ; ret
0x00000000001a75cd : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001af79d : add dword ptr cs:[rax], eax ; jo 0x1af795 ; hlt ; jmp qword ptr [rsi]
0x000000000009eb55 : add dword ptr ds:[rax], eax ; add bh, dh ; ret 0
0x000000000014d097 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001995d5 : add dword ptr es:[rax], eax ; in al, 0x30 ; jmp rsp
0x00000000001b300c : add dword ptr fs:[eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2cd5 : add dword ptr fs:[rax], eax ; cmp ch, bh ; cmc ; jmp qword ptr [rsi]
0x00000000000d597e : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000001b56f7 : add dword ptr gs:[rdx], ecx ; ret
0x00000000001aff0d : add dword ptr ss:[rax], eax ; add byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aff85 : add dword ptr ss:[rax], eax ; js 0x1affa9 ; cmc ; jmp qword ptr [rcx]
0x00000000001afec5 : add dword ptr ss:[rax], eax ; mov byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aff9d : add dword ptr ss:[rax], eax ; nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001aff25 : add dword ptr ss:[rax], eax ; sbb byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aff55 : add dword ptr ss:[rax], eax ; sbb rbp, rsi ; jmp qword ptr [rcx]
0x0000000000001589 : add eax, 0 ; add byte ptr [rax], al ; ret
0x000000000002d3b9 : add eax, 0x10 ; mov rax, qword ptr [rsi + rax*8] ; ret
0x0000000000123886 : add eax, 0x10 ; ret
0x000000000007d94a : add eax, 0x1003490 ; ret
0x0000000000006b69 : add eax, 0x110000 ; verw word ptr [rcx] ; ret 0x18
0x000000000002d3aa : add eax, 0x15eddf ; ret
0x000000000008bae6 : add eax, 0x162a5 ; ret
0x0000000000089856 : add eax, 0x16915 ; ret
0x0000000000020b42 : add eax, 0x16b15c ; ret
0x0000000000020b52 : add eax, 0x16d2b5 ; ret
0x00000000000be2f0 : add eax, 0x16e ; ret
0x00000000001bf0c9 : add eax, 0x1a40000 ; add byte ptr [rax], al ; ret 3
0x000000000008eb8c : add eax, 0x1f ; ret
0x00000000001aa3bc : add eax, 0x2300e44 ; ret 0xe0a
0x00000000001406c2 : add eax, 0x2823b9 ; jmp rax
0x0000000000140671 : add eax, 0x282402 ; pop rbp ; pop r12 ; jmp rax
0x0000000000140611 : add eax, 0x28245a ; pop rbp ; pop r12 ; jmp rax
0x0000000000140735 : add eax, 0x284db6 ; call qword ptr [rax]
0x0000000000140138 : add eax, 0x2853b3 ; call qword ptr [rax]
0x00000000001379f2 : add eax, 0x28c491 ; add rsp, 8 ; ret
0x00000000001379c2 : add eax, 0x28c529 ; add rsp, 8 ; ret
0x0000000000137962 : add eax, 0x28c611 ; add rsp, 8 ; ret
0x0000000000137992 : add eax, 0x28c651 ; add rsp, 8 ; ret
0x000000000008d91b : add eax, 0x29000000 ; ret
0x00000000000c142a : add eax, 0x2907fec1 ; ret 0x8944
0x00000000000c156e : add eax, 0x2941c229 ; ret
0x0000000000128af2 : add eax, 0x29b4f9 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012c5ea : add eax, 0x29cd4d ; add rsp, 8 ; ret
0x000000000012c5d1 : add eax, 0x29cd66 ; test eax, eax ; je 0x12c5e9 ; ret
0x000000000012b9da : add eax, 0x29d8e1 ; pop rbx ; ret
0x000000000012b9a2 : add eax, 0x29d919 ; pop rbx ; ret
0x000000000012b8e3 : add eax, 0x29d9d8 ; pop rbx ; ret
0x00000000001283eb : add eax, 0x2a0b94 ; test eax, eax ; je 0x128401 ; ret
0x000000000012146a : add eax, 0x2a4541 ; ret
0x0000000000120c00 : add eax, 0x2a4d93 ; add rsp, 8 ; ret
0x00000000001190a7 : add eax, 0x2af49c ; add rsp, 0x28 ; jmp rax
0x00000000001155d9 : add eax, 0x2b2f42 ; pop rbp ; ret
0x0000000000109e42 : add eax, 0x2ba019 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000102020 : add eax, 0x2c54fb ; add rsp, 0x18 ; ret
0x0000000000101fcc : add eax, 0x2c558f ; pop rbp ; pop r12 ; ret
0x00000000001683a4 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000101a38 : add eax, 0x2c5a93 ; add rsp, 8 ; ret
0x00000000001019d9 : add eax, 0x2c5b12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe5e6 : add eax, 0x2c72d5 ; mov rdx, rax ; jmp 0xfe586
0x00000000000fe550 : add eax, 0x2c736b ; add rsp, 8 ; ret
0x00000000000ffbcb : add eax, 0x2c7800 ; add rsp, 8 ; ret
0x00000000000fe41f : add eax, 0x2c8e54 ; ret
0x00000000000fe257 : add eax, 0x2c901c ; ret
0x00000000000fe08c : add eax, 0x2c91e7 ; add rsp, 8 ; ret
0x00000000001a75cb : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000ba4d1 : add eax, 0x30c7aa ; add rsp, 8 ; ret
0x000000000008d7a7 : add eax, 0x33935c ; add rsp, 8 ; ret
0x0000000000084480 : add eax, 0x33fa4b ; mov qword ptr [rax], rdi ; ret
0x0000000000082c23 : add eax, 0x341190 ; xor edi, edi ; call qword ptr [rax]
0x0000000000082916 : add eax, 0x34149d ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000084491 : add eax, 0x34252e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007d8b2 : add eax, 0x347d49 ; ret
0x000000000007e140 : add eax, 0x348892 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007d9b6 : add eax, 0x348f99 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006c0e5 : add eax, 0x35a806 ; pop rbx ; pop rbp ; ret
0x0000000000115d99 : add eax, 0x37942 ; ret
0x0000000000115e69 : add eax, 0x37c12 ; ret
0x0000000000036714 : add eax, 0x38d96f ; mov eax, edx ; ret
0x00000000000366d1 : add eax, 0x38d9b2 ; ret
0x00000000000366c1 : add eax, 0x38d9c6 ; ret
0x000000000003ae92 : add eax, 0x38eaff ; add rsp, 8 ; ret
0x000000000002de2d : add eax, 0x395fa6 ; mov qword ptr [rax], rdx ; ret
0x000000000002a492 : add eax, 0x39b5a1 ; ret
0x000000000002061e : add eax, 0x3a3c15 ; pop rbp ; pop r12 ; ret
0x000000000001f56f : add eax, 0x3a6494 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022202 : add eax, 0x3a7641 ; ret
0x00000000000221f2 : add eax, 0x3a7661 ; ret
0x00000000000210cc : add eax, 0x3a872f ; ret
0x000000000013955d : add eax, 0x3d8d4800 ; ret
0x00000000000f6257 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000016a8d8 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000166588 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000a4f36 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000001258d2 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009eeea : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000016a959 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001665c9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000006f9b0 : add eax, 0x5b000000 ; ret
0x000000000017bd89 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x000000000018037d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000115e93 : add eax, 0x5c318 ; ret
0x00000000000f036d : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000010f3ae : add eax, 0x740a3a90 ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d0241 : add eax, 0x745ef980 ; cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d0140 : add eax, 0x745ef983 ; sub cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ab035 : add eax, 0x75d13948 ; in eax, 0x44 ; sub eax, eax ; ret
0x00000000000b8a66 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000002e97f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008f9a2 : add eax, 0x79 ; ret
0x00000000000a573e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x0000000000125d36 : add eax, 0x83000002 ; ret
0x00000000000d1d74 : add eax, 0x83000004 ; ret 0x4201
0x00000000000d73ad : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000a979e : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000f863b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000144d3d : add eax, 0x83480000 ; ret 0x4910
0x0000000000147891 : add eax, 0x83480000 ; ret 0xe910
0x0000000000144c91 : add eax, 0x83480000 ; ret 0xeb10
0x000000000016a8db : add eax, 0x8428d48 ; ret
0x00000000000fe1eb : add eax, 0x85480000 ; sal byte ptr [rbp - 0x33], 0x5b ; ret
0x00000000001154a9 : add eax, 0x89c78944 ; ret
0x000000000002727d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000027261 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000005aa6c : add eax, 0x8d480000 ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a6de2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x00000000001379b6 : add eax, 0xa0 ; add rsp, 8 ; ret
0x00000000001379e6 : add eax, 0xa8 ; add rsp, 8 ; ret
0x00000000000943b7 : add eax, 0xbb94 ; ret
0x00000000000943cb : add eax, 0xbc420 ; ret
0x000000000008da63 : add eax, 0xbc648 ; ret
0x000000000008d6e3 : add eax, 0xbc898 ; ret
0x000000000008f349 : add eax, 0xbe742 ; ret
0x000000000008b243 : add eax, 0xbebf8 ; ret
0x000000000014003e : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000016ecda : add eax, 0xc0310000 ; ret
0x00000000000d679b : add eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000aab84 : add eax, 0xc2a77 ; ret
0x00000000000ab740 : add eax, 0xc3b7b ; ret
0x000000000016a95d : add eax, 0xc428d48 ; ret
0x00000000000a657d : add eax, 0xc478d48 ; ret
0x0000000000030f02 : add eax, 0xc4834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000ab748 : add eax, 0xc6433 ; ret
0x00000000000a73bd : add eax, 0xd478d48 ; ret
0x000000000008d3c6 : add eax, 0xd9255 ; ret
0x000000000008f836 : add eax, 0xd9965 ; ret
0x000000000008b136 : add eax, 0xd9d35 ; ret
0x000000000008f956 : add eax, 0xdb055 ; ret
0x000000000008eba0 : add eax, 0xdf0db ; ret
0x000000000008eba8 : add eax, 0xe1863 ; ret
0x000000000008f1b3 : add eax, 0xe3008 ; ret
0x0000000000089a43 : add eax, 0xe66a8 ; ret
0x00000000000ab72c : add eax, 0xe74f ; ret
0x00000000000effb5 : add eax, 0xe9000000 ; ret 0xf3ea
0x00000000000aab7c : add eax, 0xf38f ; ret
0x00000000000e7f70 : add eax, 0xf602e683 ; ret 0xf10
0x0000000000103c22 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000103c47 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000103d90 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103e29 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015aff3 : add eax, 0xf7f0ff3 ; ret
0x00000000000c7359 : add eax, 0xf8830003 ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000001bc955 : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; ret
0x000000000013649e : add eax, 0xffffa26d ; mov rdi, rax ; call qword ptr [r10]
0x0000000000095903 : add eax, 0xfffffad8 ; add rsp, 8 ; ret
0x00000000000958ec : add eax, 0xfffffaef ; ret
0x00000000001096bb : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010946c : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x000000000008f7db : add eax, 1 ; ret
0x00000000000aae18 : add eax, 2 ; ret
0x00000000000aae31 : add eax, 3 ; ret
0x0000000000089ca6 : add eax, 5 ; ret
0x000000000008fa05 : add eax, 6 ; ret
0x000000000006af31 : add eax, 8 ; jmp 0x6aefd
0x000000000006b251 : add eax, 8 ; jmp 0x6b21c
0x00000000000ba3f8 : add eax, 8 ; mov rcx, qword ptr [rdx + rax*8] ; jmp 0xba3ba
0x00000000000d5933 : add eax, 8 ; ret
0x000000000008bb32 : add eax, 9 ; ret
0x00000000000213e9 : add eax, dword ptr [0] ; ret
0x00000000000c1d52 : add eax, dword ptr [rax] ; add al, ch ; push rsi ; ret
0x00000000000e3165 : add eax, dword ptr [rax] ; add al, ch ; ret 0xfff3
0x000000000009e677 : add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000009e66b : add eax, dword ptr [rax] ; add bh, dh ; ret 0xf800
0x000000000010dfd7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e2d61 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000fe3ac : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x34], 0x5b ; ret
0x0000000000023cf3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e1108 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000144edd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147a31 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144f01 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000450c6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000001326ee : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f78b : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000108de6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000115327 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000010296c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000010416d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000001041c4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104244 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104344 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000aae73 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000122a04 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x000000000003a320 : add eax, dword ptr [rax] ; add byte ptr [rax], cl ; jmp 0x3a2ee
0x0000000000137a3f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x0000000000114c25 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000d8621 : add eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret
0x00000000000e85d6 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000000fdd57 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a9ad0 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a9af0 : add eax, dword ptr [rax] ; ret
0x0000000000111772 : add eax, dword ptr [rbp + 0x30] ; imul cl ; ret 0xfff6
0x00000000000561ae : add eax, dword ptr [rbp - 0x10a8] ; jmp rax
0x000000000004c909 : add eax, dword ptr [rbp - 0x4f0] ; jmp rax
0x00000000001aaddb : add eax, dword ptr [rbx + 0xa810204] ; ret
0x000000000006e83a : add eax, dword ptr [rbx - 0x76fefbbe] ; ret 0xc4f6
0x00000000001244bd : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1244ce ; ret
0x0000000000168369 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000076156 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000019deb2 : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a2b8a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa480204], al ; ret
0x00000000001b5e9a : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa940204], al ; ret
0x00000000000a97aa : add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000000d7e57 : add eax, dword ptr [rcx - 0xa] ; ret
0x0000000000033c1b : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000014376a : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014306e : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000010a6db : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000168469 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001bc954 : add eax, dword ptr [rip - 0x10000] ; add dword ptr [rbx], ecx ; ret
0x00000000001abfa0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00000000001a37aa : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001ba8ba : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a1472 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a4a52 : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xa ; ret
0x00000000001b04ea : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], 0x55 ; ret
0x000000000010a91a : add eax, dword ptr [rsi + rdx] ; ret
0x00000000000ad32b : add eax, eax ; jmp 0xad159
0x000000000004f770 : add eax, eax ; ret
0x000000000003c7f5 : add eax, eax ; sub rdx, rax ; jmp 0x3c823
0x000000000003f6fa : add eax, eax ; sub rdx, rax ; jmp 0x3f72b
0x00000000000421ca : add eax, eax ; sub rdx, rax ; jmp 0x421fb
0x00000000000addfd : add eax, eax ; sub rdx, rax ; jmp 0xade27
0x00000000000b0637 : add eax, eax ; sub rdx, rax ; jmp 0xb065f
0x00000000000b2d07 : add eax, eax ; sub rdx, rax ; jmp 0xb2d2f
0x00000000000857ea : add eax, ebp ; jmp rax
0x0000000000032746 : add eax, ebp ; test byte ptr [rdi + 0x29480005], cl ; ret
0x000000000005b291 : add eax, ecx ; jmp rax
0x000000000008e8ba : add eax, ecx ; ret
0x000000000009f7b5 : add eax, edi ; add rax, r8 ; ret
0x000000000008e8b7 : add eax, edi ; add rax, rcx ; ret
0x00000000000d2a14 : add eax, edi ; jmp rax
0x000000000008d42b : add eax, edi ; ret
0x0000000000149e9b : add eax, edi ; sub rax, r8 ; ret
0x000000000014a0f0 : add eax, edi ; sub rax, rdx ; ret
0x000000000012e88d : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f6c9d : add eax, edx ; cmp rdi, rsi ; ja 0xf6c98 ; ret
0x000000000005acea : add eax, edx ; jmp rax
0x000000000012e8ae : add eax, edx ; ret
0x000000000003464d : add eax, edx ; shr rax, 0x3f ; ret
0x000000000008b87e : add eax, edx ; sub rax, rdi ; ret
0x00000000000fdd55 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000046cc4 : add eax, esi ; jmp rax
0x00000000000bb3f9 : add eax, esi ; ret
0x000000000004f76f : add eax, r8d ; ret
0x000000000004f42e : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000ba7b0 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000012bc30 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000000be822 : add ebp, ecx ; ret 0xfffb
0x00000000001864c0 : add ebp, esi ; in eax, dx ; call qword ptr [rdx]
0x0000000000003152 : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000000ce46e : add ebx, 1 ; mov rdx, rax ; jmp 0xce415
0x0000000000143172 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000011457c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000047481 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000feb0b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x0000000000003756 : add ebx, ebp ; in al, -0x12 ; jne 0x373c ; ret 0x975
0x000000000005d152 : add ebx, ebp ; ret 0x8b48
0x000000000015b1b3 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000010a5af : add ebx, esi ; ret
0x0000000000139e0b : add ebx, esp ; add r15d, 1 ; call r14
0x000000000008f2b8 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8f2a9 ; ret
0x00000000000f5e3f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000012484d : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000a1c5a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011e7c6 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007f1da : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000980bd : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x0000000000110e7c : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x000000000011fc14 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x000000000011f457 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000d3dbb : add ecx, dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000002729f : add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000073876 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x00000000000f5841 : add ecx, dword ptr [rax + 1] ; ret 0x8948
0x0000000000108e2d : add ecx, dword ptr [rax - 0x42] ; ret
0x0000000000124a2c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x0000000000087341 : add ecx, dword ptr [rax - 0x73] ; push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000ff304 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009eeca : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000bdbcf : add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000105495 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x0000000000071326 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000038dcd : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000096e66 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000078bc3 : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x0000000000143439 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000015af22 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000d6eed : add ecx, dword ptr [rcx + 0x29] ; ret 0x149
0x00000000000a4ed4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000fa589 : add ecx, dword ptr [rcx + 0xf202474] ; xchg eax, esp ; ret 0x8445
0x000000000012355b : add ecx, dword ptr [rcx + rcx*4 + 0x55] ; mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000000a1c5b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000011176e : add ecx, dword ptr [rcx - 0x7d] ; in eax, dx ; add eax, dword ptr [rbp + 0x30] ; imul cl ; ret 0xfff6
0x00000000000d9d5f : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000b6b08 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00000000001a78d8 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb7cd : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000a5700 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001ae99f : add ecx, dword ptr [rdx] ; ret
0x000000000002c5b8 : add ecx, eax ; jmp rcx
0x000000000019e1c9 : add ecx, ebp ; call qword ptr [rdx]
0x000000000019e139 : add ecx, ebp ; call qword ptr [rsi]
0x000000000009a354 : add ecx, ebp ; ret
0x0000000000031d5f : add ecx, ebp ; ret 0xfff4
0x000000000015080b : add ecx, ebx ; jmp r9
0x000000000016dca2 : add ecx, ebx ; jmp rcx
0x0000000000102524 : add ecx, ebx ; ret
0x00000000001021e8 : add ecx, ebx ; ret 0x3944
0x000000000006d8b3 : add ecx, edx ; jmp rcx
0x00000000000a9b44 : add ecx, esi ; jmp rcx
0x000000000013240d : add edi, 0x10 ; jmp rcx
0x000000000012bf7f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e18a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000134ef4 : add edi, 0x58 ; jmp rcx
0x0000000000134654 : add edi, 0x68 ; jmp rcx
0x0000000000131877 : add edi, 0xc8 ; jmp rcx
0x0000000000139e0e : add edi, 1 ; call r14
0x000000000009eea4 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000cff3b : add edi, 1 ; test dl, dl ; jne 0xcff29 ; ret
0x000000000009eeb5 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009eec8 : add edi, 3 ; mov rax, rdi ; ret
0x000000000009eed5 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009eee8 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009ee72 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x000000000002d39d : add edi, 8 ; mov rax, qword ptr [rdx + rdi*8] ; ret
0x00000000001723bf : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000000db675 : add edi, dword ptr [rcx] ; ret
0x00000000001a5a43 : add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x0000000000033334 : add edi, eax ; jmp rdi
0x0000000000020add : add edi, ebp ; call rax
0x00000000000e3c08 : add edi, ebx ; jmp rdi
0x0000000000150808 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000124825 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000035bc7 : add edi, esi ; ret 0
0x00000000001247b1 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000001b33d4 : add edx, dword ptr [rcx + 0x200e0a01] ; ret
0x000000000019ca9e : add edx, dword ptr [rsi] ; add dword ptr [rdx], ecx ; ret
0x000000000009f6b8 : add edx, eax ; jl 0x9f727 ; add rax, rdi ; ret
0x000000000009f6c8 : add edx, eax ; jl 0x9f729 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f6e8 : add edx, eax ; jl 0x9f729 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f708 : add edx, eax ; jl 0x9f729 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d58d6 : add edx, eax ; jmp 0xd58ea
0x000000000009ee5d : add edx, eax ; jmp r10
0x0000000000020f8b : add edx, eax ; jmp rdx
0x00000000000480e2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000330cf : add edx, ecx ; jmp rdx
0x0000000000055759 : add edx, edi ; call qword ptr [r11 + rax*8]
0x000000000004a3b1 : add edx, esi ; call qword ptr [r11 + rax*8]
0x000000000018761d : add edx, esi ; call qword ptr [rax]
0x0000000000187621 : add edx, esi ; jmp qword ptr [rax]
0x00000000000ba575 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000a8d89 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001ae99d : add esi, dword ptr [rcx] ; add ecx, dword ptr [rdx] ; ret
0x0000000000124a04 : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000136774 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000003af8c : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136c26 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012ddd2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009f393 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000199199 : add esi, eax ; call rsp
0x00000000000450cc : add esi, eax ; jmp qword ptr [rax]
0x00000000000a9a7c : add esi, eax ; jmp rsi
0x000000000013b4e3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000015b0d3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142923 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f6e1c : add esi, ebx ; ret
0x00000000001246ca : add esi, ebx ; stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035de9 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000063340 : add esi, ecx ; jmp rsi
0x00000000001700dc : add esi, edi ; fadd st(3) ; ret
0x00000000000a9b89 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000150805 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000cdd3c : add esi, esi ; push rsi ; ret
0x00000000000e42e2 : add esi, esi ; ret
0x000000000006fd2f : add esi, esi ; ret 0x7420
0x00000000000e59e6 : add esi, esi ; ret 0xf04
0x00000000000fdc5f : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000105ab2 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000088664 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013bae3 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000070c63 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000000470f9 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035670 : add esp, 0x10 ; pop rbx ; ret
0x000000000003ab9c : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b8c51 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e6ff : add esp, 0x100 ; ret
0x000000000008b2dd : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006c183 : add esp, 0x1000 ; pop rbx ; ret
0x000000000006c191 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003583d : add esp, 0x108 ; ret
0x00000000000f847e : add esp, 0x120 ; pop rbx ; ret
0x0000000000035bf4 : add esp, 0x140 ; pop rbx ; ret
0x0000000000035209 : add esp, 0x148 ; ret
0x00000000000fd59d : add esp, 0x18 ; mov eax, edx ; ret
0x000000000006c726 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013a236 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ba5c : add esp, 0x18 ; movzx eax, al ; ret
0x00000000000b9023 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012cb0d : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000034999 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000034c8e : add esp, 0x18 ; ret
0x000000000012cd6f : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7ab7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000705c4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034fc9 : add esp, 0x20 ; pop rbx ; ret
0x00000000001331b9 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7a62 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020d5e : add esp, 0x28 ; jmp rax
0x0000000000049b19 : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000208ca : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c0a9 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003a572 : add esp, 0x28 ; ret
0x000000000006c0b1 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cc9d1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b8bb : add esp, 0x30 ; pop rbx ; ret
0x00000000001222a1 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000136778 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c7fd7 : add esp, 0x38 ; ret
0x0000000000035c6c : add esp, 0x40 ; pop rbx ; ret
0x0000000000109f08 : add esp, 0x40 ; ret
0x0000000000132f45 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000104df8 : add esp, 0x408 ; ret
0x00000000000496cc : add esp, 0x440 ; pop rbx ; ret
0x00000000000f8b12 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000012f677 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001258d4 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000fde4a : add esp, 0x48 ; ret
0x00000000000ab9cc : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014003b : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000fcbbf : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7379 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7910 : add esp, 0x60 ; pop rbx ; ret
0x00000000000e8d12 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000137e0c : add esp, 0x68 ; ret
0x0000000000136503 : add esp, 0x70 ; pop rbx ; ret
0x00000000000541ae : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000076dc2 : add esp, 0x80 ; mov eax, edx ; ret
0x0000000000071909 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007ece6 : add esp, 0x80 ; mov rax, r8 ; ret
0x00000000000443c3 : add esp, 0x80 ; pop rbx ; ret
0x000000000006c8d9 : add esp, 0x80 ; ret
0x0000000000039c0f : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000003573b : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011f152 : add esp, 0x88 ; ret
0x00000000000359f9 : add esp, 0x90 ; pop rbx ; ret
0x000000000007a4cd : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000020bbf : add esp, 0x98 ; ret
0x0000000000136217 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036b9d : add esp, 0xa8 ; ret
0x00000000000bb335 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006cd7e : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000c6b9e : add esp, 0xd0 ; pop rbx ; ret
0x00000000000354dd : add esp, 0xd0 ; ret
0x0000000000104bfe : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000044d34 : add esp, 0xd8 ; ret
0x00000000001129cc : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x00000000001326b3 : add esp, 8 ; add eax, 2 ; ret
0x000000000007a1dd : add esp, 8 ; cdqe ; ret
0x000000000008d82d : add esp, 8 ; jmp rax
0x000000000012473d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000d02ae : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000d019e : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004f36f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007180d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000219b8 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000044c84 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006cec4 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000039f0b : add esp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x00000000000d0101 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003245e : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007e8ee : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bea34 : add esp, 8 ; mov rax, rdx ; ret
0x000000000008329e : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000139fbc : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000079079 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f557 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000443f6 : add esp, 8 ; movzx eax, al ; ret
0x00000000001276ca : add esp, 8 ; movzx eax, ax ; ret
0x000000000012e8a9 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00000000000733d0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000003ac43 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000221e1 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036d31 : add esp, 8 ; ret
0x000000000013fe81 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000013bb54 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000078e31 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000eab7c : add esp, 8 ; xor eax, eax ; ret
0x00000000001ae9b1 : add esp, dword ptr [rax + 0x8070c01] ; ret
0x00000000001b32b9 : add esp, edi ; jmp qword ptr [rsi]
0x000000000011d737 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x0000000000096385 : add qword ptr [r8], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001b1875 : add qword ptr [r8], r8 ; fdiv dword ptr [rdi - 0xb] ; jmp qword ptr [rcx]
0x00000000000cd4a6 : add qword ptr [r8], rax ; add bh, dh ; ret
0x00000000001b1225 : add qword ptr [r8], rax ; or byte ptr [rax - 0xb], ch ; jmp qword ptr [rcx]
0x00000000000f97a6 : add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000000243cb : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x0000000000084d9e : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000e65ca : add qword ptr [rax], r8 ; add byte ptr [rcx + 0x39], al ; ret
0x00000000001b176d : add qword ptr [rax], r8 ; add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000085eb0 : add qword ptr [rax], r8 ; add dh, dh ; ret
0x00000000001b1755 : add qword ptr [rax], r8 ; call 0x221b0cd3
0x00000000001b1545 : add qword ptr [rax], r8 ; clc ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x00000000001b16ad : add qword ptr [rax], r8 ; jo 0x1b16ae ; jmp qword ptr [rcx]
0x00000000001b16dd : add qword ptr [rax], r8 ; jo 0x1b1758 ; cmc ; jmp qword ptr [rcx]
0x00000000001b16f5 : add qword ptr [rax], r8 ; mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b16c5 : add qword ptr [rax], r8 ; pop rax ; jo 0x1b16c6 ; jmp qword ptr [rcx]
0x00000000001b173d : add qword ptr [rax], r8 ; sal byte ptr [rax - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b1785 : add qword ptr [rax], r8 ; sbb byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b179d : add qword ptr [rax], r8 ; xor byte ptr [rcx - 0xb], dh ; jmp rbx
0x00000000001b10bd : add qword ptr [rax], rax ; adc byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b1165 : add qword ptr [rax], rax ; call 0x221b06d9
0x00000000001b10ed : add qword ptr [rax], rax ; cmc ; jmp qword ptr [rcx]
0x00000000001b1315 : add qword ptr [rax], rax ; js 0x1b1389 ; cmc ; jmp qword ptr [rcx]
0x00000000001b12e5 : add qword ptr [rax], rax ; sbb byte ptr [rcx - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b10d5 : add qword ptr [rax], rax ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x000000000005d14b : add qword ptr [rbp - 0x1d0], 1 ; jmp 0x5d120
0x000000000016831d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009ee5c : add r10, rax ; jmp r10
0x000000000015b1b2 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000006dc20 : add r13b, cl ; ret
0x000000000009fb4c : add r14b, byte ptr [r8 + r13*4 + 0x48] ; mov eax, ebx ; pop rbx ; ret
0x000000000019a958 : add r14b, dil ; jmp rsp
0x000000000015b142 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b0d2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000139e0d : add r15d, 1 ; call r14
0x0000000000149ac0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145f54 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000007f2a2 : add r8b, byte ptr [r8] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000253a1 : add r8b, byte ptr [r8] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000009f004 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ef74 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019c45d : add r8b, byte ptr [rax] ; adc al, 0xb4 ; cli ; jmp rsp
0x000000000019c2dd : add r8b, byte ptr [rax] ; add al, 0x8d ; cli ; call rsp
0x0000000000143438 : add r9, qword ptr [rbp - 0x88] ; call rax
0x000000000015080a : add r9, r11 ; jmp r9
0x00000000000275e3 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000123d2f : add r9b, byte ptr [r8 + 0x39] ; ret 0x1a72
0x0000000000027600 : add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000014cc72 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000002d3b8 : add rax, 0x10 ; mov rax, qword ptr [rsi + rax*8] ; ret
0x00000000001683a3 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000aae20 : add rax, 1 ; ret
0x00000000000aae17 : add rax, 2 ; ret
0x00000000000aae30 : add rax, 3 ; ret
0x000000000006af30 : add rax, 8 ; jmp 0x6aefe
0x000000000006b250 : add rax, 8 ; jmp 0x6b21d
0x00000000000ba3f7 : add rax, 8 ; mov rcx, qword ptr [rdx + rax*8] ; jmp 0xba3bb
0x00000000000213e8 : add rax, qword ptr [0] ; ret
0x00000000000561ad : add rax, qword ptr [rbp - 0x10a8] ; jmp rax
0x000000000004c908 : add rax, qword ptr [rbp - 0x4f0] ; jmp rax
0x0000000000033c1a : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x0000000000143769 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x000000000014306d : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000213e7 : add rax, qword ptr fs:[0] ; ret
0x00000000000857e9 : add rax, r13 ; jmp rax
0x000000000009f7b7 : add rax, r8 ; ret
0x000000000009efc4 : add rax, r9 ; jmp rax
0x000000000003c7f4 : add rax, rax ; sub rdx, rax ; jmp 0x3c824
0x000000000003f6f9 : add rax, rax ; sub rdx, rax ; jmp 0x3f72c
0x00000000000421c9 : add rax, rax ; sub rdx, rax ; jmp 0x421fc
0x00000000000addfc : add rax, rax ; sub rdx, rax ; jmp 0xade28
0x00000000000b0636 : add rax, rax ; sub rdx, rax ; jmp 0xb0660
0x00000000000b2d06 : add rax, rax ; sub rdx, rax ; jmp 0xb2d30
0x000000000005b290 : add rax, rcx ; jmp rax
0x000000000008e8b9 : add rax, rcx ; ret
0x000000000009f7b4 : add rax, rdi ; add rax, r8 ; ret
0x000000000008e8b6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000d2a13 : add rax, rdi ; jmp rax
0x000000000008d42a : add rax, rdi ; ret
0x0000000000149e9a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014a0ef : add rax, rdi ; sub rax, rdx ; ret
0x000000000005ace9 : add rax, rdx ; jmp rax
0x000000000003464c : add rax, rdx ; shr rax, 0x3f ; ret
0x000000000008b87d : add rax, rdx ; sub rax, rdi ; ret
0x0000000000046cc3 : add rax, rsi ; jmp rax
0x00000000000ce46d : add rbx, 1 ; mov rdx, rax ; jmp 0xce416
0x0000000000139e0a : add rbx, r12 ; add r15d, 1 ; call r14
0x00000000000d0282 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x000000000016dca1 : add rcx, r11 ; jmp rcx
0x000000000002c5b7 : add rcx, r8 ; jmp rcx
0x000000000006d73b : add rcx, rax ; jmp rcx
0x000000000006d8b2 : add rcx, rdx ; jmp rcx
0x00000000000a9b43 : add rcx, rsi ; jmp rcx
0x000000000013240c : add rdi, 0x10 ; jmp rcx
0x000000000012bf7e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e189 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000134ef3 : add rdi, 0x58 ; jmp rcx
0x0000000000134653 : add rdi, 0x68 ; jmp rcx
0x0000000000131876 : add rdi, 0xc8 ; jmp rcx
0x000000000009eea3 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000cff3a : add rdi, 1 ; test dl, dl ; jne 0xcff2a ; ret
0x000000000009eeb4 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009eec7 : add rdi, 3 ; mov rax, rdi ; ret
0x000000000002d39c : add rdi, 8 ; mov rax, qword ptr [rdx + rdi*8] ; ret
0x00000000001723be : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e3c07 : add rdi, r11 ; jmp rdi
0x0000000000033333 : add rdi, r8 ; jmp rdi
0x00000000001340c8 : add rdi, rax ; jmp rdi
0x0000000000020adc : add rdi, rbp ; call rax
0x0000000000150807 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000124824 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000004a3b0 : add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000055758 : add rdx, r15 ; call qword ptr [r11 + rax*8]
0x00000000000d58d5 : add rdx, r8 ; jmp 0xd58eb
0x00000000000480e1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009f6b7 : add rdx, rax ; jl 0x9f728 ; add rax, rdi ; ret
0x000000000009f6b6 : add rdx, rax ; jl 0x9f729 ; add rax, rdi ; ret
0x0000000000020f8a : add rdx, rax ; jmp rdx
0x00000000000330ce : add rdx, rcx ; jmp rdx
0x00000000000a9a7b : add rsi, rax ; jmp rsi
0x000000000013b4e2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006333f : add rsi, rcx ; jmp rsi
0x0000000000088663 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013bae2 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000070c62 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000470f8 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003566f : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b8c50 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e6fe : add rsp, 0x100 ; ret
0x000000000006c182 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003583c : add rsp, 0x108 ; ret
0x00000000000f847d : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035bf3 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000035208 : add rsp, 0x148 ; ret
0x00000000000fd59c : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006c725 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013a235 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013ba5b : add rsp, 0x18 ; movzx eax, al ; ret
0x0000000000034998 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000034c8d : add rsp, 0x18 ; ret
0x000000000012cd6e : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000705c3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034fc8 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7a61 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020d5d : add rsp, 0x28 ; jmp rax
0x0000000000049b18 : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006c0a8 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003a571 : add rsp, 0x28 ; ret
0x000000000006c0b0 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cc9d0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b8ba : add rsp, 0x30 ; pop rbx ; ret
0x0000000000136777 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c7fd6 : add rsp, 0x38 ; ret
0x0000000000035c6b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000109f07 : add rsp, 0x40 ; ret
0x0000000000104df7 : add rsp, 0x408 ; ret
0x00000000000496cb : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f8b11 : add rsp, 0x48 ; movzx eax, al ; ret
0x00000000001258d3 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000fde49 : add rsp, 0x48 ; ret
0x00000000000ab9cb : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fcbbe : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7378 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f790f : add rsp, 0x60 ; pop rbx ; ret
0x0000000000137e0b : add rsp, 0x68 ; ret
0x0000000000136502 : add rsp, 0x70 ; pop rbx ; ret
0x0000000000076dc1 : add rsp, 0x80 ; mov eax, edx ; ret
0x00000000000443c2 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006c8d8 : add rsp, 0x80 ; ret
0x000000000003573a : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000011f151 : add rsp, 0x88 ; ret
0x00000000000359f8 : add rsp, 0x90 ; pop rbx ; ret
0x000000000007a4cc : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000020bbe : add rsp, 0x98 ; ret
0x0000000000136216 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036b9c : add rsp, 0xa8 ; ret
0x00000000000c6b9d : add rsp, 0xd0 ; pop rbx ; ret
0x00000000000354dc : add rsp, 0xd0 ; ret
0x0000000000104bfd : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000044d33 : add rsp, 0xd8 ; ret
0x00000000001129cb : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x00000000001326b2 : add rsp, 8 ; add eax, 2 ; ret
0x000000000007a1dc : add rsp, 8 ; cdqe ; ret
0x000000000008d82c : add rsp, 8 ; jmp rax
0x000000000004f36e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007180c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000219b7 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000044c83 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006cec3 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000039f0a : add rsp, 8 ; mov rax, r8 ; pop rbx ; pop rbp ; ret
0x00000000000d0100 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003245d : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007e8ed : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bea33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000008329d : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x0000000000139fbb : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000079078 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f556 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000443f5 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001276c9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e8a8 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x00000000000733cf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000221e0 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036d30 : add rsp, 8 ; ret
0x000000000013fe80 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013bb53 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000078e30 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000eab7b : add rsp, 8 ; xor eax, eax ; ret
0x000000000009441e : add sil, sil ; ret 0x7404
0x0000000000109483 : add word ptr [rax], 1 ; ret
0x00000000001b2f05 : add word ptr [rax], ax ; call 0x271b252a
0x00000000001b2f65 : add word ptr [rax], ax ; sbb sil, sil ; jmp qword ptr [rsi]
0x00000000001091ca : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000034bb1 : addps xmm0, xmm1 ; ret
0x0000000000034bb0 : addss xmm0, xmm1 ; ret
0x00000000000943cc : and ah, al ; or eax, dword ptr [rax] ; ret
0x0000000000196348 : and ah, dh ; sti ; jmp qword ptr [rax]
0x000000000009a575 : and al, 0 ; add bh, dh ; ret
0x00000000000a2411 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000096ca1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000ab566 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000142e70 : and al, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000001b8b40 : and al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000000f793d : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f3196 : and al, 0x10 ; call 0x1f454
0x00000000000f3195 : and al, 0x10 ; call 0x1f455
0x000000000013659b : and al, 0x10 ; call qword ptr [r10]
0x00000000000baed7 : and al, 0x10 ; call r12
0x00000000000c7c03 : and al, 0x10 ; call rax
0x0000000000034d67 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000102ef9 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000012c04a : and al, 0x10 ; mov rdi, rbp ; call r14
0x00000000000e3557 : and al, 0x10 ; mov rdx, rax ; jmp 0xe34f6
0x000000000008b5de : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x0000000000027189 : and al, 0x14 ; jmp 0x26fa0
0x0000000000027188 : and al, 0x14 ; jmp 0x26fa1
0x0000000000026c8b : and al, 0x18 ; add byte ptr [rdx + rcx - 0xa], dh ; ret
0x000000000003c7f2 : and al, 0x18 ; add rax, rax ; sub rdx, rax ; jmp 0x3c826
0x000000000003f6f7 : and al, 0x18 ; add rax, rax ; sub rdx, rax ; jmp 0x3f72e
0x0000000000084583 : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000012cada : and al, 0x18 ; call qword ptr [rax]
0x0000000000020a3c : and al, 0x18 ; call rax
0x0000000000131da4 : and al, 0x18 ; call rcx
0x000000000013d958 : and al, 0x18 ; jmp 0x13d922
0x000000000013d957 : and al, 0x18 ; jmp 0x13d923
0x000000000012c829 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00000000001374d0 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000113a51 : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000113b5e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000009ee8d : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000e3553 : and al, 0x18 ; mov dword ptr [rsp + 0x10], esi ; mov rdx, rax ; jmp 0xe34fa
0x00000000000e3552 : and al, 0x18 ; mov dword ptr [rsp + 0x10], esi ; mov rdx, rax ; jmp 0xe34fb
0x00000000000331aa : and al, 0x18 ; mov dword ptr [rsp + 0x38], r9d ; call 0x1f469
0x000000000010ea82 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000c7bfe : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000002548a : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000ac547 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000038200 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00000000000ac29f : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000f05c9 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0607
0x00000000000f05c8 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0608
0x0000000000199530 : and al, 0x1a ; call rsp
0x00000000001363ac : and al, 0x1c ; call qword ptr [r10]
0x000000000012c9eb : and al, 0x1c ; call qword ptr [rax]
0x00000000001430f5 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x0000000000085f36 : and al, 0x20 ; add al, ch ; ret 0xfc37
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e65f2 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0xc083
0x00000000000421c7 : and al, 0x20 ; add rax, rax ; sub rdx, rax ; jmp 0x421fe
0x000000000012bed3 : and al, 0x20 ; call 0x1f4c8
0x00000000001092fb : and al, 0x20 ; call 0x35524
0x00000000001092fa : and al, 0x20 ; call 0x35525
0x0000000000024795 : and al, 0x20 ; call r14
0x000000000002457b : and al, 0x20 ; call r15
0x00000000000266a6 : and al, 0x20 ; call rax
0x00000000000abf3b : and al, 0x20 ; call rbx
0x0000000000131baf : and al, 0x20 ; call rcx
0x00000000000abbab : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000024aa7 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000183524 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000000e69db : and al, 0x28 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b01
0x0000000000140613 : and al, 0x28 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x000000000003ccc7 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000025cd2 : and al, 0x28 ; call r15
0x0000000000025a83 : and al, 0x28 ; call rbx
0x00000000000aba80 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000024790 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000024576 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000085233 : and al, 0x28 ; mov rdi, rbp ; call rcx
0x0000000000137714 : and al, 0x2a ; call qword ptr [rax]
0x000000000012c82e : and al, 0x2c ; call qword ptr [rax]
0x000000000012cf7e : and al, 0x30 ; call qword ptr [rax]
0x0000000000024f37 : and al, 0x30 ; call r12
0x0000000000024aac : and al, 0x30 ; call rax
0x0000000000024feb : and al, 0x30 ; call rbx
0x000000000008293d : and al, 0x30 ; call rdx
0x0000000000038e6a : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000013b9e9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000b9cb4 : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x0000000000025ccd : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000025a7e : and al, 0x30 ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x00000000000ac42c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000082ec1 : and al, 0x30 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000331af : and al, 0x38 ; call 0x1f464
0x00000000000331ae : and al, 0x38 ; call 0x1f465
0x000000000011270b : and al, 0x38 ; jmp 0x1126d5
0x0000000000142fd9 : and al, 0x38 ; jne 0x142fc0 ; add rsp, 0x48 ; ret
0x0000000000142fd8 : and al, 0x38 ; jne 0x142fc1 ; add rsp, 0x48 ; ret
0x00000000000fde45 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000024f32 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x0000000000024fe6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000001374d5 : and al, 0x3a ; call qword ptr [rax]
0x00000000000262d3 : and al, 0x40 ; call rbx
0x00000000000266a1 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000002741a : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000127949 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ba8ca : and al, 0x40 ; mov rsi, r13 ; call r12
0x000000000012a62e : and al, 0x41 ; call rsp
0x00000000000b5d25 : and al, 0x44 ; jmp 0xb5cef
0x00000000000fd59b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x0000000000132daa : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f6b9e : and al, 0x48 ; add esp, 0x18 ; ret
0x00000000000705c2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109ea5 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000109f06 : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000084943 : and al, 0x48 ; call rax
0x0000000000142e6d : and al, 0x48 ; mov eax, dword ptr [rax + 0xe0] ; jmp rax
0x00000000000ab534 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000262ce : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000096a9c : and al, 0x48 ; test esi, esi ; jne 0x96ab3 ; jmp 0x96a6d
0x000000000019b900 : and al, 0x4a ; stc ; call rsp
0x00000000000e65c9 : and al, 0x4c ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000de430 : and al, 0x50 ; call 0xda724
0x00000000000baabe : and al, 0x58 ; mov rdi, qword ptr [rsp + 0x68] ; call r15
0x000000000019c4f4 : and al, 0x5b ; add dword ptr [rax], eax ; mov ah, 0xc2 ; cli ; jmp rsp
0x0000000000113e0b : and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000043e1a : and al, 0x60 ; sbb eax, dword ptr [rax] ; add cl, ch ; ret 0xfff8
0x0000000000198b60 : and al, 0x61 ; out dx, al ; jmp rsp
0x0000000000198f48 : and al, 0x63 ; out dx, eax ; jmp rsp
0x0000000000043e0b : and al, 0x64 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000001b30cc : and al, 0x68 ; add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000000fa587 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf202474] ; xchg eax, esp ; ret 0x8445
0x00000000000baac3 : and al, 0x68 ; call r15
0x0000000000084c13 : and al, 0x68 ; call rax
0x0000000000085e8b : and al, 0x68 ; mov rsi, r14 ; mov rdi, rbp ; call rax
0x0000000000143394 : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000ac15a : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000001996b0 : and al, 0x75 ; jmp rsp
0x00000000000f3297 : and al, 0x78 ; mov dword ptr [rsp + 8], eax ; call 0x1f4c8
0x00000000000b3ff8 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfef5 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000045894 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xdce9
0x00000000000c187c : and al, 0x81 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000e2750 : and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000e765d : and al, 0x89 ; fidivr dword ptr [rcx] ; ret 0x3773
0x00000000000f248f : and al, 0x89 ; ret 0xe883
0x00000000000dfd8c : and al, 0x8b ; adc bh, dh ; ret 0x30f
0x00000000000e0b45 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf748
0x0000000000024714 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000001b5dcc : and al, 0x95 ; add dword ptr [rax], eax ; sbb dl, 0xf6 ; call qword ptr [rdi]
0x0000000000032576 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000bacfd : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0x00000000000d90f9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000ba854 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000babbf : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0x00000000000d9264 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000001a68cc : and al, 0xa0 ; add byte ptr [rax], al ; xor byte ptr [rcx], ah ; out dx, al ; jmp qword ptr [rdi]
0x000000000002a11e : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r14
0x000000000012faf8 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x0000000000045d72 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfee9
0x00000000000d93bc : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000f7895 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000c5fc8 : and al, 0xac ; call 0xab778
0x000000000013c36b : and al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011027c : and al, 0xb ; jmp 0x11028f
0x00000000000bab59 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000259e6 : and al, 0xb0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000fdf42 : and al, 0xb0 ; ret
0x00000000000e111d : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003566d : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003a93d : and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000143120 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000021c9 : and al, 0xc7 ; jno 0x221a ; ret 0x1dd4
0x000000000004524a : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000072c48 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000034dcc : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034e5b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000034e3b : and al, 0xe8 ; ret
0x000000000011e748 : and al, 0xe8 ; ret 0xfffa
0x000000000006b4ae : and al, 0xe9 ; ret
0x0000000000049248 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000002a9d0 : and al, 0xf ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000034fdb : and al, 0xf0 ; and eax, 0x8000 ; ret
0x0000000000034e57 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000034e37 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000034ef7 : and al, 0xf0 ; mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000ba5e6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000ba5ec : and al, 0xf0 ; ret
0x0000000000094526 : and al, 0xf8 ; jne 0x94402 ; ret
0x0000000000049201 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000049207 : and al, 0xf8 ; ret
0x00000000000491bb : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000491c1 : and al, 0xfc ; ret
0x0000000000035007 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000003500b : and al, 0xfe ; ret
0x00000000000593fb : and al, 3 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000019be10 : and al, 4 ; cli ; jmp rsp
0x00000000000b8b9f : and al, 5 ; add byte ptr [rcx], bh ; ret
0x00000000000371a4 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a5848 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b8c66 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ad9c : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000e319c : and al, 8 ; call 0x1f454
0x00000000000f329b : and al, 8 ; call 0x1f4c4
0x00000000000f329a : and al, 8 ; call 0x1f4c5
0x000000000012e6d7 : and al, 8 ; call qword ptr [rax]
0x00000000000893b2 : and al, 8 ; call qword ptr [rdx]
0x0000000000082a6f : and al, 8 ; call rax
0x0000000000102e18 : and al, 8 ; call rbx
0x0000000000034e8a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000013ab87 : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000001fcf3 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f238 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000731f9 : and al, 8 ; mov rdi, r12 ; call 0x1f467
0x000000000013accc : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000001204bb : and al, 8 ; mov rdi, r13 ; call r12
0x000000000013a25f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000037bd6 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000039026 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x000000000013fb40 : and al, 8 ; mov rsi, rdx ; call 0x13bdb7
0x0000000000034d6b : and al, 8 ; ret
0x000000000013b9ee : and al, 8 ; xor eax, eax ; call rdx
0x00000000001961d0 : and al, al ; sti ; call rax
0x000000000009a569 : and al, byte ptr [rax] ; add bh, dh ; ret
0x0000000000034c89 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000006ad59 : and al, byte ptr [rbp - 0x7c] ; in al, 0xf ; test esi, ebp ; ret
0x000000000018883c : and al, byte ptr [rbp - 0xc] ; call qword ptr [rsi]
0x00000000000d7f6d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x0000000000199545 : and al, byte ptr [rcx] ; add byte ptr [rdi + rbx - 0xe], ah ; call rsp
0x0000000000089a0a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000199544 : and al, byte ptr fs:[rcx] ; add byte ptr [rdi + rbx - 0xe], ah ; call rsp
0x00000000000d88c8 : and al, ch ; ret 0xffbc
0x000000000002e2a2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002e2c2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002e202 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002e282 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002e1a2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002e242 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002e1e2 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002e222 : and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000002f68 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000003242a : and bh, byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a5e27 : and bl, al ; nop dword ptr [rax] ; ret
0x0000000000195d00 : and bl, bh ; cli ; call qword ptr [rax]
0x000000000010e2b8 : and bl, ch ; ret 0x1f0f
0x00000000001962f4 : and bl, ch ; sti ; inc dword ptr [rax] ; in eax, dx ; sti ; jmp rax
0x00000000001962a4 : and bl, dh ; sti ; jmp qword ptr [rax]
0x0000000000077ffa : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a90a6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be30f : and byte ptr [r8], r8b ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000007be74 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000003f8a9 : and byte ptr [rax + 0x29], cl ; ret 0x2949
0x000000000010fcad : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000087bbb : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000009f6e6 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000421c8 : and byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x421fd
0x00000000001a4c00 : and byte ptr [rax - 0x13], ch ; jmp rsi
0x00000000001085ab : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000000d8aa5 : and byte ptr [rax - 0x73], cl ; jl 0xd8aba ; adc byte ptr [rax + 1], cl ; ret 0x8d4c
0x0000000000024aa8 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000081c23 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000077ffb : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000003a47a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006f39b : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000026fb4 : and byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000003b214 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000023433 : and byte ptr [rax - 0x77], cl ; ret 0x1a74
0x00000000000beede : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000075bd9 : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000140872 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x0000000000045aa9 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000081c53 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002344d : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000002cbf4 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2cc08 ; call rax
0x00000000000232d6 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000001886e4 : and byte ptr [rax - 0xc], al ; jmp qword ptr [rax]
0x0000000000079a12 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000196848 : and byte ptr [rax - 4], al ; jmp qword ptr [rax + 0x20fffc3f]
0x0000000000196ef4 : and byte ptr [rax - 4], ch ; jmp qword ptr [rax + 0x10fffc67]
0x00000000000be310 : and byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000000000007062c : and byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000cc3f3 : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000005718b : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x733a9
0x00000000000a9b6c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cc3d1 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001055df : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a6f5c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a90a7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x0000000000052a71 : and byte ptr [rbp + 0x63], cl ; ret 0x8948
0x00000000001a9b1f : and byte ptr [rbp + 0xa], cl ; ret
0x000000000019743c : and byte ptr [rbp - 0x735f0004], cl ; cld ; jmp qword ptr [rax]
0x0000000000195e34 : and byte ptr [rbp - 0x73f10003], cl ; std ; call qword ptr [rax]
0x0000000000052a34 : and byte ptr [rbp - 0x77], al ; ret 0x8141
0x00000000000d47bc : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000032cf3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000705c6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019deb5 : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a2b8d : and byte ptr [rbx + 0xa480204], al ; ret
0x00000000001acf7d : and byte ptr [rbx + 0xa7e0204], al ; ret
0x00000000001b5e9d : and byte ptr [rbx + 0xa940204], al ; ret
0x00000000001abf11 : and byte ptr [rbx - 0x73fc79fc], al ; add al, byte ptr [rdx] ; push rbx ; ret
0x000000000019744c : and byte ptr [rbx - 0x755f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000001b0280 : and byte ptr [rbx], ah ; cmc ; call rsi
0x0000000000052975 : and byte ptr [rcx + 0x29], cl ; ret 0x8d49
0x000000000007eadc : and byte ptr [rcx + 0x34], ah ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000003fa91 : and byte ptr [rcx + 0x39], cl ; ret
0x000000000003cb8b : and byte ptr [rcx + 0x39], cl ; ret 0x840f
0x000000000007be75 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x00000000001a136e : and byte ptr [rcx + 0xa], al ; ret
0x00000000001a9ca0 : and byte ptr [rcx + rsi*8], dl ; jmp qword ptr [rax]
0x0000000000049245 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000019745c : and byte ptr [rcx - 0x775f0004], cl ; cld ; call qword ptr [rax]
0x00000000000d0f27 : and byte ptr [rcx - 0x7d], al ; std ; sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8341
0x0000000000196840 : and byte ptr [rcx - 4], al ; jmp qword ptr [rax + 0x20fffc40]
0x00000000000f8480 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000196480 : and byte ptr [rcx], bl ; cld ; call qword ptr [rax]
0x00000000001331bb : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c62f8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000128b8c : and byte ptr [rcx], dl ; idiv bh ; xor eax, eax ; ret
0x0000000000196850 : and byte ptr [rdi], bh ; cld ; jmp qword ptr [rax + 0x20fffc3e]
0x000000000002e285 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000c6836 : and byte ptr [rdi], cl ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed31
0x00000000001271bd : and byte ptr [rdi], cl ; test byte ptr [rdi], bh ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a5b19 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000001701a0 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000000fa58d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000feaf1 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x000000000019649c : and byte ptr [rdi], dl ; cld ; inc dword ptr [rax] ; sbb esp, edi ; jmp rax
0x0000000000197454 : and byte ptr [rdx - 0x765f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000001b0000 : and byte ptr [rdx], bl ; cmc ; jmp qword ptr [rdx]
0x000000000016dd3a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001151d1 : and byte ptr [rsi + 0xf], ah ; hlt ; shl dword ptr [rsi + 0xf], -0x2c ; ret 0xf66
0x00000000001ba8bd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a1475 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a4730 : and byte ptr [rsi - 0x13], cl ; jmp qword ptr [rsi]
0x0000000000002bf2 : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000197238 : and byte ptr [rsi - 0x726f0004], cl ; cld ; call qword ptr [rax]
0x0000000000188afc : and byte ptr [rsi - 0xc], al ; jmp qword ptr [rax]
0x0000000000188b1c : and byte ptr [rsi - 0xc], al ; jmp rax
0x0000000000188af4 : and byte ptr [rsi - 0xc], al ; push qword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000188b00 : and byte ptr [rsi - 0xc], al ; push rax ; hlt ; jmp qword ptr [rax]
0x0000000000196858 : and byte ptr [rsi], bh ; cld ; jmp qword ptr [rax + 0x20fffc3d]
0x00000000001965ec : and byte ptr [rsi], cl ; cld ; dec dword ptr [rsi + 0x45] ; cld ; call rax
0x00000000000ff3e9 : and byte ptr [rsp + rbp*8 - 0x3a], dh ; inc dword ptr [rax] ; ret
0x0000000000197444 : and byte ptr [rsp + rdi*8 - 0x3745f01], cl ; jmp qword ptr [rax]
0x00000000000aae12 : and ch, 0xf ; je 0xaae39 ; add rax, 2 ; ret
0x000000000012c7a7 : and ch, al ; ret
0x0000000000181479 : and ch, bl ; jmp rdx
0x00000000001b6990 : and ch, cl ; sti ; call rsi
0x00000000001962a8 : and ch, dh ; sti ; jmp qword ptr [rax]
0x00000000000aadfd : and cl, 0xf ; je 0xaae25 ; ret
0x0000000000003912 : and cl, ah ; ret
0x0000000000196150 : and cl, al ; sti ; jmp rax
0x0000000000082e3d : and cl, bpl ; ret 0xfff4
0x00000000000b80f1 : and cl, byte ptr [rax + 0x63] ; ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000462c4 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000094f10 : and cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008ec8d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000082e3e : and cl, ch ; ret 0xfff4
0x0000000000102b9a : and cl, cl ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102baa ; call rbx
0x00000000001960e0 : and cl, cl ; sti ; call qword ptr [rax]
0x00000000001b68f1 : and dh, bh ; call qword ptr [rbx]
0x00000000001a6889 : and dh, ch ; jmp qword ptr [rdx]
0x00000000000fac16 : and dh, dh ; ret
0x000000000008f2cb : and dh, dh ; ret 0x7504
0x0000000000187811 : and dh, dl ; call qword ptr [rax + 0x10fff222]
0x0000000000187815 : and dh, dl ; call qword ptr [rax]
0x0000000000187879 : and dh, dl ; jmp rsp
0x0000000000187875 : and dh, dl ; lcall ptr [rdx] ; jmp rsp
0x00000000001961b4 : and dl, al ; sti ; push rax ; ret
0x00000000001970b0 : and dl, byte ptr [rcx - 0x686d0004] ; cld ; jmp qword ptr [rdx]
0x0000000000196344 : and dl, dh ; sti ; jmp qword ptr [rax]
0x000000000010f00e : and dword ptr [rax - 0x77], ecx ; ret 0xf66
0x000000000000a160 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x15
0x00000000001a3eb5 : and dword ptr [rax], eax ; add byte ptr [rax], ch ; cmp ebp, ebp ; jmp qword ptr [rbx]
0x000000000004f27e : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001bd23c : and dword ptr [rax], ecx ; add byte ptr [rax], al ; ret
0x0000000000185042 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000233fe : and dword ptr [rbx - 0x7cb778fc], ecx ; ret 0x8801
0x00000000000740ef : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000019952d : and dword ptr [rcx], eax ; add byte ptr [rdx + rbx], ah ; call rsp
0x0000000000035db6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000078fa0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001be8c4 : and dword ptr [rdi], eax ; add byte ptr [rax], al ; jnp 0x1be8d4 ; add byte ptr [rax], al ; ret 6
0x0000000000035f18 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001820f9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a594b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000185041 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001735b6 : and eax, 0 ; add bl, dh ; ret
0x00000000000213eb : and eax, 0 ; ret
0x00000000000fc473 : and eax, 0x100f ; ret
0x00000000000788a2 : and eax, 0x200 ; ret
0x0000000000106ee4 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000cbaf9 : and eax, 0x2d0 ; ret
0x000000000019959d : and eax, 0x2e340001 ; call rsp
0x0000000000020d58 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d827 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000020a5d : and eax, 0x30 ; call rax
0x000000000003040f : and eax, 0x30 ; call rdx
0x0000000000035182 : and eax, 0x30 ; jmp rax
0x000000000002f38a : and eax, 0x30 ; mov rdi, r12 ; call rax
0x0000000000084493 : and eax, 0x34 ; add byte ptr [rax], al ; ret
0x0000000000044d77 : and eax, 0x394d3674 ; ret 0x830f
0x00000000000a9acd : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000a9aed : and eax, 0x3fc00 ; ret
0x000000000003ad75 : and eax, 0x3ff ; xor eax, ecx ; ret
0x00000000000a9aac : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000019be0d : and eax, 0x4240002 ; cli ; jmp rsp
0x0000000000173327 : and eax, 0x48c57500 ; add esp, 8 ; ret
0x00000000000897c2 : and eax, 0x5c415d5b ; ret
0x000000000002e392 : and eax, 0x7f ; ret
0x00000000000a9b20 : and eax, 0x7ff80000 ; ret
0x00000000000349a4 : and eax, 0x80 ; ret
0x0000000000034fdd : and eax, 0x8000 ; ret
0x0000000000034a67 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000078872 : and eax, 0x804 ; ret
0x0000000000065430 : and eax, 0x83480000 ; ret 0x4804
0x00000000000feb0d : and eax, 0x83489066 ; ret 0x3c01
0x00000000000b7338 : and eax, 0x83489848 ; ret 0x4802
0x000000000009aa8d : and eax, 0x8348d231 ; ret 0x4801
0x0000000000101b7f : and eax, 0x9f0f30ff ; ret 0xe883
0x0000000000114ca7 : and eax, 0xc ; cmp eax, 4 ; je 0x114cb8 ; ret
0x0000000000114e80 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001aee25 : and eax, 0xd6580001 ; hlt ; call qword ptr [rbx]
0x000000000009f8e5 : and eax, 0xe8000000 ; ret 0xf8e7
0x000000000012674a : and eax, 0xf48002a ; ret 0xff81
0x00000000001883e4 : and eax, 0xfafff3ca ; leave ; call rbx
0x00000000001735c5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000107051 : and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000011918d : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000119128 : and eax, 0xffffff ; ret
0x0000000000123883 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000109f82 : and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000002e342 : and eax, 1 ; ret
0x00000000000d5930 : and eax, 2 ; add eax, 8 ; ret
0x000000000002e1c2 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d5984 : and eax, 2 ; ret
0x000000000004747c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002e262 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002e182 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034ca4 : and eax, 8 ; ret
0x000000000013d656 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ed78d : and eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call 0x89a59
0x000000000019bdd5 : and eax, dword ptr [rdx] ; add ah, dl ; cld ; stc ; call rsp
0x0000000000168449 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000363a8 : and eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034cf2 : and eax, ecx ; ret
0x00000000000346c5 : and eax, edx ; movq xmm0, rax ; ret
0x00000000000345f2 : and eax, edx ; ret
0x00000000000346e7 : and eax, esi ; movq xmm0, rax ; ret
0x000000000002e55d : and eax, esi ; ret
0x0000000000181475 : and ebp, ebx ; jmp rdx
0x0000000000181471 : and ebp, ebx ; push qword ptr [rcx] ; and ebp, ebx ; jmp rdx
0x00000000000740f0 : and ebp, edi ; pop rbx ; ret
0x0000000000114c42 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x114c55 ; ret
0x00000000001813a9 : and ebx, ebp ; call rcx
0x000000000003526e : and ebx, esi ; ret
0x000000000016f2b5 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016e9e8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x0000000000076cd0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000012f995 : and ecx, dword ptr [rax + 9] ; ret
0x00000000000f0daf : and ecx, dword ptr [rax - 0x75] ; je 0xf0de0 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000c87a5 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000007d9ec : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000127cc6 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xd184
0x00000000000ffa28 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000000bec4f : and ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd008
0x000000000002e3a2 : and edi, 0xffffff80 ; sete al ; ret
0x0000000000076dd3 : and edx, 1 ; mov eax, edx ; ret
0x0000000000002bdd : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004921e : and esi, 0xe0837fff ; jg 0x49237 ; ret 0x5488
0x00000000001b0281 : and esi, ebp ; call rsi
0x00000000001a68d1 : and esi, ebp ; jmp qword ptr [rdi]
0x00000000001278ad : and esp, dword ptr [rax + rcx*2 - 0x75] ; xor cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xd184
0x0000000000035db5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000035f17 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000fac15 : and r14b, r14b ; ret
0x00000000001735b5 : and rax, 0 ; add bl, dh ; ret
0x00000000001735c4 : and rax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000363a7 : and rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000346c4 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000000346e6 : and rax, rsi ; movq xmm0, rax ; ret
0x00000000001a6888 : and sil, bpl ; jmp qword ptr [rdx]
0x0000000000034a2b : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034a28 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000009655a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008eaf0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008eb00 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb10 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008eae0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008ea2f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000096753 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008f7d5 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008b70d : bsf eax, edx ; ret
0x000000000008b87a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000096870 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008b75a : bsf rax, rdx ; ret
0x000000000009f7b1 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008d427 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f680 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f690 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f6a0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008d6ab : bsr eax, esi ; add rax, rdi ; ret
0x000000000008d5b9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4b5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008d426 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008d6aa : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008d5b8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4b4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000013501d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000119102 : bswap eax ; ret
0x0000000000002bdf : bswap ebx ; clc ; ret
0x0000000000111c55 : call 0x10df52
0x000000000011231b : call 0x10e522
0x0000000000119758 : call 0x1165a47
0x000000000019fa58 : call 0x1219e407
0x00000000001a9c38 : call 0x121a8d49
0x00000000000ed472 : call 0x129732
0x000000000011d970 : call 0x129c22
0x0000000000132c46 : call 0x12ef42
0x00000000001a5638 : call 0x131a43c7
0x000000000013fb45 : call 0x13bdb2
0x0000000000035d90 : call 0x140ca5a3
0x00000000001b9a98 : call 0x141b927d
0x000000000002088f : call 0x1436f7
0x0000000000120b66 : call 0x144397
0x00000000001a85c8 : call 0x181a7fea
0x0000000000133168 : call 0x1f442
0x00000000000e319e : call 0x1f452
0x00000000000331b1 : call 0x1f462
0x00000000000c94a3 : call 0x1f469
0x00000000001431af : call 0x1f4a2
0x000000000006326f : call 0x1f4c2
0x0000000000062bdb : call 0x1f4c6
0x000000000010b582 : call 0x1f4c9
0x0000000000026c46 : call 0x20aad6f
0x0000000000124d85 : call 0x21124d8b
0x00000000001b3d48 : call 0x211b338a
0x00000000001a9bb8 : call 0x221a8cc9
0x00000000001aa018 : call 0x221a9161
0x00000000001ab358 : call 0x221aa55c
0x00000000001ae888 : call 0x221add33
0x00000000001b1168 : call 0x221b06d6
0x00000000001b1758 : call 0x221b0cd0
0x00000000001bb4d8 : call 0x231bb063
0x0000000000034f20 : call 0x24480e3b
0x0000000000094734 : call 0x247dd28d
0x00000000001b2f08 : call 0x271b2527
0x00000000001b32b8 : call 0x271b2ec1
0x00000000001a4258 : call 0x281a2fa5
0x00000000000cdd3a : call 0x2e0b6
0x0000000000029e32 : call 0x2e0b8
0x0000000000028f23 : call 0x2e0b9
0x00000000001127d5 : call 0x2ea82
0x00000000000bbb75 : call 0x3043ec9
0x0000000000109225 : call 0x35522
0x00000000000da323 : call 0x42d02c6c
0x00000000000da336 : call 0x42d02c7f
0x00000000000dd22b : call 0x46d05b74
0x00000000000dd23e : call 0x46d05b87
0x000000000003bd8a : call 0x47fd2
0x000000000013c509 : call 0x4813c514
0x00000000000bae19 : call 0x48cdd740
0x00000000000aced4 : call 0x490acedc
0x0000000000077ea4 : call 0x49c27
0x0000000000056a5f : call 0x4cc7f3b3
0x00000000000af56b : call 0x4ccd8a82
0x00000000000b1c0b : call 0x4ccdb122
0x00000000000b486b : call 0x4ccddd82
0x00000000000465b5 : call 0x4dc686bf
0x000000000015a73a : call 0x4f94b738
0x000000000015a739 : call 0x4f94b739
0x000000000015d20a : call 0x4f94e208
0x000000000015d209 : call 0x4f94e209
0x000000000015fd2a : call 0x4f950d28
0x000000000015fd29 : call 0x4f950d29
0x0000000000088cf7 : call 0x54b18
0x00000000001975ba : call 0x6d42c7
0x000000000019765a : call 0x710367
0x000000000010dfb0 : call 0x72487
0x0000000000057154 : call 0x733a2
0x00000000001976a2 : call 0x73ebaf
0x00000000001976e2 : call 0x767bef
0x00000000000fe372 : call 0x779e8
0x00000000000ed794 : call 0x89a52
0x000000000006f3ea : call 0x8b6d2
0x000000000006f3e9 : call 0x8b6d3
0x00000000000e4190 : call 0x8f204
0x000000000012315b : call 0x8f362
0x00000000000f810f : call 0x943f2
0x0000000000020639 : call 0xa9a36
0x00000000000c5fca : call 0xab776
0x00000000000bdc22 : call 0xbb408
0x00000000000f666e : call 0xcbb17
0x00000000000f669b : call 0xcbb37
0x00000000000de432 : call 0xda722
0x00000000001074cd : call 0xf1074d6
0x00000000001074ed : call 0xf1074f6
0x0000000000109f81 : call 0xf128011
0x000000000010a021 : call 0xf1280b1
0x000000000010a0c1 : call 0xf128151
0x000000000010a161 : call 0xf1281f1
0x000000000010a201 : call 0xf128291
0x000000000010a291 : call 0xf128321
0x000000000010a331 : call 0xf1283c1
0x000000000010a3d1 : call 0xf128461
0x000000000010a471 : call 0xf128501
0x000000000010a511 : call 0xf1285a1
0x000000000010a651 : call 0xf1286e1
0x000000000010a838 : call 0xf1288c9
0x000000000010af30 : call 0xf128fc1
0x000000000010b188 : call 0xf129219
0x0000000000100183 : call 0xf17e211
0x0000000000100d0a : call 0xf17ed98
0x00000000000fb873 : call 0xf7b02
0x000000000010cb56 : call 0xf7b07
0x000000000013f64e : call 0xfb8b2
0x0000000000100e87 : call 0xfd142
0x0000000000136e0a : call 0xffffffff80d66522
0x0000000000136fd4 : call 0xffffffff80d666ec
0x0000000000137081 : call 0xffffffff80d66799
0x0000000000123947 : call 0xffffffff895afbd7
0x00000000000ba7be : call 0xffffffff89cdd0e5
0x0000000000182b63 : call 0xffffffffaedac9d9
0x00000000001102d8 : call 0xffffffffc04202eb
0x00000000000ba086 : call 0xffffffffc234e9ce
0x00000000000ba935 : call 0xffffffffc234ea5d
0x00000000000ba6a8 : call 0xffffffffc234ead0
0x0000000000046ff1 : call 0xffffffffc23db839
0x000000000005127c : call 0xffffffffc23e5a86
0x000000000005c345 : call 0xffffffffc2890c4f
0x000000000007fdc9 : call 0xffffffffc28d45d3
0x00000000000466eb : call 0xffffffffc28da813
0x0000000000083458 : call 0xffffffffc2917c71
0x00000000000bf485 : call 0xffffffffc2953c90
0x00000000000f130b : call 0xffffffffc2985b15
0x000000000003c6dc : call 0xffffffffc298d626
0x0000000000110803 : call 0xffffffffc2a6170d
0x00000000000d4c84 : call 0xffffffffc2e15bf3
0x00000000000c6e6e : call 0xffffffffc2f840a8
0x00000000000a5784 : call 0xffffffffc30a5794
0x00000000000a96e6 : call 0xffffffffc317243c
0x00000000000a96ff : call 0xffffffffc3172455
0x0000000000099811 : call 0xffffffffc332e11b
0x000000000019b60d : call 0xffffffffc34db617
0x00000000000f7d99 : call 0xffffffffc3548cea
0x00000000000ac01c : call 0xffffffffc3670182
0x000000000019b615 : call 0xffffffffc36db61f
0x000000000019b61d : call 0xffffffffc37db627
0x000000000019b625 : call 0xffffffffc38db62f
0x000000000012f9f4 : call 0xffffffffc396420a
0x00000000001303a5 : call 0xffffffffc39c4bb6
0x000000000016b205 : call 0xffffffffc39cc11e
0x000000000016c285 : call 0xffffffffc39cd19e
0x000000000003719d : call 0xffffffffc3b280ee
0x000000000019b62d : call 0xffffffffc3bdb637
0x000000000008f917 : call 0xffffffffc3d98268
0x0000000000089a17 : call 0xffffffffc4012368
0x000000000008b217 : call 0xffffffffc4013b68
0x00000000001ba8a8 : call 0xffffffffc41ba0af
0x00000000001aa818 : call 0xffffffffd81a99ed
0x0000000000082ab7 : call 0xffffffffe08b72e4
0x0000000000034d87 : call 0xffffffffe2851017
0x000000000004a8b6 : call qword ptr [r10 + rax*8 - 0x40]
0x00000000001363ae : call qword ptr [r10]
0x000000000004a3b3 : call qword ptr [r11 + rax*8]
0x000000000007e6af : call qword ptr [r15]
0x0000000000187813 : call qword ptr [rax + 0x10fff222]
0x0000000000196f73 : call qword ptr [rax + 0x10fffc44]
0x0000000000196fb7 : call qword ptr [rax + 0x10fffc46]
0x0000000000196f7b : call qword ptr [rax + 0x10fffc47]
0x0000000000196fbf : call qword ptr [rax + 0x10fffc49]
0x0000000000196f83 : call qword ptr [rax + 0x10fffc4a]
0x0000000000196fc7 : call qword ptr [rax + 0x10fffc4c]
0x0000000000196f8b : call qword ptr [rax + 0x10fffc4d]
0x0000000000196fcf : call qword ptr [rax + 0x10fffc4f]
0x0000000000196f93 : call qword ptr [rax + 0x10fffc50]
0x0000000000196fd7 : call qword ptr [rax + 0x10fffc52]
0x0000000000196f9b : call qword ptr [rax + 0x10fffc53]
0x0000000000196fdf : call qword ptr [rax + 0x10fffc55]
0x0000000000196fa3 : call qword ptr [rax + 0x10fffc56]
0x0000000000196fe7 : call qword ptr [rax + 0x10fffc58]
0x0000000000196f17 : call qword ptr [rax + 0x10fffc63]
0x0000000000196f0f : call qword ptr [rax + 0x10fffc64]
0x0000000000196f07 : call qword ptr [rax + 0x10fffc65]
0x0000000000196eff : call qword ptr [rax + 0x10fffc66]
0x000000000019725b : call qword ptr [rax + 0x10fffc89]
0x0000000000197253 : call qword ptr [rax + 0x10fffc8a]
0x000000000019724b : call qword ptr [rax + 0x10fffc8b]
0x0000000000197243 : call qword ptr [rax + 0x10fffc8c]
0x000000000019723b : call qword ptr [rax + 0x10fffc8d]
0x0000000000195de7 : call qword ptr [rax + 0x20fffb58]
0x00000000001961cb : call qword ptr [rax + 0x20fffbcd]
0x000000000019614b : call qword ptr [rax + 0x20fffbce]
0x0000000000196623 : call qword ptr [rax + 0x20fffc46]
0x00000000001967fb : call qword ptr [rax + 0x20fffc4a]
0x0000000000196d27 : call qword ptr [rax + 0x20fffc6b]
0x0000000000196b0f : call qword ptr [rax + 0x20fffc6e]
0x000000000019721f : call qword ptr [rax + 0x20fffc92]
0x0000000000197007 : call qword ptr [rax + 0x20fffc95]
0x0000000000186f8f : call qword ptr [rax + 0x2e]
0x0000000000186f9f : call qword ptr [rax + 0x33]
0x0000000000186faf : call qword ptr [rax + 0x38]
0x0000000000186fbf : call qword ptr [rax + 0x3d]
0x000000000005f07e : call qword ptr [rax + 0x8c28348]
0x0000000000199193 : call qword ptr [rax + rcx + 0x3a40001]
0x0000000000117309 : call qword ptr [rax - 0x18]
0x00000000001965d7 : call qword ptr [rax - 0x1f0003f9]
0x0000000000196583 : call qword ptr [rax - 0x1f000400]
0x000000000019640b : call qword ptr [rax - 0x1f000425]
0x00000000001963b7 : call qword ptr [rax - 0x1f00042c]
0x000000000019623f : call qword ptr [rax - 0x1f000451]
0x000000000018709f : call qword ptr [rax - 0x1f000f48]
0x0000000000196fab : call qword ptr [rax - 0x2f0003a7]
0x000000000019622b : call qword ptr [rax - 0x2f000443]
0x0000000000186fc3 : call qword ptr [rax - 0x2f000fc2]
0x0000000000186fb3 : call qword ptr [rax - 0x2f000fc7]
0x0000000000186fa3 : call qword ptr [rax - 0x2f000fcc]
0x0000000000186f93 : call qword ptr [rax - 0x2f000fd1]
0x000000000003476c : call qword ptr [rax - 0x3d]
0x000000000007cc7e : call qword ptr [rax - 0x3f38b8]
0x00000000001873e3 : call qword ptr [rax - 0x4f000e17]
0x0000000000196147 : call qword ptr [rax - 0x6f000434]
0x000000000018707b : call qword ptr [rax]
0x000000000004a3b4 : call qword ptr [rbx + rax*8]
0x000000000017338e : call qword ptr [rbx]
0x0000000000195e97 : call qword ptr [rcx + 0x21fffd90]
0x000000000006142a : call qword ptr [rcx]
0x000000000005a86d : call qword ptr [rdi]
0x00000000001966cf : call qword ptr [rdx + 0x22fffc48]
0x0000000000196bbb : call qword ptr [rdx + 0x22fffc70]
0x00000000001970b3 : call qword ptr [rdx + 0x22fffc97]
0x000000000004a8b7 : call qword ptr [rdx + rax*8 - 0x40]
0x00000000001986e3 : call qword ptr [rdx + rax*8]
0x0000000000055e34 : call qword ptr [rdx]
0x0000000000196b57 : call qword ptr [rsi + 0x26fffc6d]
0x000000000019704f : call qword ptr [rsi + 0x26fffc94]
0x0000000000195edf : call qword ptr [rsi + 0x26fffd91]
0x0000000000189563 : call qword ptr [rsi - 0x2c000a61]
0x0000000000049807 : call qword ptr [rsi]
0x000000000019775b : call qword ptr [rsp + 0x38f40000]
0x000000000019c84b : call qword ptr [rsp + rdi + 2]
0x0000000000024f39 : call r12
0x000000000002239b : call r14
0x000000000002457d : call r15
0x000000000006d837 : call r8
0x0000000000196593 : call rax
0x000000000002ded8 : call rbx
0x000000000002007a : call rcx
0x000000000002457e : call rdi
0x0000000000030414 : call rdx
0x000000000002239c : call rsi
0x0000000000185d4f : call rsp
0x0000000000081810 : cdq ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000003a494 : cdq ; idiv rsi ; ret
0x00000000001848a0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000007919a : cdq ; mov edx, eax ; jmp 0x79139
0x000000000012dde3 : cdq ; pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000893ab : cdq ; stosd dword ptr [rdi], eax ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000fc34e : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000011f96f : cdqe ; pop rbx ; mov eax, dword ptr [rdx + rax*8 + 4] ; ret
0x000000000007a1e0 : cdqe ; ret
0x0000000000124a2d : cdqe ; shr rax, 4 ; ret
0x00000000000ad3f3 : clc ; adc esi, dword ptr [rcx + rcx - 0x77] ; ret 0xc5eb
0x00000000000ec9a8 : clc ; add al, 0x41 ; sete dl ; jmp 0xec958
0x0000000000081eed : clc ; add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x0000000000046331 : clc ; add al, 0x89 ; ret
0x00000000000e52e6 : clc ; add al, 0xf ; xchg dword ptr [rbx - 0x76ffffef], ebx ; ret 0x8d48
0x000000000006d224 : clc ; add al, 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000511c2 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000ab888 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000058274 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x1e7f
0x00000000000b93b0 : clc ; add cl, byte ptr [rax + 1] ; ret
0x000000000007207e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000582a8 : clc ; add cl, byte ptr [rax - 9] ; fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000000eccb3 : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000095963 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001bc115 : clc ; add dword ptr [rax], eax ; clc ; call qword ptr [rax]
0x000000000019b82d : clc ; add dword ptr [rax], eax ; push rsp ; stc ; jmp rsp
0x00000000001bc0e5 : clc ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call qword ptr [rdi]
0x000000000009c7cf : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000332b0 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x0000000000096dfb : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a97a3 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000123885 : clc ; add eax, 0x10 ; ret
0x00000000000c1429 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x000000000019e1c8 : clc ; add ecx, ebp ; call qword ptr [rdx]
0x000000000019e138 : clc ; add ecx, ebp ; call qword ptr [rsi]
0x000000000012ddd1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009f7b6 : clc ; add rax, r8 ; ret
0x000000000008e8b8 : clc ; add rax, rcx ; ret
0x0000000000116062 : clc ; add rsp, 8 ; ret
0x000000000011f741 : clc ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x0000000000187810 : clc ; and dh, dl ; call qword ptr [rax + 0x10fff222]
0x000000000002e391 : clc ; and eax, 0x7f ; ret
0x0000000000119127 : clc ; and eax, 0xffffff ; ret
0x0000000000119101 : clc ; bswap eax ; ret
0x00000000001bba82 : clc ; call qword ptr [rax]
0x00000000001bc512 : clc ; call qword ptr [rcx]
0x00000000001bc0ea : clc ; call qword ptr [rdi]
0x00000000001bb052 : clc ; call qword ptr [rdx]
0x00000000001bb68a : clc ; call rbx
0x00000000001bc20a : clc ; call rcx
0x000000000019b20a : clc ; call rsp
0x00000000001afa18 : clc ; clc ; hlt ; jmp rcx
0x0000000000123861 : clc ; cmc ; je 0x12385d ; pop rbx ; ret
0x000000000004960f : clc ; cmovae rax, rsi ; ret
0x0000000000003aaa : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016f259 : clc ; cmp rcx, rax ; jne 0x16f28b ; xor eax, eax ; ret
0x000000000016f258 : clc ; cmp rcx, rax ; jne 0x16f28c ; xor eax, eax ; ret
0x0000000000170099 : clc ; cmp rcx, rax ; jne 0x1700cb ; xor eax, eax ; ret
0x0000000000170098 : clc ; cmp rcx, rax ; jne 0x1700cc ; xor eax, eax ; ret
0x000000000003a492 : clc ; cqo ; idiv rsi ; ret
0x00000000001059b5 : clc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000087a50 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000079b4c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fe6e3 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002dffd : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013f739 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000096e46 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000019b3aa : clc ; dec dword ptr [rbp + rdx*8 + 0x3d340001] ; clc ; call rsp
0x000000000019b372 : clc ; dec dword ptr [rbx + rdx*8 + 0x33b40001] ; clc ; call rsp
0x000000000019b1ea : clc ; dec dword ptr [rcx + rcx*8 + 0xb140001] ; clc ; jmp rsp
0x0000000000044ff4 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x00000000000773b9 : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000019b61a : clc ; dec esp ; call 0xffffffffc37db62a
0x00000000001b9c18 : clc ; fcompi st(7) ; jmp rdx
0x00000000001af989 : clc ; hlt ; jmp qword ptr [rcx]
0x00000000001afa19 : clc ; hlt ; jmp rcx
0x000000000019b5aa : clc ; inc dword ptr [rbp - 0x637bffff] ; clc ; call rsp
0x00000000000ffe79 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000000d120f : clc ; inc dword ptr [rcx - 0x77] ; ret
0x000000000005ca38 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000019b202 : clc ; inc dword ptr [rdx + rcx*8 + 0xec40001] ; clc ; call rsp
0x000000000019b25a : clc ; inc esp ; retf ; add dword ptr [rax], eax ; adc al, r15b ; jmp rsp
0x00000000001b1548 : clc ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x00000000001874f1 : clc ; int1 ; call qword ptr [rax]
0x00000000001874e9 : clc ; int1 ; call rax
0x00000000001874ed : clc ; int1 ; push rax ; clc ; int1 ; call qword ptr [rax]
0x000000000002746e : clc ; jg 0x273fd ; ret 0x5c77
0x00000000001bad02 : clc ; jmp qword ptr [rbx]
0x00000000001bb09a : clc ; jmp qword ptr [rcx]
0x00000000000d2a15 : clc ; jmp rax
0x00000000001bc25a : clc ; jmp rdi
0x000000000019b1da : clc ; jmp rsp
0x000000000017207a : clc ; jne 0x172187 ; ret
0x0000000000172079 : clc ; jne 0x172188 ; ret
0x0000000000094527 : clc ; jne 0x94401 ; ret
0x000000000019d0b8 : clc ; jno 0x19d0a6 ; call qword ptr [rax]
0x00000000000add3f : clc ; jo 0xadd55 ; xchg eax, esp ; ret
0x00000000000b0578 : clc ; jo 0xb058e ; xchg eax, esp ; ret
0x00000000000b2c48 : clc ; jo 0xb2c5e ; xchg eax, esp ; ret
0x000000000019b562 : clc ; ljmp ptr [rbx + 1] ; add byte ptr [rcx + rdx*4 - 8], al ; call rsp
0x000000000002e12d : clc ; loopne 0x2e14b ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009efa8 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000183502 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000152257 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152bc7 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a4c7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152dc7 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a437 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152fc7 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a3a7 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152273 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000049202 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000219bc : clc ; neg eax ; ret
0x00000000000ab61c : clc ; nop dword ptr [rax] ; ret
0x000000000010a921 : clc ; nop word ptr [rax + rax] ; ret
0x000000000012de92 : clc ; or byte ptr [rbp + rcx*4 + 0x48], cl ; or byte ptr [rbp - 0x77], al ; ret 0x8b48
0x00000000001a7ce9 : clc ; out dx, al ; call rcx
0x00000000000ff04d : clc ; pop rbp ; pop r12 ; ret
0x00000000000339bc : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001b2068 : clc ; popfq ; cmc ; call rdi
0x00000000001a5aa8 : clc ; popfq ; in eax, dx ; call qword ptr [rdi]
0x0000000000075aea : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000014201f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c735d : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000474d5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007cd00 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000000740eb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007c275 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000124162 : clc ; push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x0000000000002bb5 : clc ; ret
0x0000000000194f02 : clc ; ret 0x6e1f
0x0000000000118a84 : clc ; ret 7
0x0000000000119111 : clc ; ror ax, 8 ; ret
0x00000000000038a8 : clc ; salc ; jb 0x392c ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003a423 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000118dcb : clc ; sar rax, 6 ; ret
0x0000000000065385 : clc ; sbb eax, 0x83480000 ; ret 0x4804
0x0000000000047a3a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000001191a7 : clc ; shr eax, 0x18 ; ret
0x00000000001965b1 : clc ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x0000000000149e9c : clc ; sub rax, r8 ; ret
0x000000000014a0f1 : clc ; sub rax, rdx ; ret
0x000000000002bbfa : clc ; test rcx, rcx ; je 0x2bc08 ; call rcx
0x00000000001ae528 : clc ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000000cc322 : cld ; add byte ptr [rax], al ; ret
0x0000000000198fa5 : cld ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x198fa0 ; jmp rsp
0x000000000019b86d : cld ; add dword ptr [rax], eax ; test byte ptr [rdi], bh ; stc ; jmp rsp
0x0000000000045947 : cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x00000000000a9acf : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a9aef : cld ; add eax, dword ptr [rax] ; ret
0x000000000019b62c : cld ; call 0xffffffffc3bdb638
0x0000000000196f72 : cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000196fb6 : cld ; call qword ptr [rax + 0x10fffc46]
0x0000000000196f7a : cld ; call qword ptr [rax + 0x10fffc47]
0x0000000000196fbe : cld ; call qword ptr [rax + 0x10fffc49]
0x0000000000196f82 : cld ; call qword ptr [rax + 0x10fffc4a]
0x0000000000196fc6 : cld ; call qword ptr [rax + 0x10fffc4c]
0x0000000000196f8a : cld ; call qword ptr [rax + 0x10fffc4d]
0x0000000000196fce : cld ; call qword ptr [rax + 0x10fffc4f]
0x0000000000196f92 : cld ; call qword ptr [rax + 0x10fffc50]
0x0000000000196fd6 : cld ; call qword ptr [rax + 0x10fffc52]
0x0000000000196f9a : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000196fde : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000196fa2 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000196fe6 : cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000196f16 : cld ; call qword ptr [rax + 0x10fffc63]
0x0000000000196f0e : cld ; call qword ptr [rax + 0x10fffc64]
0x0000000000196f06 : cld ; call qword ptr [rax + 0x10fffc65]
0x0000000000196efe : cld ; call qword ptr [rax + 0x10fffc66]
0x000000000019725a : cld ; call qword ptr [rax + 0x10fffc89]
0x0000000000197252 : cld ; call qword ptr [rax + 0x10fffc8a]
0x000000000019724a : cld ; call qword ptr [rax + 0x10fffc8b]
0x0000000000197242 : cld ; call qword ptr [rax + 0x10fffc8c]
0x000000000019723a : cld ; call qword ptr [rax + 0x10fffc8d]
0x0000000000196622 : cld ; call qword ptr [rax + 0x20fffc46]
0x00000000001967fa : cld ; call qword ptr [rax + 0x20fffc4a]
0x0000000000196d26 : cld ; call qword ptr [rax + 0x20fffc6b]
0x0000000000196b0e : cld ; call qword ptr [rax + 0x20fffc6e]
0x000000000019721e : cld ; call qword ptr [rax + 0x20fffc92]
0x0000000000197006 : cld ; call qword ptr [rax + 0x20fffc95]
0x00000000001965d6 : cld ; call qword ptr [rax - 0x1f0003f9]
0x0000000000196faa : cld ; call qword ptr [rax - 0x2f0003a7]
0x0000000000187186 : cld ; call qword ptr [rax]
0x00000000001966ce : cld ; call qword ptr [rdx + 0x22fffc48]
0x0000000000196bba : cld ; call qword ptr [rdx + 0x22fffc70]
0x00000000001970b2 : cld ; call qword ptr [rdx + 0x22fffc97]
0x0000000000196bda : cld ; call qword ptr [rdx]
0x0000000000196b56 : cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000019704e : cld ; call qword ptr [rsi + 0x26fffc94]
0x000000000019664a : cld ; call qword ptr [rsi]
0x0000000000196592 : cld ; call rax
0x00000000001966de : cld ; call rdx
0x000000000019663a : cld ; call rsi
0x00000000001967a6 : cld ; call rsp
0x0000000000199fa9 : cld ; cmc ; jmp rsp
0x0000000000172172 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172188 ; xor eax, eax ; ret
0x0000000000172171 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x172189 ; xor eax, eax ; ret
0x000000000013f735 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000001965ee : cld ; dec dword ptr [rsi + 0x45] ; cld ; call rax
0x0000000000034e87 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000001ab6a4 : cld ; in eax, dx ; add byte ptr [rax], al ; sub byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001964ce : cld ; inc dword ptr [rax + 0x11] ; cld ; inc dword ptr [rax] ; adc edi, esp ; jmp rax
0x0000000000196532 : cld ; inc dword ptr [rax + 0x12] ; cld ; call qword ptr [rax]
0x0000000000196496 : cld ; inc dword ptr [rax + 0x15] ; cld ; jmp qword ptr [rax]
0x000000000019651a : cld ; inc dword ptr [rax + 0x16] ; cld ; jmp qword ptr [rax]
0x000000000019647a : cld ; inc dword ptr [rax + 0x17] ; cld ; jmp qword ptr [rax]
0x000000000019652e : cld ; inc dword ptr [rax + 0x40fffc10] ; adc bh, ah ; call qword ptr [rax]
0x0000000000196806 : cld ; inc dword ptr [rax + 0x49] ; cld ; call rax
0x0000000000196b1a : cld ; inc dword ptr [rax + 0x6d] ; cld ; call rax
0x0000000000196cf2 : cld ; inc dword ptr [rax + 0x71] ; cld ; call rax
0x00000000001965d2 : cld ; inc dword ptr [rax + 6] ; cld ; call qword ptr [rax - 0x1f0003f9]
0x00000000001965e2 : cld ; inc dword ptr [rax - 0x2f0003f5] ; or al, 0xfc ; jmp qword ptr [rax]
0x0000000000197012 : cld ; inc dword ptr [rax - 0x6c] ; cld ; call rax
0x000000000019722a : cld ; inc dword ptr [rax - 0x6f] ; cld ; jmp rax
0x00000000001964d2 : cld ; inc dword ptr [rax] ; adc edi, esp ; jmp rax
0x000000000019661e : cld ; inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc46]
0x00000000001967f6 : cld ; inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc4a]
0x0000000000196866 : cld ; inc dword ptr [rax] ; cmp al, 0xfc ; push qword ptr [rax + 0x3b] ; cld ; jmp rsi
0x0000000000196d22 : cld ; inc dword ptr [rax] ; insb byte ptr [rdi], dx ; cld ; call qword ptr [rax + 0x20fffc6b]
0x0000000000196b0a : cld ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffc6e]
0x000000000019649e : cld ; inc dword ptr [rax] ; sbb esp, edi ; jmp rax
0x00000000001871ce : cld ; inc dword ptr [rax] ; xchg ah, bh ; push qword ptr [rax - 0x79] ; cld ; jmp rax
0x000000000019721a : cld ; inc dword ptr [rax] ; xchg eax, ebx ; cld ; call qword ptr [rax + 0x20fffc92]
0x0000000000197002 : cld ; inc dword ptr [rax] ; xchg eax, esi ; cld ; call qword ptr [rax + 0x20fffc95]
0x0000000000197186 : cld ; inc dword ptr [rbp + rdx*4 - 4] ; call rsp
0x00000000000a9b87 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a9aae : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000123390 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001968ea : cld ; inc dword ptr [rdx + 0x3b] ; cld ; call rdx
0x00000000001966da : cld ; inc dword ptr [rdx + 0x47] ; cld ; call rdx
0x0000000000196bc6 : cld ; inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x00000000001970be : cld ; inc dword ptr [rdx - 0x6a] ; cld ; call rdx
0x00000000001966ca : cld ; inc dword ptr [rdx] ; cld ; call qword ptr [rdx + 0x22fffc48]
0x0000000000196bb6 : cld ; inc dword ptr [rdx] ; jno 0x196bc0 ; call qword ptr [rdx + 0x22fffc70]
0x0000000000196636 : cld ; inc dword ptr [rsi + 0x4b] ; cld ; call rsi
0x0000000000196b62 : cld ; inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x00000000001967a2 : cld ; inc dword ptr [rsi + rax*2 - 4] ; call rsp
0x0000000000196c8e : cld ; inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x000000000019705a : cld ; inc dword ptr [rsi - 0x6d] ; cld ; call rsi
0x0000000000196b52 : cld ; inc dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000019704a : cld ; inc dword ptr [rsi] ; xchg eax, ebp ; cld ; call qword ptr [rsi + 0x26fffc94]
0x000000000019659e : cld ; inc eax ; or esp, edi ; call qword ptr [rax]
0x0000000000187551 : cld ; int1 ; call qword ptr [rax]
0x00000000001ab359 : cld ; int1 ; jmp qword ptr [rcx]
0x000000000018754d : cld ; int1 ; jmp rax
0x00000000000ff3b0 : cld ; jg 0xff3e7 ; add dh, al ; inc dword ptr [rax] ; ret
0x0000000000196a26 : cld ; jmp qword ptr [rax + 0x10fffc3b]
0x0000000000196ef6 : cld ; jmp qword ptr [rax + 0x10fffc67]
0x000000000019745e : cld ; jmp qword ptr [rax + 0x10fffc88]
0x00000000001871e6 : cld ; jmp qword ptr [rax + 0x10fffc8e]
0x000000000019685a : cld ; jmp qword ptr [rax + 0x20fffc3d]
0x0000000000196852 : cld ; jmp qword ptr [rax + 0x20fffc3e]
0x000000000019684a : cld ; jmp qword ptr [rax + 0x20fffc3f]
0x0000000000196842 : cld ; jmp qword ptr [rax + 0x20fffc40]
0x000000000019683a : cld ; jmp qword ptr [rax + 0x20fffc41]
0x0000000000197456 : cld ; jmp qword ptr [rax + 0x20fffc89]
0x000000000019744e : cld ; jmp qword ptr [rax + 0x20fffc8a]
0x0000000000197446 : cld ; jmp qword ptr [rax + 0x20fffc8b]
0x000000000019743e : cld ; jmp qword ptr [rax + 0x20fffc8c]
0x0000000000197232 : cld ; jmp qword ptr [rax + 0x20fffc8e]
0x00000000001871c6 : cld ; jmp qword ptr [rax]
0x00000000001a9a42 : cld ; jmp qword ptr [rbx]
0x0000000000196de6 : cld ; jmp qword ptr [rdx + 0x12fffc61]
0x00000000001966d2 : cld ; jmp qword ptr [rdx]
0x0000000000196b5a : cld ; jmp qword ptr [rsi]
0x00000000001871d6 : cld ; jmp rax
0x00000000001966c2 : cld ; jmp rdx
0x000000000019665e : cld ; jmp rsi
0x000000000019678a : cld ; jmp rsp
0x000000000016fea6 : cld ; jne 0x1700df ; xor eax, eax ; ret
0x0000000000172175 : cld ; jne 0x172185 ; xor eax, eax ; ret
0x0000000000172174 : cld ; jne 0x172186 ; xor eax, eax ; ret
0x0000000000172095 : cld ; jne 0x172187 ; ret
0x0000000000172094 : cld ; jne 0x172188 ; ret
0x0000000000196dae : cld ; ljmp ptr [rax + 0x6852fffc] ; cld ; call rdx
0x00000000001969ee : cld ; ljmp ptr [rdx + 0x50fffc3a] ; cld ; call rax
0x00000000001529e2 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152be5 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152de5 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fe5 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014d3a8 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152616 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a656 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001527f6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a5d6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001529d6 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a556 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152436 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a6d6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ee91 : cld ; mov rax, rdi ; ret
0x00000000000491bc : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000198d91 : cld ; out dx, al ; call rsp
0x00000000000ab8aa : cld ; pop rbx ; ret
0x00000000001964ae : cld ; push qword ptr [rax + 0x11] ; cld ; push qword ptr [rax] ; adc edi, esp ; call qword ptr [rax]
0x000000000019686a : cld ; push qword ptr [rax + 0x3b] ; cld ; jmp rsi
0x0000000000196802 : cld ; push qword ptr [rax + 0x40fffc49] ; cld ; call rax
0x0000000000196b16 : cld ; push qword ptr [rax + 0x40fffc6d] ; insd dword ptr [rdi], dx ; cld ; call rax
0x0000000000197226 : cld ; push qword ptr [rax + 0x40fffc91] ; xchg eax, ecx ; cld ; jmp rax
0x000000000019700e : cld ; push qword ptr [rax + 0x40fffc94] ; xchg eax, esp ; cld ; call rax
0x0000000000196f6e : cld ; push qword ptr [rax + 0x43] ; cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000196f2e : cld ; push qword ptr [rax + 0x60] ; cld ; call qword ptr [rax]
0x0000000000196f26 : cld ; push qword ptr [rax + 0x61] ; cld ; jmp rax
0x000000000019659a : cld ; push qword ptr [rax + 8] ; cld ; inc eax ; or esp, edi ; call qword ptr [rax]
0x00000000001871d2 : cld ; push qword ptr [rax - 0x79] ; cld ; jmp rax
0x00000000001964b2 : cld ; push qword ptr [rax] ; adc edi, esp ; call qword ptr [rax]
0x0000000000196836 : cld ; push qword ptr [rax] ; cld ; jmp qword ptr [rax + 0x20fffc41]
0x0000000000196a22 : cld ; push qword ptr [rax] ; cmp al, 0xfc ; jmp qword ptr [rax + 0x10fffc3b]
0x0000000000196a5a : cld ; push qword ptr [rax] ; cmp eax, 0x3cb0fffc ; cld ; jmp qword ptr [rax]
0x0000000000197182 : cld ; push qword ptr [rbp + rdx*4 - 0x6abb0004] ; cld ; call rsp
0x00000000001966d6 : cld ; push qword ptr [rdx + 0x42fffc47] ; cld ; call rdx
0x0000000000196bc2 : cld ; push qword ptr [rdx + 0x42fffc6f] ; outsd dx, dword ptr [rsi] ; cld ; call rdx
0x00000000001970ba : cld ; push qword ptr [rdx + 0x42fffc96] ; xchg eax, esi ; cld ; call rdx
0x0000000000196632 : cld ; push qword ptr [rsi + 0x46fffc4b] ; cld ; call rsi
0x0000000000196b5e : cld ; push qword ptr [rsi + 0x46fffc6c] ; insb byte ptr [rdi], dx ; cld ; call rsi
0x0000000000197056 : cld ; push qword ptr [rsi + 0x46fffc93] ; xchg eax, ebx ; cld ; call rsi
0x000000000019679e : cld ; push qword ptr [rsi + rax*2 + 0x4644fffc] ; cld ; call rsp
0x0000000000196c8a : cld ; push qword ptr [rsi + rbp*2 + 0x6e44fffc] ; cld ; call rsp
0x00000000001965ae : cld ; push rax ; clc ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x00000000001871a2 : cld ; push rax ; ja 0x1871a8 ; call qword ptr [rax]
0x0000000000187182 : cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000000491c2 : cld ; ret
0x00000000001a8ba4 : cld ; ret 0
0x000000000019bdd9 : cld ; stc ; call rsp
0x00000000001a71a4 : cld ; test al, 0 ; add byte ptr [rax + 0x76], ch ; out dx, al ; call qword ptr [rax]
0x00000000001829b6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000b9f2e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb9f31 ; ret
0x00000000001a5aa4 : cld ; xchg eax, ecx ; add byte ptr [rax], al ; clc ; popfq ; in eax, dx ; call qword ptr [rdi]
0x000000000003c6d8 : cld ; xor byte ptr [rax - 0x77], cl ; call 0xffffffffc298d62a
0x000000000003ab2d : cli ; adc byte ptr [rcx], ch ; ret 0xfa69
0x00000000000bb31c : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bb29e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000198f45 : cli ; add byte ptr [rax], al ; and al, 0x63 ; out dx, eax ; jmp rsp
0x00000000000cbac9 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000d1d70 : cli ; add byte ptr [rdi], cl ; mov es, word ptr [rip - 0x7cfffffc] ; ret 0x4201
0x00000000000bc0e8 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000003c7bb : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x894c
0x000000000003e4aa : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8b48
0x000000000003c7e6 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000754f8 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a9842 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000026bc2 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000d0342 : cli ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x840
0x00000000001722d1 : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000000ba7af : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003755 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x373d ; ret 0x975
0x00000000000ff3e8 : cli ; and byte ptr [rsp + rbp*8 - 0x3a], dh ; inc dword ptr [rax] ; ret
0x000000000005575a : cli ; call qword ptr [r11 + rax*8]
0x000000000018b726 : cli ; call qword ptr [rax]
0x00000000001a85ca : cli ; call qword ptr [rdi]
0x000000000008827a : cli ; call rax
0x00000000000e4193 : cli ; call rcx
0x000000000019bf4a : cli ; call rsp
0x0000000000195cfd : cli ; cli ; jmp qword ptr [rax]
0x0000000000199f69 : cli ; cmc ; jmp rsp
0x00000000001152b7 : cli ; cmove eax, r10d ; jmp 0x1152a0
0x000000000010d978 : cli ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd108
0x0000000000104784 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003a7f1 : cli ; dec dword ptr [rax + 0xf] ; ret
0x00000000000e9e43 : cli ; dec dword ptr [rax + 1] ; ret
0x000000000018b70e : cli ; dec dword ptr [rax - 0x7700059d] ; movsxd rdi, edx ; jmp rax
0x000000000006f947 : cli ; dec dword ptr [rax - 0x77] ; sal byte ptr [rdx + rcx*2 + 0x5b], 1 ; ret
0x000000000019c3ba : cli ; dec dword ptr [rcx + rcx*2 - 0x58cbfffe] ; cli ; call rsp
0x000000000019c2aa : cli ; dec esp ; add al, byte ptr [r8] ; in al, -0x77 ; cli ; jmp rsp
0x000000000019c45a : cli ; dec esp ; add r8b, byte ptr [rax] ; adc al, 0xb4 ; cli ; jmp rsp
0x000000000019befa : cli ; dec esp ; sub al, byte ptr [rdx] ; add byte ptr [rbx + rdx - 6], ah ; jmp rsp
0x000000000018bbd2 : cli ; dec esp ; xchg eax, ebx ; cli ; jmp rsp
0x0000000000195cc6 : cli ; inc dword ptr [rax + 0x50fffaee] ; out dx, eax ; cli ; jmp qword ptr [rax]
0x0000000000195cf6 : cli ; inc dword ptr [rax - 7] ; cli ; push qword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000195ce6 : cli ; inc dword ptr [rax] ; cmc ; cli ; jmp qword ptr [rax]
0x000000000018b742 : cli ; inc dword ptr [rax] ; mov edi, edx ; inc dword ptr [rax] ; mov edi, edx ; jmp qword ptr [rax]
0x000000000018b746 : cli ; inc dword ptr [rax] ; mov edi, edx ; jmp qword ptr [rax]
0x000000000018b722 : cli ; inc dword ptr [rax] ; movsxd rdi, edx ; call qword ptr [rax]
0x0000000000195d06 : cli ; inc dword ptr [rax] ; std ; cli ; push rax ; std ; cli ; jmp rax
0x000000000019c022 : cli ; inc dword ptr [rbx + rsi + 0x33440002] ; cli ; jmp rsp
0x000000000019c03a : cli ; inc dword ptr [rsp + rsi + 0x37040002] ; cli ; jmp rsp
0x000000000019c55a : cli ; inc esp ; mov ebx, 0xc8040001 ; cli ; jmp rsp
0x0000000000187521 : cli ; int1 ; call rax
0x000000000014d36b : cli ; jg 0x14d37e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d85b : cli ; jg 0x14d86e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014dbfb : cli ; jg 0x14dc0e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000172291 : cli ; jg 0x1722a3 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018b74a : cli ; jmp qword ptr [rax]
0x00000000001a073a : cli ; jmp qword ptr [rcx]
0x00000000001a85b2 : cli ; jmp qword ptr [rdi]
0x000000000008d900 : cli ; jmp qword ptr [rsi + 0xf]
0x000000000018b716 : cli ; jmp rax
0x000000000018bbd6 : cli ; jmp rsp
0x000000000018b732 : cli ; lcall ptr [rax + 0x63] ; cli ; push qword ptr [rax + 0x63] ; cli ; call qword ptr [rax]
0x000000000019bfb2 : cli ; lcall ptr [rax + rsi + 0x2ba40002] ; cli ; call rsp
0x00000000001883e8 : cli ; leave ; call rbx
0x000000000019c312 : cli ; ljmp ptr [rbp + rax*2 - 0x6f3bfffe] ; cli ; jmp rsp
0x000000000019c512 : cli ; ljmp ptr [rcx + rbp*2 + 1] ; add ah, dh ; ret 0xfffa
0x000000000019bf42 : cli ; ljmp ptr [rsp + rbp + 0x18840002] ; cli ; call rsp
0x0000000000152de8 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ee77 : cli ; mov rax, rdi ; ret
0x0000000000051502 : cli ; mov rdi, rbx ; call rax
0x000000000011d640 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008eca8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001457a6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000b9fae : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000008b393 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xb60f
0x0000000000184e21 : cli ; push 0x6e ; ja 0x184dae ; ret 0x48f
0x000000000018b736 : cli ; push qword ptr [rax + 0x63] ; cli ; call qword ptr [rax]
0x0000000000195cfa : cli ; push qword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000195ce2 : cli ; push qword ptr [rax] ; hlt ; cli ; inc dword ptr [rax] ; cmc ; cli ; jmp qword ptr [rax]
0x000000000019be0a : cli ; push qword ptr [rbp + 0x4240002] ; cli ; jmp rsp
0x000000000018bbce : cli ; push qword ptr [rbx + rdx*4 - 0x6c330006] ; cli ; jmp rsp
0x0000000000195d0a : cli ; push rax ; std ; cli ; jmp rax
0x000000000002d3a3 : cli ; ret
0x00000000001838c5 : cli ; ret 0xac65
0x00000000001145fb : cli ; setae al ; ret
0x000000000008b7b0 : cli ; test rdx, rdx ; je 0x8b7c9 ; bsf rax, rdx ; ret
0x000000000008b99f : cli ; test rdx, rdx ; je 0x8b9c9 ; bsf rax, rdx ; ret
0x000000000018250a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000084482 : cli ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000149d18 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000ddb2c : cmc ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000173f4a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001891ca : cmc ; call qword ptr [rax]
0x00000000001b0cda : cmc ; call qword ptr [rcx]
0x00000000001afe4a : cmc ; call qword ptr [rdx]
0x0000000000189562 : cmc ; call qword ptr [rsi - 0x2c000a61]
0x00000000001b12ba : cmc ; call qword ptr [rsi]
0x0000000000189566 : cmc ; call rbx
0x00000000001b1f3a : cmc ; call rdi
0x00000000001b0282 : cmc ; call rsi
0x0000000000199daa : cmc ; call rsp
0x0000000000195ce9 : cmc ; cli ; jmp qword ptr [rax]
0x0000000000199ec1 : cmc ; cmc ; call rsp
0x00000000000f4561 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012e682 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001895aa : cmc ; dec dword ptr [rsi - 0x71000a5a] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rax]
0x0000000000199f62 : cmc ; dec esp ; imul eax, dword ptr [rcx], 0 ; xchg eax, esp ; cli ; cmc ; jmp rsp
0x0000000000199fa2 : cmc ; dec esp ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; cld ; cmc ; jmp rsp
0x00000000001a2d01 : cmc ; in al, dx ; jmp rbx
0x00000000001862e9 : cmc ; in eax, dx ; call qword ptr [rcx]
0x00000000001864c1 : cmc ; in eax, dx ; call qword ptr [rdx]
0x0000000000186239 : cmc ; in eax, dx ; call rsp
0x00000000001862fd : cmc ; in eax, dx ; inc dword ptr [rsi] ; in al, dx ; in eax, dx ; call rsp
0x00000000001862a9 : cmc ; in eax, dx ; jmp qword ptr [rbp - 0x2b00121d]
0x0000000000186371 : cmc ; in eax, dx ; lcall ptr [rdx] ; salc ; in eax, dx ; call rsp
0x00000000001862a1 : cmc ; in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x0000000000186329 : cmc ; in eax, dx ; push qword ptr [rdx - 0x17] ; in eax, dx ; call qword ptr [rbx]
0x00000000000d120c : cmc ; inc dword ptr [rbx - 0x76be0008] ; ret
0x00000000001ab139 : cmc ; int1 ; jmp qword ptr [rcx]
0x00000000000f6c6d : cmc ; ja 0xf6c05 ; pop rbx ; pop rbp ; ret
0x0000000000123862 : cmc ; je 0x12385c ; pop rbx ; ret
0x00000000000ff50f : cmc ; jge 0xff547 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001894c6 : cmc ; jmp qword ptr [rax]
0x00000000001b154a : cmc ; jmp qword ptr [rbx]
0x00000000001afeca : cmc ; jmp qword ptr [rcx]
0x00000000001b0002 : cmc ; jmp qword ptr [rdx]
0x00000000001b2cda : cmc ; jmp qword ptr [rsi]
0x00000000001b065a : cmc ; jmp rax
0x00000000001b17a2 : cmc ; jmp rbx
0x00000000001b18c2 : cmc ; jmp rdi
0x00000000001891c6 : cmc ; jmp rdx
0x0000000000189512 : cmc ; jmp rsi
0x0000000000199f6a : cmc ; jmp rsp
0x0000000000102056 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001894be : cmc ; ljmp ptr [rdx] ; xor ebp, 0xf5812aff ; jmp qword ptr [rax]
0x000000000018950a : cmc ; ljmp ptr [rdx] ; xor ebp, 0xf5812aff ; jmp rsi
0x00000000001a4328 : cmc ; mov bh, 0xe7 ; call rdx
0x0000000000185249 : cmc ; mov ch, 0xab ; ret
0x000000000015a5da : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015266e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000171683 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000001820f7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000001891c2 : cmc ; push qword ptr [rsp - 0xb] ; jmp rdx
0x00000000001891be : cmc ; push qword ptr [rsp - 0xb] ; push qword ptr [rsp - 0xb] ; jmp rdx
0x0000000000132c47 : cmc ; ret 0xffff
0x0000000000196289 : cmc ; sti ; inc dword ptr [rax - 9] ; sti ; call rax
0x00000000001962a9 : cmc ; sti ; jmp qword ptr [rax]
0x0000000000171687 : cmc ; sub eax, edx ; ret
0x0000000000184885 : cmc ; xlatb ; ret 0x4e27
0x00000000000ead51 : cmova eax, edx ; ret
0x00000000000bb3f3 : cmova esi, ecx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007de69 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008b3f7 : cmovae eax, ecx ; ret
0x0000000000049611 : cmovae eax, esi ; ret
0x0000000000003867 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007de68 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000049610 : cmovae rax, rsi ; ret
0x000000000003aa6f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ed530 : cmove eax, dword ptr [rbp - 0x78] ; mov rdi, rax ; call r14
0x000000000006c6f4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f6b9b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000978d9 : cmove eax, ebx ; pop rbx ; ret
0x0000000000076391 : cmove eax, ecx ; ret
0x000000000013ba0a : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f7d8 : cmove eax, edx ; add eax, 1 ; ret
0x00000000001156b0 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bb161 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f7940 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x0000000000087a53 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000001152ba : cmove eax, edx ; jmp 0x11529d
0x00000000000b4ff1 : cmove eax, edx ; nop dword ptr [rax] ; ret
0x000000000002dd6b : cmove eax, edx ; ret
0x00000000001152b9 : cmove eax, r10d ; jmp 0x11529e
0x00000000001152b8 : cmove eax, r10d ; jmp 0x11529f
0x000000000009ef41 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x0000000000076390 : cmove r8, rcx ; ret
0x00000000000ed52f : cmove rax, qword ptr [rbp - 0x78] ; mov rdi, rax ; call r14
0x00000000000f6b9a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000978d8 : cmove rax, rbx ; pop rbx ; ret
0x00000000000ab6dc : cmove rax, rcx ; ret
0x000000000013ba09 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f7e9 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bb160 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x0000000000087a52 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002dd6a : cmove rax, rdx ; ret
0x0000000000072fdb : cmovg eax, ecx ; test rdx, rdx ; jne 0x72fd9 ; ret
0x000000000007bc1b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7bc19 ; ret
0x000000000001f5b7 : cmovge eax, edx ; jmp 0x1f588
0x000000000001f8fe : cmovge eax, edx ; jmp 0x1f908
0x000000000007a905 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a7f4 : cmovne eax, ebx ; pop rbx ; ret
0x000000000011076d : cmovne eax, ecx ; ret
0x000000000009742b : cmovne eax, edi ; ret
0x00000000001364ff : cmovne eax, edx ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000140076 : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000001fc69 : cmovne eax, edx ; ret
0x0000000000110704 : cmovne eax, esi ; ret
0x0000000000100e84 : cmovne ebx, eax ; call 0xfd145
0x000000000003a7f3 : cmovne rax, rbx ; pop rbx ; ret
0x000000000009742a : cmovne rax, rdi ; ret
0x0000000000140075 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089aa2 : cmovne rax, rdx ; ret
0x0000000000100e83 : cmovne rbx, rax ; call 0xfd146
0x000000000010e872 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000033a71 : cmovns eax, dword ptr [rbx - 0x76b30f1a] ; imul eax ; ret 0x5bd
0x000000000010e871 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000128b50 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x00000000000eca5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x000000000005e0e2 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; ret 0x8948
0x000000000009eeb3 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x00000000000b85c1 : cmovs eax, dword ptr [rcx] ; ret 0x14c
0x000000000003a4e6 : cmovs eax, edx ; pop rbx ; ret
0x00000000000242bc : cmovs eax, edx ; ret
0x0000000000080acb : cmovs ebp, dword ptr [rcx] ; ret 0x148
0x00000000000809e1 : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000007cd38 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x7cd39 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000996cf : cmovs edi, dword ptr [rcx] ; ror byte ptr [rax + 0xf], 1 ; ret 0xd231
0x00000000000a9b06 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x00000000001871c1 : cmp ah, 0xff ; mov al, 0x81 ; cld ; jmp qword ptr [rax]
0x00000000001aab48 : cmp ah, bl ; int1 ; call rdi
0x000000000014a013 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149e88 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149eef : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000005fe6a : cmp ah, byte ptr [rdi - 0x7cb70001] ; ret 0xeb08
0x0000000000134442 : cmp ah, byte ptr [rsi - 0x76b70011] ; ret 0xbfeb
0x000000000005c4c2 : cmp al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000042c8 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x25
0x0000000000102e61 : cmp al, 0x24 ; call rbx
0x0000000000142e6c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe0] ; jmp rax
0x0000000000129192 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001af4e4 : cmp al, 0x2c ; add dword ptr [rax], eax ; fsub st(4) ; hlt ; jmp qword ptr [rcx]
0x0000000000038e6e : cmp al, 0x33 ; call rax
0x0000000000020620 : cmp al, 0x3a ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x00000000000d004c : cmp al, 0x3f ; jne 0xd0011 ; mov eax, 1 ; ret
0x00000000000d0064 : cmp al, 0x3f ; jne 0xd002e ; mov eax, 1 ; ret
0x0000000000183500 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001b0fe4 : cmp al, 0x47 ; add dword ptr [rax], eax ; cmp byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b12e4 : cmp al, 0x4a ; add dword ptr [rax], eax ; sbb byte ptr [rcx - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b30e4 : cmp al, 0x68 ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x0000000000187d08 : cmp al, 0x7c ; jmp rsp
0x000000000004a8b4 : cmp al, 0x81 ; call qword ptr [r10 + rax*8 - 0x40]
0x0000000000125fd4 : cmp al, 0x83 ; ret
0x0000000000062c7b : cmp al, 0x83 ; ret 0x8308
0x00000000000f0714 : cmp al, 0x89 ; ret
0x0000000000081ef0 : cmp al, 0x89 ; ret 0xb48b
0x00000000001a6ee4 : cmp al, 0xa6 ; add byte ptr [rax], al ; test al, 0x49 ; out dx, al ; jmp qword ptr [rax]
0x00000000001a7ce4 : cmp al, 0xb4 ; add byte ptr [rax], al ; or al, bh ; out dx, al ; call rcx
0x0000000000033331 : cmp al, 0xb8 ; add rdi, r8 ; jmp rdi
0x00000000000e3c05 : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000b1fda : cmp al, 0xe ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000198cb4 : cmp al, 0xe6 ; add byte ptr [rax], al ; xor al, 0xa2 ; out dx, al ; call rsp
0x00000000001ab2e4 : cmp al, 0xea ; add byte ptr [rax], al ; cwde ; stc ; int1 ; call qword ptr [rax]
0x00000000001b3db9 : cmp al, 0xf6 ; jmp rdi
0x000000000019aca1 : cmp al, 0xf7 ; jmp rsp
0x00000000001bc0e4 : cmp al, 0xf8 ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call qword ptr [rdi]
0x0000000000195da5 : cmp al, 0xfb ; call qword ptr [rax]
0x00000000001968e5 : cmp al, 0xfc ; call rdx
0x000000000019c6c1 : cmp al, 0xfc ; call rsp
0x0000000000196a25 : cmp al, 0xfc ; jmp qword ptr [rax + 0x10fffc3b]
0x0000000000196a61 : cmp al, 0xfc ; jmp qword ptr [rax]
0x0000000000196869 : cmp al, 0xfc ; push qword ptr [rax + 0x3b] ; cld ; jmp rsi
0x00000000001998f5 : cmp al, 1 ; add byte ptr [rsp + rsi], dl ; call rsp
0x000000000016fe83 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5a30 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000727db : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x000000000002088d : cmp al, byte ptr [rax] ; call 0x1436f9
0x000000000001f572 : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000020621 : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; ret
0x0000000000020e75 : cmp al, byte ptr [rax] ; pop rbx ; ret
0x00000000000210cf : cmp al, byte ptr [rax] ; ret
0x0000000000171b46 : cmp al, byte ptr [rsi - 1] ; jne 0x171b6c ; xor eax, eax ; ret
0x000000000001f571 : cmp al, byte ptr fs:[rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000dcff8 : cmp al, ch ; ret 0xff84
0x00000000000331b0 : cmp al, ch ; stosb byte ptr [rdi], al ; ret 0xfffe
0x0000000000186fb1 : cmp al, dh ; call qword ptr [rax - 0x2f000fc7]
0x000000000008eae6 : cmp al, dh ; ret
0x000000000008eae5 : cmp al, r14b ; ret
0x0000000000034d46 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00000000001106ca : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000e7203 : cmp bh, bh ; sub eax, 0x36740000 ; xor eax, eax ; ret
0x0000000000195da1 : cmp bh, bl ; push qword ptr [rax] ; cmp al, 0xfb ; call qword ptr [rax]
0x0000000000187d34 : cmp bh, byte ptr [rsi - 0xd] ; lcall ptr [rdx] ; jo 0x187d35 ; call qword ptr [rsi]
0x0000000000110702 : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000000e328a : cmp bl, ch ; ret
0x0000000000094bdb : cmp bl, dh ; ret
0x00000000000aab26 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000007516b : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000e6f1b : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000049cec : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000131504 : cmp byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000000000078fe7 : cmp byte ptr [rax + 0xf], al ; mov dh, 0xc7 ; ret
0x000000000008f70f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000002572a : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000134f56 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008eb27 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000326dc : cmp byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d89e7 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000012c4d5 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d7eb5 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d7eb4 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x0000000000102e14 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000133688 : cmp byte ptr [rax - 0x77], cl ; iretd ; jmp r8
0x000000000013bc38 : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000112058 : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000007516c : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000f44e6 : cmp byte ptr [rax - 0x77], cl ; ret 0x70e9
0x00000000000c002c : cmp byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000f0db4 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012c243 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de71 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000133761 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000601ac : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5c6f : cmp byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000116a00 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000ff2b2 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016c458 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008eb16 : cmp byte ptr [rax], ah ; ret
0x000000000003ae95 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007c243 : cmp byte ptr [rax], al ; je 0x7c254 ; ret
0x0000000000044b37 : cmp byte ptr [rax], al ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000036717 : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000366c4 : cmp byte ptr [rax], al ; ret
0x0000000000138569 : cmp byte ptr [rax], bl ; je 0x138574 ; ret
0x00000000000e6f1c : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089aa0 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009f6a6 : cmp byte ptr [rax], dh ; ret
0x000000000008eb06 : cmp byte ptr [rax], dl ; ret
0x000000000008eb05 : cmp byte ptr [rax], r10b ; ret
0x000000000008eb15 : cmp byte ptr [rax], r12b ; ret
0x000000000009f6a5 : cmp byte ptr [rax], r14b ; ret
0x0000000000089a9f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000aab2a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000aab29 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000762c3 : cmp byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x29] ; ret
0x0000000000142fda : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x0000000000105c1e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000001280f4 : cmp byte ptr [rbp - 0x76b7ffd7], bh ; ret 0x1be
0x00000000001b0fe8 : cmp byte ptr [rbp - 0xb], ah ; jmp qword ptr [rcx]
0x00000000001b2b96 : cmp byte ptr [rbx + 0x2330307], al ; ret
0x000000000013677a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001aea94 : cmp byte ptr [rbx - 0x3ff1b5f9], al ; add al, byte ptr [rbx] ; ret 0xa04
0x0000000000010600 : cmp byte ptr [rbx], al ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x00000000000aab27 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000073ec7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000514ff : cmp byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, rbx ; call rax
0x00000000000fde46 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x000000000005c2a6 : cmp byte ptr [rcx - 0x7d], cl ; ret
0x00000000001aa108 : cmp byte ptr [rcx - 0xf], cl ; call qword ptr [rdx]
0x000000000016c459 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a6e44 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002048 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000001870ac : cmp byte ptr [rdi - 0x3e2f0010], 0xf0 ; jmp qword ptr [rax]
0x000000000003a4b8 : cmp byte ptr [rdi], 0 ; jne 0x3a4c6 ; pop rbx ; ret
0x000000000007c1fc : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000016e72d : cmp byte ptr [rdi], dl ; ret
0x000000000016f240 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f229 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f212 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016dcce : cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000120b68 : cmp byte ptr [rdx], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000bf250 : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fc882 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x00000000001b2cd8 : cmp ch, bh ; cmc ; jmp qword ptr [rsi]
0x0000000000149ef2 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000ba933 : cmp cl, al ; call 0xffffffffc234ea5f
0x00000000000d7e03 : cmp cl, bl ; jne 0xd7dcc ; jmp 0xd7dbb
0x00000000000dcc9f : cmp cl, byte ptr [rax - 0x7d] ; ret
0x000000000002a09c : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000000000fea17 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000079100 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007ea01 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x961
0x00000000000462ec : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000010d979 : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret 0xd108
0x0000000000197761 : cmp cl, ch ; jmp rsp
0x000000000005ba18 : cmp cl, ch ; ret
0x00000000000e0932 : cmp cl, ch ; ret 0xfffc
0x000000000011f87d : cmp cl, dl ; je 0x11f96a ; pop rbx ; ret
0x00000000000e30e2 : cmp dh, 0x11 ; je 0xe3122 ; mov rdx, rax ; jmp 0xe3089
0x0000000000186fb9 : cmp dh, al ; call qword ptr [rax]
0x0000000000110743 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000003a4b5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000001b3af9 : cmp dh, dh ; call qword ptr [rax]
0x00000000001b3d49 : cmp dh, dh ; jmp qword ptr [rax]
0x0000000000048966 : cmp dh, dh ; ret 0x4801
0x00000000000a03d5 : cmp dh, dh ; ret 0x7501
0x000000000011076b : cmp dh, dl ; cmovne eax, ecx ; ret
0x00000000001106c9 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110701 : cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000ff3e7 : cmp dl, 0x20 ; je 0xff3e1 ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000001152b6 : cmp dl, 0x2e ; cmove eax, r10d ; jmp 0x1152a1
0x00000000001722d0 : cmp dl, 1 ; jb 0x1722de ; mov byte ptr [rdi], cl ; ret
0x000000000008b3b3 : cmp dl, 3 ; je 0x8b3df ; movsx eax, dl ; ret
0x000000000008b3b3 : cmp dl, 3 ; je 0x8b3e0 ; movsx eax, dl ; ret
0x0000000000002b6a : cmp dl, byte ptr [rdi] ; ret
0x0000000000073e98 : cmp dword ptr [rax + 0x30], 0 ; je 0x73ea6 ; ret
0x000000000011451a : cmp dword ptr [rax + 8], edi ; jne 0x114519 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000101f98 : cmp dword ptr [rax + rax], ebp ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d0246 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000138568 : cmp dword ptr [rax], 0x18 ; je 0x138575 ; ret
0x000000000002d356 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x3988bf], dl ; ret
0x000000000002de30 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e609 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002a495 : cmp dword ptr [rax], eax ; ret
0x0000000000035164 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35177 ; ret
0x000000000010b3a3 : cmp dword ptr [rbp - 0x76b7ffd5], esp ; ret 0x8d48
0x000000000011bc13 : cmp dword ptr [rbp - 0x76b7ffd6], ebx ; ret 0x8d48
0x00000000000d4572 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd4509
0x000000000015a118 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000003806b : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x0000000000025211 : cmp dword ptr [rcx*2 + 0x394d078b], eax ; ret 0x860f
0x0000000000025210 : cmp dword ptr [rcx*2 + 0x394d078b], r8d ; ret 0x860f
0x00000000001b027d : cmp dword ptr [rcx], eax ; add byte ptr [rax], ah ; and esi, ebp ; call rsi
0x000000000012844d : cmp dword ptr [rdi + 0x10], 2 ; je 0x12845e ; ret
0x0000000000078854 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007c241 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7c256 ; ret
0x00000000000b9f04 : cmp dword ptr [rdi + 8], edx ; jne 0xb9ed3 ; ret
0x00000000000ab6d9 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x0000000000114598 : cmp dword ptr [rdi], 0 ; je 0x1145ae ; ret
0x00000000000890a1 : cmp dword ptr [rip + 0x33da10], 0 ; je 0x890b9 ; ret
0x00000000001025ac : cmp dword ptr [rsi], 0 ; je 0x1025be ; ret
0x00000000000037f6 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f7893 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000138567 : cmp dword ptr fs:[rax], 0x18 ; je 0x138576 ; ret
0x0000000000003b5b : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000ad3f2 : cmp eax, 0x13 ; je 0xad406 ; mov edx, eax ; jmp 0xad3c6
0x00000000000afc52 : cmp eax, 0x13 ; je 0xafc66 ; mov edx, eax ; jmp 0xafc26
0x00000000000b2312 : cmp eax, 0x13 ; je 0xb2326 ; mov edx, eax ; jmp 0xb22e6
0x0000000000120c82 : cmp eax, 0x2a7f95 ; call rax
0x0000000000120413 : cmp eax, 0x2a87a8 ; call rax
0x000000000010157b : cmp eax, 0x2c2cf0 ; ret
0x0000000000082a3f : cmp eax, 0x341374 ; mov rdi, rbx ; call qword ptr [r15]
0x0000000000196a5d : cmp eax, 0x3cb0fffc ; cld ; jmp qword ptr [rax]
0x0000000000196999 : cmp eax, 0x3d54fffc ; cld ; call rsp
0x00000000001b0655 : cmp eax, 0x42880001 ; cmc ; jmp rax
0x0000000000102b7f : cmp eax, 0x49fff1c9 ; mov edi, dword ptr [rsi] ; call rbx
0x0000000000186028 : cmp eax, 0x62ffed61 ; ret
0x00000000000c736a : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000000fbbc0 : cmp eax, 0xa1 ; je 0xfbbe0 ; neg eax ; pop rbx ; ret
0x00000000000972f5 : cmp eax, 0xc0845074 ; je 0x97351 ; xor eax, eax ; ret
0x000000000009747e : cmp eax, 0xc0845f74 ; je 0x974e9 ; pop rbx ; pop rbp ; ret
0x00000000000974e5 : cmp eax, 0xc084e774 ; je 0x974d8 ; pop rbx ; pop rbp ; ret
0x000000000009734d : cmp eax, 0xc084ed74 ; je 0x97346 ; xor eax, eax ; ret
0x0000000000123860 : cmp eax, 0xf5 ; je 0x12385e ; pop rbx ; ret
0x0000000000101e2b : cmp eax, 0xf660009 ; ret
0x000000000014201e : cmp eax, 0xff ; je 0x142039 ; add rsp, 8 ; ret
0x00000000000740ea : cmp eax, 0xff ; je 0x740fb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007412e : cmp eax, 0xff ; je 0x7413f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007c274 : cmp eax, 0xff ; je 0x7c289 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ccb1 : cmp eax, 0xff ; je 0x7ccc2 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000000474d4 : cmp eax, 0xff ; jne 0x474c9 ; mov rax, rdx ; ret
0x0000000000075ae9 : cmp eax, 0xff ; jne 0x75af6 ; pop rbx ; ret
0x000000000007ccff : cmp eax, 0xff ; jne 0x7ccf0 ; pop rbx ; ret
0x0000000000124161 : cmp eax, 0xff ; mov dl, 2 ; cmove eax, edx ; ret
0x0000000000105352 : cmp eax, 0xfffff000 ; ja 0x105368 ; ret
0x0000000000106e4e : cmp eax, 0xfffff000 ; ja 0x106e69 ; pop rbx ; pop rbp ; ret
0x00000000001070c1 : cmp eax, 0xfffff000 ; ja 0x1070d7 ; ret
0x0000000000107183 : cmp eax, 0xfffff000 ; ja 0x107198 ; ret
0x00000000001071bd : cmp eax, 0xfffff000 ; ja 0x1071d8 ; ret
0x0000000000107d6e : cmp eax, 0xfffff000 ; ja 0x107d87 ; ret
0x0000000000107eee : cmp eax, 0xfffff000 ; ja 0x107f07 ; ret
0x0000000000108388 : cmp eax, 0xfffff000 ; ja 0x108397 ; ret
0x000000000010842a : cmp eax, 0xfffff000 ; ja 0x10843f ; ret
0x00000000001084da : cmp eax, 0xfffff000 ; ja 0x1084ef ; ret
0x000000000011534b : cmp eax, 0xfffff000 ; ja 0x115360 ; ret
0x00000000001153c8 : cmp eax, 0xfffff000 ; ja 0x1153f2 ; ret
0x00000000001172cd : cmp eax, 0xfffff000 ; ja 0x1172e8 ; ret
0x000000000011737d : cmp eax, 0xfffff000 ; ja 0x117398 ; ret
0x0000000000035268 : cmp eax, 0xfffff000 ; ja 0x35298 ; ret
0x0000000000035561 : cmp eax, 0xfffff000 ; ja 0x35578 ; ret
0x00000000000355cd : cmp eax, 0xfffff000 ; ja 0x355e8 ; ret
0x0000000000035617 : cmp eax, 0xfffff000 ; ja 0x35627 ; ret
0x000000000003569d : cmp eax, 0xfffff000 ; ja 0x356b8 ; ret
0x00000000000c7f82 : cmp eax, 0xfffff000 ; ja 0xc7f97 ; ret
0x00000000000ca7a1 : cmp eax, 0xfffff000 ; ja 0xca7b7 ; ret
0x00000000000ca84b : cmp eax, 0xfffff000 ; ja 0xca85f ; ret
0x00000000000ca94c : cmp eax, 0xfffff000 ; ja 0xca95f ; ret
0x00000000000cbb94 : cmp eax, 0xfffff000 ; ja 0xcbba7 ; ret
0x00000000000cbc04 : cmp eax, 0xfffff000 ; ja 0xcbc17 ; ret
0x00000000000cbe78 : cmp eax, 0xfffff000 ; ja 0xcbe87 ; ret
0x00000000000cbef8 : cmp eax, 0xfffff000 ; ja 0xcbf07 ; ret
0x00000000000f6e16 : cmp eax, 0xfffff000 ; ja 0xf6e28 ; ret
0x00000000000f6e65 : cmp eax, 0xfffff000 ; ja 0xf6e78 ; ret
0x00000000000f6eb6 : cmp eax, 0xfffff000 ; ja 0xf6ec8 ; ret
0x00000000000f6f0e : cmp eax, 0xfffff000 ; ja 0xf6f28 ; ret
0x00000000000f6f72 : cmp eax, 0xfffff000 ; ja 0xf6f88 ; ret
0x00000000000f6fcb : cmp eax, 0xfffff000 ; ja 0xf6fe0 ; ret
0x00000000000f71aa : cmp eax, 0xfffff000 ; ja 0xf71c0 ; ret
0x00000000000f7311 : cmp eax, 0xfffff000 ; ja 0xf7328 ; ret
0x00000000000f7864 : cmp eax, 0xfffff000 ; ja 0xf78a8 ; ret
0x00000000000fbc33 : cmp eax, 0xfffff000 ; ja 0xfbc48 ; ret
0x00000000000fbc87 : cmp eax, 0xfffff000 ; ja 0xfbc98 ; ret
0x00000000000fc3db : cmp eax, 0xfffff000 ; ja 0xfc3ef ; ret
0x00000000000fc91f : cmp eax, 0xfffff000 ; ja 0xfc937 ; ret
0x00000000000fd1bb : cmp eax, 0xfffff000 ; ja 0xfd1cf ; ret
0x00000000000fd26b : cmp eax, 0xfffff000 ; ja 0xfd27f ; ret
0x00000000000fd316 : cmp eax, 0xfffff000 ; ja 0xfd327 ; ret
0x00000000000fd386 : cmp eax, 0xfffff000 ; ja 0xfd397 ; ret
0x00000000000fd407 : cmp eax, 0xfffff000 ; ja 0xfd417 ; ret
0x00000000000fd4b7 : cmp eax, 0xfffff000 ; ja 0xfd4c7 ; ret
0x00000000000fda07 : cmp eax, 0xfffff000 ; ja 0xfda18 ; ret
0x00000000000ff068 : cmp eax, 0xfffff000 ; ja 0xff080 ; ret
0x00000000000ff0fc : cmp eax, 0xfffff000 ; ja 0xff110 ; ret
0x00000000000ff19c : cmp eax, 0xfffff000 ; ja 0xff1b0 ; ret
0x00000000000ff1f0 : cmp eax, 0xfffff000 ; ja 0xff208 ; ret
0x00000000001015aa : cmp eax, 0xfffff001 ; jae 0x1015b9 ; ret
0x000000000010172b : cmp eax, 0xfffff001 ; jae 0x10173a ; ret
0x0000000000101758 : cmp eax, 0xfffff001 ; jae 0x101767 ; ret
0x0000000000101788 : cmp eax, 0xfffff001 ; jae 0x101797 ; ret
0x00000000001017c1 : cmp eax, 0xfffff001 ; jae 0x101800 ; ret
0x0000000000101818 : cmp eax, 0xfffff001 ; jae 0x101827 ; ret
0x0000000000101848 : cmp eax, 0xfffff001 ; jae 0x101857 ; ret
0x000000000010187b : cmp eax, 0xfffff001 ; jae 0x10188a ; ret
0x00000000001018a8 : cmp eax, 0xfffff001 ; jae 0x1018b7 ; ret
0x00000000001018d8 : cmp eax, 0xfffff001 ; jae 0x1018e7 ; ret
0x0000000000101908 : cmp eax, 0xfffff001 ; jae 0x101917 ; ret
0x0000000000101938 : cmp eax, 0xfffff001 ; jae 0x101947 ; ret
0x0000000000105c3b : cmp eax, 0xfffff001 ; jae 0x105c4a ; ret
0x0000000000105c68 : cmp eax, 0xfffff001 ; jae 0x105c77 ; ret
0x0000000000105c98 : cmp eax, 0xfffff001 ; jae 0x105ca7 ; ret
0x0000000000105ccb : cmp eax, 0xfffff001 ; jae 0x105cda ; ret
0x0000000000105cfb : cmp eax, 0xfffff001 ; jae 0x105d0a ; ret
0x0000000000105d28 : cmp eax, 0xfffff001 ; jae 0x105d37 ; ret
0x0000000000105d5b : cmp eax, 0xfffff001 ; jae 0x105d6a ; ret
0x0000000000105d88 : cmp eax, 0xfffff001 ; jae 0x105d97 ; ret
0x0000000000105db8 : cmp eax, 0xfffff001 ; jae 0x105dc7 ; ret
0x0000000000105deb : cmp eax, 0xfffff001 ; jae 0x105dfa ; ret
0x0000000000105e18 : cmp eax, 0xfffff001 ; jae 0x105e27 ; ret
0x0000000000105e4b : cmp eax, 0xfffff001 ; jae 0x105e5a ; ret
0x0000000000106db8 : cmp eax, 0xfffff001 ; jae 0x106dc7 ; ret
0x0000000000106de8 : cmp eax, 0xfffff001 ; jae 0x106df7 ; ret
0x0000000000106f21 : cmp eax, 0xfffff001 ; jae 0x106f60 ; ret
0x0000000000106f88 : cmp eax, 0xfffff001 ; jae 0x106f97 ; ret
0x0000000000106fb8 : cmp eax, 0xfffff001 ; jae 0x106fc7 ; ret
0x0000000000106fe8 : cmp eax, 0xfffff001 ; jae 0x106ff7 ; ret
0x0000000000107018 : cmp eax, 0xfffff001 ; jae 0x107027 ; ret
0x000000000010724b : cmp eax, 0xfffff001 ; jae 0x10725a ; ret
0x0000000000107278 : cmp eax, 0xfffff001 ; jae 0x107287 ; ret
0x00000000001072a8 : cmp eax, 0xfffff001 ; jae 0x1072b7 ; ret
0x00000000001072eb : cmp eax, 0xfffff001 ; jae 0x1072fa ; ret
0x0000000000107318 : cmp eax, 0xfffff001 ; jae 0x107327 ; ret
0x0000000000107348 : cmp eax, 0xfffff001 ; jae 0x107357 ; ret
0x0000000000107378 : cmp eax, 0xfffff001 ; jae 0x107387 ; ret
0x00000000001073a8 : cmp eax, 0xfffff001 ; jae 0x1073b7 ; ret
0x00000000001073d8 : cmp eax, 0xfffff001 ; jae 0x1073e7 ; ret
0x0000000000107408 : cmp eax, 0xfffff001 ; jae 0x107417 ; ret
0x0000000000107438 : cmp eax, 0xfffff001 ; jae 0x107447 ; ret
0x0000000000107468 : cmp eax, 0xfffff001 ; jae 0x107477 ; ret
0x000000000010749b : cmp eax, 0xfffff001 ; jae 0x1074aa ; ret
0x00000000001074d4 : cmp eax, 0xfffff001 ; jae 0x107516 ; ret
0x0000000000107528 : cmp eax, 0xfffff001 ; jae 0x107537 ; ret
0x000000000010755b : cmp eax, 0xfffff001 ; jae 0x10756a ; ret
0x0000000000107588 : cmp eax, 0xfffff001 ; jae 0x107597 ; ret
0x00000000001075b8 : cmp eax, 0xfffff001 ; jae 0x1075c7 ; ret
0x00000000001075e8 : cmp eax, 0xfffff001 ; jae 0x1075f7 ; ret
0x0000000000107618 : cmp eax, 0xfffff001 ; jae 0x107627 ; ret
0x0000000000107648 : cmp eax, 0xfffff001 ; jae 0x107657 ; ret
0x000000000010767b : cmp eax, 0xfffff001 ; jae 0x10768a ; ret
0x00000000001076ab : cmp eax, 0xfffff001 ; jae 0x1076ba ; ret
0x00000000001076d8 : cmp eax, 0xfffff001 ; jae 0x1076e7 ; ret
0x0000000000107708 : cmp eax, 0xfffff001 ; jae 0x107717 ; ret
0x0000000000107738 : cmp eax, 0xfffff001 ; jae 0x107747 ; ret
0x000000000010776b : cmp eax, 0xfffff001 ; jae 0x10777a ; ret
0x000000000010779b : cmp eax, 0xfffff001 ; jae 0x1077aa ; ret
0x00000000001077cb : cmp eax, 0xfffff001 ; jae 0x1077da ; ret
0x0000000000107804 : cmp eax, 0xfffff001 ; jae 0x107846 ; ret
0x0000000000107858 : cmp eax, 0xfffff001 ; jae 0x107867 ; ret
0x0000000000107894 : cmp eax, 0xfffff001 ; jae 0x1078d6 ; ret
0x00000000001078e8 : cmp eax, 0xfffff001 ; jae 0x1078f7 ; ret
0x0000000000107918 : cmp eax, 0xfffff001 ; jae 0x107927 ; ret
0x0000000000107954 : cmp eax, 0xfffff001 ; jae 0x107996 ; ret
0x00000000001079a8 : cmp eax, 0xfffff001 ; jae 0x1079b7 ; ret
0x00000000001079db : cmp eax, 0xfffff001 ; jae 0x1079ea ; ret
0x0000000000107a08 : cmp eax, 0xfffff001 ; jae 0x107a17 ; ret
0x0000000000107a38 : cmp eax, 0xfffff001 ; jae 0x107a47 ; ret
0x0000000000107a6b : cmp eax, 0xfffff001 ; jae 0x107a7a ; ret
0x0000000000107aa1 : cmp eax, 0xfffff001 ; jae 0x107ae0 ; ret
0x0000000000107af8 : cmp eax, 0xfffff001 ; jae 0x107b07 ; ret
0x0000000000107b2b : cmp eax, 0xfffff001 ; jae 0x107b3a ; ret
0x0000000000107b5b : cmp eax, 0xfffff001 ; jae 0x107b6a ; ret
0x0000000000107bb1 : cmp eax, 0xfffff001 ; jae 0x107bf0 ; ret
0x0000000000107c08 : cmp eax, 0xfffff001 ; jae 0x107c17 ; ret
0x0000000000107c41 : cmp eax, 0xfffff001 ; jae 0x107c80 ; ret
0x0000000000107c98 : cmp eax, 0xfffff001 ; jae 0x107ca7 ; ret
0x0000000000107cc8 : cmp eax, 0xfffff001 ; jae 0x107cd7 ; ret
0x0000000000107cfb : cmp eax, 0xfffff001 ; jae 0x107d0a ; ret
0x0000000000107d28 : cmp eax, 0xfffff001 ; jae 0x107d37 ; ret
0x0000000000107e24 : cmp eax, 0xfffff001 ; jae 0x107e66 ; ret
0x0000000000107e81 : cmp eax, 0xfffff001 ; jae 0x107ec0 ; ret
0x0000000000107fa1 : cmp eax, 0xfffff001 ; jae 0x107fe0 ; ret
0x0000000000108004 : cmp eax, 0xfffff001 ; jae 0x108046 ; ret
0x000000000010805b : cmp eax, 0xfffff001 ; jae 0x10806a ; ret
0x0000000000108088 : cmp eax, 0xfffff001 ; jae 0x108097 ; ret
0x00000000001080b8 : cmp eax, 0xfffff001 ; jae 0x1080c7 ; ret
0x00000000001080eb : cmp eax, 0xfffff001 ; jae 0x1080fa ; ret
0x0000000000108644 : cmp eax, 0xfffff001 ; jae 0x108686 ; ret
0x00000000001086a4 : cmp eax, 0xfffff001 ; jae 0x1086e6 ; ret
0x00000000001086f8 : cmp eax, 0xfffff001 ; jae 0x108707 ; ret
0x0000000000108728 : cmp eax, 0xfffff001 ; jae 0x108737 ; ret
0x0000000000108758 : cmp eax, 0xfffff001 ; jae 0x108767 ; ret
0x0000000000108788 : cmp eax, 0xfffff001 ; jae 0x108797 ; ret
0x00000000001087bb : cmp eax, 0xfffff001 ; jae 0x1087ca ; ret
0x00000000001087eb : cmp eax, 0xfffff001 ; jae 0x1087fa ; ret
0x0000000000108818 : cmp eax, 0xfffff001 ; jae 0x108827 ; ret
0x0000000000108848 : cmp eax, 0xfffff001 ; jae 0x108857 ; ret
0x0000000000108878 : cmp eax, 0xfffff001 ; jae 0x108887 ; ret
0x00000000001088a8 : cmp eax, 0xfffff001 ; jae 0x1088b7 ; ret
0x000000000013febb : cmp eax, 0xfffff001 ; jae 0x13feca ; ret
0x000000000013ff0b : cmp eax, 0xfffff001 ; jae 0x13ff1a ; ret
0x0000000000035598 : cmp eax, 0xfffff001 ; jae 0x355a7 ; ret
0x0000000000035c88 : cmp eax, 0xfffff001 ; jae 0x35c97 ; ret
0x0000000000046b52 : cmp eax, 0xfffff001 ; jae 0x46b65 ; xor eax, eax ; ret
0x000000000006c778 : cmp eax, 0xfffff001 ; jae 0x6c787 ; ret
0x000000000006c7ab : cmp eax, 0xfffff001 ; jae 0x6c7ba ; ret
0x00000000000bb248 : cmp eax, 0xfffff001 ; jae 0xbb257 ; ret
0x00000000000be208 : cmp eax, 0xfffff001 ; jae 0xbe217 ; ret
0x00000000000be238 : cmp eax, 0xfffff001 ; jae 0xbe247 ; ret
0x00000000000ca6f8 : cmp eax, 0xfffff001 ; jae 0xca707 ; ret
0x00000000000ca90b : cmp eax, 0xfffff001 ; jae 0xca91a ; ret
0x00000000000ca9e8 : cmp eax, 0xfffff001 ; jae 0xca9f7 ; ret
0x00000000000cabd1 : cmp eax, 0xfffff001 ; jae 0xcac10 ; ret
0x00000000000cac31 : cmp eax, 0xfffff001 ; jae 0xcac70 ; ret
0x00000000000cafc2 : cmp eax, 0xfffff001 ; jae 0xcafd1 ; ret
0x00000000000cb048 : cmp eax, 0xfffff001 ; jae 0xcb057 ; ret
0x00000000000cbb58 : cmp eax, 0xfffff001 ; jae 0xcbb67 ; ret
0x00000000000cbd18 : cmp eax, 0xfffff001 ; jae 0xcbd27 ; ret
0x00000000000cbd48 : cmp eax, 0xfffff001 ; jae 0xcbd57 ; ret
0x00000000000cbda8 : cmp eax, 0xfffff001 ; jae 0xcbdb7 ; ret
0x00000000000cbdd8 : cmp eax, 0xfffff001 ; jae 0xcbde7 ; ret
0x00000000000cbe08 : cmp eax, 0xfffff001 ; jae 0xcbe17 ; ret
0x00000000000cbe38 : cmp eax, 0xfffff001 ; jae 0xcbe47 ; ret
0x00000000000ea9b8 : cmp eax, 0xfffff001 ; jae 0xea9c7 ; ret
0x00000000000ea9e8 : cmp eax, 0xfffff001 ; jae 0xea9f7 ; ret
0x00000000000eaa18 : cmp eax, 0xfffff001 ; jae 0xeaa27 ; ret
0x00000000000eaa48 : cmp eax, 0xfffff001 ; jae 0xeaa57 ; ret
0x00000000000eaa78 : cmp eax, 0xfffff001 ; jae 0xeaa87 ; ret
0x00000000000eaaa8 : cmp eax, 0xfffff001 ; jae 0xeaab7 ; ret
0x00000000000eaad8 : cmp eax, 0xfffff001 ; jae 0xeaae7 ; ret
0x00000000000eab08 : cmp eax, 0xfffff001 ; jae 0xeab17 ; ret
0x00000000000f5d34 : cmp eax, 0xfffff001 ; jae 0xf5d76 ; ret
0x00000000000f5d94 : cmp eax, 0xfffff001 ; jae 0xf5dd6 ; ret
0x00000000000f6d55 : cmp eax, 0xfffff001 ; jae 0xf6d68 ; mov eax, edx ; ret
0x00000000000f6d78 : cmp eax, 0xfffff001 ; jae 0xf6d87 ; ret
0x00000000000f7018 : cmp eax, 0xfffff001 ; jae 0xf7027 ; ret
0x00000000000f7048 : cmp eax, 0xfffff001 ; jae 0xf7057 ; ret
0x00000000000f7118 : cmp eax, 0xfffff001 ; jae 0xf7127 ; ret
0x00000000000f7148 : cmp eax, 0xfffff001 ; jae 0xf7157 ; ret
0x00000000000f7208 : cmp eax, 0xfffff001 ; jae 0xf7217 ; ret
0x00000000000f7238 : cmp eax, 0xfffff001 ; jae 0xf7247 ; ret
0x00000000000f7271 : cmp eax, 0xfffff001 ; jae 0xf72b0 ; ret
0x00000000000f7481 : cmp eax, 0xfffff001 ; jae 0xf74c0 ; ret
0x00000000000f74e1 : cmp eax, 0xfffff001 ; jae 0xf7520 ; ret
0x00000000000f7538 : cmp eax, 0xfffff001 ; jae 0xf7547 ; ret
0x00000000000f79c8 : cmp eax, 0xfffff001 ; jae 0xf79d7 ; ret
0x00000000000f7b11 : cmp eax, 0xfffff001 ; jae 0xf7b50 ; ret
0x00000000000f7b68 : cmp eax, 0xfffff001 ; jae 0xf7b77 ; ret
0x00000000000f7b98 : cmp eax, 0xfffff001 ; jae 0xf7ba7 ; ret
0x00000000000f7bc8 : cmp eax, 0xfffff001 ; jae 0xf7bd7 ; ret
0x00000000000f7bf8 : cmp eax, 0xfffff001 ; jae 0xf7c07 ; ret
0x00000000000f7c28 : cmp eax, 0xfffff001 ; jae 0xf7c37 ; ret
0x00000000000f7c61 : cmp eax, 0xfffff001 ; jae 0xf7ca0 ; ret
0x00000000000f7cb8 : cmp eax, 0xfffff001 ; jae 0xf7cc7 ; ret
0x00000000000f7ce8 : cmp eax, 0xfffff001 ; jae 0xf7cf7 ; ret
0x00000000000f84d8 : cmp eax, 0xfffff001 ; jae 0xf84e7 ; ret
0x00000000000f8508 : cmp eax, 0xfffff001 ; jae 0xf8517 ; ret
0x00000000000f8538 : cmp eax, 0xfffff001 ; jae 0xf8547 ; ret
0x00000000000f856b : cmp eax, 0xfffff001 ; jae 0xf857a ; ret
0x00000000000f8b28 : cmp eax, 0xfffff001 ; jae 0xf8b37 ; ret
0x00000000000f8b5b : cmp eax, 0xfffff001 ; jae 0xf8b6a ; ret
0x00000000000f8b88 : cmp eax, 0xfffff001 ; jae 0xf8b97 ; ret
0x00000000000f8bb8 : cmp eax, 0xfffff001 ; jae 0xf8bc7 ; ret
0x00000000000f8be8 : cmp eax, 0xfffff001 ; jae 0xf8bf7 ; ret
0x00000000000f8c1b : cmp eax, 0xfffff001 ; jae 0xf8c2a ; ret
0x00000000000f8c48 : cmp eax, 0xfffff001 ; jae 0xf8c57 ; ret
0x00000000000f8c78 : cmp eax, 0xfffff001 ; jae 0xf8c87 ; ret
0x00000000000f8ca8 : cmp eax, 0xfffff001 ; jae 0xf8cb7 ; ret
0x00000000000fb8c1 : cmp eax, 0xfffff001 ; jae 0xfb900 ; ret
0x00000000000fbbfb : cmp eax, 0xfffff001 ; jae 0xfbc0a ; ret
0x00000000000fc374 : cmp eax, 0xfffff001 ; jae 0xfc3b6 ; ret
0x00000000000fcae8 : cmp eax, 0xfffff001 ; jae 0xfcaf7 ; ret
0x00000000000fcb18 : cmp eax, 0xfffff001 ; jae 0xfcb27 ; ret
0x00000000000fcb48 : cmp eax, 0xfffff001 ; jae 0xfcb57 ; ret
0x00000000000fcef8 : cmp eax, 0xfffff001 ; jae 0xfcf07 ; ret
0x00000000000fd0b8 : cmp eax, 0xfffff001 ; jae 0xfd0c7 ; ret
0x00000000000fd0f1 : cmp eax, 0xfffff001 ; jae 0xfd130 ; ret
0x00000000000fd151 : cmp eax, 0xfffff001 ; jae 0xfd190 ; ret
0x00000000000fd648 : cmp eax, 0xfffff001 ; jae 0xfd657 ; ret
0x00000000000fd6e8 : cmp eax, 0xfffff001 ; jae 0xfd6f7 ; ret
0x00000000000fd724 : cmp eax, 0xfffff001 ; jae 0xfd766 ; ret
0x00000000000fd878 : cmp eax, 0xfffff001 ; jae 0xfd887 ; ret
0x00000000000fd8a8 : cmp eax, 0xfffff001 ; jae 0xfd8b7 ; ret
0x00000000000fd8e1 : cmp eax, 0xfffff001 ; jae 0xfd920 ; ret
0x00000000000fd938 : cmp eax, 0xfffff001 ; jae 0xfd947 ; ret
0x00000000000fd971 : cmp eax, 0xfffff001 ; jae 0xfd9b0 ; ret
0x00000000000fd9c8 : cmp eax, 0xfffff001 ; jae 0xfd9d7 ; ret
0x00000000000fdcb8 : cmp eax, 0xfffff001 ; jae 0xfdcc7 ; ret
0x00000000000fdce8 : cmp eax, 0xfffff001 ; jae 0xfdcf7 ; ret
0x00000000000fdd18 : cmp eax, 0xfffff001 ; jae 0xfdd27 ; ret
0x00000000000ff228 : cmp eax, 0xfffff001 ; jae 0xff237 ; ret
0x00000000000ff258 : cmp eax, 0xfffff001 ; jae 0xff267 ; ret
0x000000000011563f : cmp eax, 0xfffffe8c ; call rax
0x0000000000096dfa : cmp eax, 1 ; ja 0x96de1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a141 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000d7f6e : cmp eax, 3 ; je 0xd7f88 ; xor eax, eax ; pop rbx ; ret
0x0000000000114caa : cmp eax, 4 ; je 0x114cb5 ; ret
0x00000000000ec9a7 : cmp eax, 4 ; sete r10b ; jmp 0xec959
0x000000000013bf15 : cmp eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3eb9 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000007a5d5 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x7a5e8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000103c21 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000000aaa4e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xaab49 ; ret
0x00000000000aaa63 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xaab49 ; ret
0x00000000000aaa78 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xaab49 ; ret
0x00000000000aaa93 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xaab49 ; ret
0x00000000000aaaae : cmp eax, dword ptr [rsi + 0x20] ; jne 0xaab49 ; ret
0x00000000000aaac3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xaab45 ; ret
0x00000000000aaad8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xaab45 ; ret
0x00000000000aaae3 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xaab45 ; ret
0x00000000000aaafe : cmp eax, dword ptr [rsi + 0x30] ; jne 0xaab45 ; ret
0x00000000000aab13 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xaab45 ; ret
0x00000000000aab28 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xaab45 ; ret
0x00000000000aab33 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xaab45 ; ret
0x00000000000aaa33 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xaab49 ; ret
0x00000000000aaa03 : cmp eax, dword ptr [rsi + 4] ; jne 0xaab49 ; ret
0x00000000000aaa18 : cmp eax, dword ptr [rsi + 8] ; jne 0xaab49 ; ret
0x000000000017204a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x172189 ; ret
0x0000000000172063 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x172189 ; ret
0x0000000000172173 : cmp eax, dword ptr [rsi - 4] ; jne 0x172187 ; xor eax, eax ; ret
0x0000000000172093 : cmp eax, dword ptr [rsi - 4] ; jne 0x172189 ; ret
0x0000000000172078 : cmp eax, dword ptr [rsi - 8] ; jne 0x172189 ; ret
0x00000000000aa9ed : cmp eax, dword ptr [rsi] ; jne 0xaab48 ; ret
0x0000000000100e81 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfd148
0x000000000007d9e9 : cmp eax, ecx ; jae 0x7da17 ; movzx eax, byte ptr [rax] ; ret
0x000000000009f1bd : cmp eax, ecx ; je 0x9f1a5 ; ret
0x0000000000003aab : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000171b63 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001bb689 : cmp eax, edi ; call rbx
0x0000000000137951 : cmp eax, edx ; je 0x137968 ; add rsp, 8 ; ret
0x00000000000470a5 : cmp eax, edx ; jne 0x4709e ; xor eax, eax ; ret
0x0000000000186fb5 : cmp eax, esi ; call rax
0x000000000010e529 : cmp eax, esi ; jb 0x10e541 ; mov eax, 1 ; ret
0x00000000000db038 : cmp eax, esi ; jge 0xdb015 ; mov edx, eax ; jmp 0xdb01e
0x00000000000d7dfe : cmp ebp, eax ; jle 0xd7db2 ; cmp r9b, r11b ; jne 0xd7dd1 ; jmp 0xd7dc0
0x000000000012e865 : cmp ebp, eax ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000006326e : cmp ebp, eax ; ret 0xfffb
0x00000000001a3eb9 : cmp ebp, ebp ; jmp qword ptr [rbx]
0x00000000000f6c6c : cmp ebp, esi ; ja 0xf6c06 ; pop rbx ; pop rbp ; ret
0x0000000000114c46 : cmp ebx, 0xa ; je 0x114c51 ; ret
0x000000000017338a : cmp ebx, ebp ; jae 0x17339d ; call qword ptr [rbx]
0x000000000017338a : cmp ebx, ebp ; jae 0x1733a1 ; call qword ptr [rbx]
0x00000000001733b9 : cmp ebx, ebp ; jb 0x1733b3 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000047b8c : cmp ecx, 0xff ; jne 0x47b89 ; mov rax, rdx ; ret
0x0000000000078df4 : cmp ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000f1a85 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x4276
0x00000000000ab742 : cmp ecx, dword ptr [rax + rax] ; ret
0x000000000017310b : cmp ecx, dword ptr [rax - 0x75] ; imul ebx, dword ptr [rax], -0x18 ; stosd dword ptr [rdi], eax ; ret
0x0000000000025429 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000084530 : cmp ecx, dword ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000013e335 : cmp ecx, dword ptr [rcx + 0x39] ; ror byte ptr [rdi], 0x82 ; ret
0x00000000000bb3f2 : cmp ecx, dword ptr [rdi] ; int1 ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007638e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016f25b : cmp ecx, eax ; jne 0x16f289 ; xor eax, eax ; ret
0x000000000017009b : cmp ecx, eax ; jne 0x1700c9 ; xor eax, eax ; ret
0x00000000001700cf : cmp ecx, eax ; jne 0x1700dc ; xor eax, eax ; ret
0x000000000001f5b0 : cmp ecx, eax ; mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f58f
0x000000000013b5c5 : cmp ecx, edx ; jae 0x13b5d4 ; ret
0x000000000013b605 : cmp ecx, edx ; jae 0x13b614 ; ret
0x000000000009f16c : cmp ecx, edx ; je 0x9f165 ; ret
0x0000000000123e12 : cmp ecx, edx ; jne 0x123df1 ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000ab037 : cmp ecx, edx ; jne 0xab027 ; sub eax, r8d ; ret
0x000000000009f168 : cmp ecx, esi ; je 0x9f169 ; cmp ecx, edx ; je 0x9f169 ; ret
0x000000000007cd3a : cmp ecx, esi ; jne 0x7cd37 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000abae9 : cmp edi, 0x7f ; ja 0xabaff ; mov eax, edi ; ret
0x0000000000095c77 : cmp edi, 0xd ; je 0x95c91 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000001735c8 : cmp edi, 1 ; ja 0x1735d5 ; ret
0x000000000010a215 : cmp edi, 9 ; setbe al ; ret
0x00000000000494ea : cmp edi, eax ; jbe 0x494e8 ; nop ; pop rbx ; ret
0x000000000004f755 : cmp edi, ecx ; ja 0x4f73f ; mov eax, r8d ; ret
0x00000000001267ca : cmp edi, edx ; jg 0x126786 ; mov byte ptr [r11], 0 ; ret
0x0000000000105ea5 : cmp edi, edx ; jne 0x105ea0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f6ca0 : cmp edi, esi ; ja 0xf6c95 ; ret
0x0000000000196a29 : cmp edi, esp ; call qword ptr [rax]
0x00000000001968ed : cmp edi, esp ; call rdx
0x00000000001968e9 : cmp edi, esp ; inc dword ptr [rdx + 0x3b] ; cld ; call rdx
0x000000000019686d : cmp edi, esp ; jmp rsi
0x00000000001267c9 : cmp edi, r10d ; jg 0x126787 ; mov byte ptr [r11], 0 ; ret
0x00000000000cbac8 : cmp edx, 0 ; mov eax, edx ; jle 0xcbae0 ; ret
0x000000000011913f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x000000000003a7f0 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x000000000006f946 : cmp edx, 0xff ; mov rax, rdx ; je 0x6f9a1 ; pop rbx ; ret
0x0000000000078486 : cmp edx, 0xff ; mov rax, rdx ; je 0x784e1 ; pop rbx ; ret
0x00000000000d0016 : cmp edx, 1 ; sete al ; ret
0x000000000002dedb : cmp edx, dword ptr [rdi + 4] ; jb 0x2deee ; ret
0x0000000000114f02 : cmp edx, eax ; jne 0x114ee5 ; ret
0x00000000000888bb : cmp edx, eax ; jne 0x88861 ; xor eax, eax ; pop rbx ; ret
0x0000000000123d40 : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000197e81 : cmp edx, ebp ; jmp rsp
0x000000000013b4a5 : cmp edx, ecx ; je 0x13b4bd ; ret
0x000000000009f148 : cmp edx, ecx ; je 0x9f145 ; ret
0x000000000008f2bc : cmp edx, ecx ; jne 0x8f2a5 ; ret
0x00000000000cc39b : cmp edx, ecx ; jne 0xcc3d5 ; ret
0x00000000001145fa : cmp edx, edi ; setae al ; ret
0x0000000000124776 : cmp edx, esi ; jb 0x12476d ; mov eax, 0xffffffff ; ret
0x00000000000ac9ca : cmp edx, esi ; jne 0xac9c5 ; ret
0x00000000000c6190 : cmp esi, 1 ; je 0xc61a7 ; xor eax, eax ; ret
0x0000000000078968 : cmp esi, 2 ; je 0x78980 ; mov dword ptr [rdi], edx ; ret
0x000000000012e81a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12e811 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001a8e29 : cmp esi, eax ; call qword ptr [rax]
0x00000000001a8e41 : cmp esi, eax ; call qword ptr [rdx]
0x00000000001a8e11 : cmp esi, eax ; jmp qword ptr [rax]
0x000000000001f8f7 : cmp esi, eax ; mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f90f
0x0000000000184884 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000007418a : cmp esi, ecx ; jb 0x74187 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014a1a8 : cmp esi, ecx ; jle 0x14a0ed ; ret
0x000000000009436c : cmp esi, ecx ; jne 0x9435e ; xor eax, eax ; ret
0x00000000000ab8a4 : cmp esi, edi ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x000000000004960b : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x00000000001247ee : cmp esi, edx ; ja 0x1247dd ; mov eax, 0xffffffff ; ret
0x00000000000fcfb4 : cmp esi, edx ; ja 0xfcfe5 ; ret
0x0000000000047235 : cmp esi, edx ; jne 0x4722e ; xor eax, eax ; ret
0x0000000000035163 : cmp qword ptr [r8], rax ; test eax, eax ; jne 0x35178 ; ret
0x0000000000073e97 : cmp qword ptr [rax + 0x30], 0 ; je 0x73ea7 ; ret
0x0000000000078853 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007c240 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7c257 ; ret
0x0000000000114597 : cmp qword ptr [rdi], 0 ; je 0x1145af ; ret
0x00000000001025ab : cmp qword ptr [rsi], 0 ; je 0x1025bf ; ret
0x000000000008b3b2 : cmp r10b, 3 ; je 0x8b3e0 ; movsx eax, dl ; ret
0x000000000008b3b2 : cmp r10b, 3 ; je 0x8b3e1 ; movsx eax, dl ; ret
0x00000000000e3289 : cmp r11b, r13b ; ret
0x0000000000094bda : cmp r11b, r14b ; ret
0x0000000000114c45 : cmp r11d, 0xa ; je 0x114c52 ; ret
0x000000000009f1bc : cmp r8d, ecx ; je 0x9f1a6 ; ret
0x00000000000db037 : cmp r8d, esi ; jge 0xdb016 ; mov edx, eax ; jmp 0xdb01f
0x00000000000d7e02 : cmp r9b, r11b ; jne 0xd7dcd ; jmp 0xd7dbc
0x00000000000e0931 : cmp r9b, r13b ; ret 0xfffc
0x0000000000105351 : cmp rax, -0x1000 ; ja 0x105369 ; ret
0x00000000001070c0 : cmp rax, -0x1000 ; ja 0x1070d8 ; ret
0x0000000000107182 : cmp rax, -0x1000 ; ja 0x107199 ; ret
0x00000000001071bc : cmp rax, -0x1000 ; ja 0x1071d9 ; ret
0x0000000000107d6d : cmp rax, -0x1000 ; ja 0x107d88 ; ret
0x0000000000107eed : cmp rax, -0x1000 ; ja 0x107f08 ; ret
0x0000000000108387 : cmp rax, -0x1000 ; ja 0x108398 ; ret
0x0000000000108429 : cmp rax, -0x1000 ; ja 0x108440 ; ret
0x00000000001084d9 : cmp rax, -0x1000 ; ja 0x1084f0 ; ret
0x000000000011534a : cmp rax, -0x1000 ; ja 0x115361 ; ret
0x00000000001153c7 : cmp rax, -0x1000 ; ja 0x1153f3 ; ret
0x00000000001172cc : cmp rax, -0x1000 ; ja 0x1172e9 ; ret
0x000000000011737c : cmp rax, -0x1000 ; ja 0x117399 ; ret
0x0000000000035267 : cmp rax, -0x1000 ; ja 0x35299 ; ret
0x0000000000035560 : cmp rax, -0x1000 ; ja 0x35579 ; ret
0x00000000000355cc : cmp rax, -0x1000 ; ja 0x355e9 ; ret
0x0000000000035616 : cmp rax, -0x1000 ; ja 0x35628 ; ret
0x000000000003569c : cmp rax, -0x1000 ; ja 0x356b9 ; ret
0x00000000000c7f81 : cmp rax, -0x1000 ; ja 0xc7f98 ; ret
0x00000000000ca7a0 : cmp rax, -0x1000 ; ja 0xca7b8 ; ret
0x00000000000ca84a : cmp rax, -0x1000 ; ja 0xca860 ; ret
0x00000000000ca94b : cmp rax, -0x1000 ; ja 0xca960 ; ret
0x00000000000cbb93 : cmp rax, -0x1000 ; ja 0xcbba8 ; ret
0x00000000000cbc03 : cmp rax, -0x1000 ; ja 0xcbc18 ; ret
0x00000000000cbe77 : cmp rax, -0x1000 ; ja 0xcbe88 ; ret
0x00000000000cbef7 : cmp rax, -0x1000 ; ja 0xcbf08 ; ret
0x00000000000f6e15 : cmp rax, -0x1000 ; ja 0xf6e29 ; ret
0x00000000000f6e64 : cmp rax, -0x1000 ; ja 0xf6e79 ; ret
0x00000000000f6eb5 : cmp rax, -0x1000 ; ja 0xf6ec9 ; ret
0x00000000000f6f0d : cmp rax, -0x1000 ; ja 0xf6f29 ; ret
0x00000000000f6f71 : cmp rax, -0x1000 ; ja 0xf6f89 ; ret
0x00000000000f6fca : cmp rax, -0x1000 ; ja 0xf6fe1 ; ret
0x00000000000f71a9 : cmp rax, -0x1000 ; ja 0xf71c1 ; ret
0x00000000000f7310 : cmp rax, -0x1000 ; ja 0xf7329 ; ret
0x00000000000f7863 : cmp rax, -0x1000 ; ja 0xf78a9 ; ret
0x00000000000fbc32 : cmp rax, -0x1000 ; ja 0xfbc49 ; ret
0x00000000000fbc86 : cmp rax, -0x1000 ; ja 0xfbc99 ; ret
0x00000000000fc3da : cmp rax, -0x1000 ; ja 0xfc3f0 ; ret
0x00000000000fc91e : cmp rax, -0x1000 ; ja 0xfc938 ; ret
0x00000000000fd1ba : cmp rax, -0x1000 ; ja 0xfd1d0 ; ret
0x00000000000fd26a : cmp rax, -0x1000 ; ja 0xfd280 ; ret
0x00000000000fd315 : cmp rax, -0x1000 ; ja 0xfd328 ; ret
0x00000000000fd385 : cmp rax, -0x1000 ; ja 0xfd398 ; ret
0x00000000000fd406 : cmp rax, -0x1000 ; ja 0xfd418 ; ret
0x00000000000fd4b6 : cmp rax, -0x1000 ; ja 0xfd4c8 ; ret
0x00000000000fda06 : cmp rax, -0x1000 ; ja 0xfda19 ; ret
0x00000000000ff067 : cmp rax, -0x1000 ; ja 0xff081 ; ret
0x00000000000ff0fb : cmp rax, -0x1000 ; ja 0xff111 ; ret
0x00000000000ff19b : cmp rax, -0x1000 ; ja 0xff1b1 ; ret
0x00000000000ff1ef : cmp rax, -0x1000 ; ja 0xff209 ; ret
0x00000000001015a9 : cmp rax, -0xfff ; jae 0x1015ba ; ret
0x000000000010172a : cmp rax, -0xfff ; jae 0x10173b ; ret
0x0000000000101757 : cmp rax, -0xfff ; jae 0x101768 ; ret
0x0000000000101787 : cmp rax, -0xfff ; jae 0x101798 ; ret
0x00000000001017c0 : cmp rax, -0xfff ; jae 0x101801 ; ret
0x0000000000101817 : cmp rax, -0xfff ; jae 0x101828 ; ret
0x0000000000101847 : cmp rax, -0xfff ; jae 0x101858 ; ret
0x000000000010187a : cmp rax, -0xfff ; jae 0x10188b ; ret
0x00000000001018a7 : cmp rax, -0xfff ; jae 0x1018b8 ; ret
0x00000000001018d7 : cmp rax, -0xfff ; jae 0x1018e8 ; ret
0x0000000000101907 : cmp rax, -0xfff ; jae 0x101918 ; ret
0x0000000000101937 : cmp rax, -0xfff ; jae 0x101948 ; ret
0x0000000000105c3a : cmp rax, -0xfff ; jae 0x105c4b ; ret
0x0000000000105c67 : cmp rax, -0xfff ; jae 0x105c78 ; ret
0x0000000000105c97 : cmp rax, -0xfff ; jae 0x105ca8 ; ret
0x0000000000105cca : cmp rax, -0xfff ; jae 0x105cdb ; ret
0x0000000000105cfa : cmp rax, -0xfff ; jae 0x105d0b ; ret
0x0000000000105d27 : cmp rax, -0xfff ; jae 0x105d38 ; ret
0x0000000000105d5a : cmp rax, -0xfff ; jae 0x105d6b ; ret
0x0000000000105d87 : cmp rax, -0xfff ; jae 0x105d98 ; ret
0x0000000000105db7 : cmp rax, -0xfff ; jae 0x105dc8 ; ret
0x0000000000105dea : cmp rax, -0xfff ; jae 0x105dfb ; ret
0x0000000000105e17 : cmp rax, -0xfff ; jae 0x105e28 ; ret
0x0000000000105e4a : cmp rax, -0xfff ; jae 0x105e5b ; ret
0x0000000000106db7 : cmp rax, -0xfff ; jae 0x106dc8 ; ret
0x0000000000106de7 : cmp rax, -0xfff ; jae 0x106df8 ; ret
0x0000000000106f20 : cmp rax, -0xfff ; jae 0x106f61 ; ret
0x0000000000106f87 : cmp rax, -0xfff ; jae 0x106f98 ; ret
0x0000000000106fb7 : cmp rax, -0xfff ; jae 0x106fc8 ; ret
0x0000000000106fe7 : cmp rax, -0xfff ; jae 0x106ff8 ; ret
0x0000000000107017 : cmp rax, -0xfff ; jae 0x107028 ; ret
0x000000000010724a : cmp rax, -0xfff ; jae 0x10725b ; ret
0x0000000000107277 : cmp rax, -0xfff ; jae 0x107288 ; ret
0x00000000001072a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00000000001072ea : cmp rax, -0xfff ; jae 0x1072fb ; ret
0x0000000000107317 : cmp rax, -0xfff ; jae 0x107328 ; ret
0x0000000000107347 : cmp rax, -0xfff ; jae 0x107358 ; ret
0x0000000000107377 : cmp rax, -0xfff ; jae 0x107388 ; ret
0x00000000001073a7 : cmp rax, -0xfff ; jae 0x1073b8 ; ret
0x00000000001073d7 : cmp rax, -0xfff ; jae 0x1073e8 ; ret
0x0000000000107407 : cmp rax, -0xfff ; jae 0x107418 ; ret
0x0000000000107437 : cmp rax, -0xfff ; jae 0x107448 ; ret
0x0000000000107467 : cmp rax, -0xfff ; jae 0x107478 ; ret
0x000000000010749a : cmp rax, -0xfff ; jae 0x1074ab ; ret
0x00000000001074d3 : cmp rax, -0xfff ; jae 0x107517 ; ret
0x0000000000107527 : cmp rax, -0xfff ; jae 0x107538 ; ret
0x000000000010755a : cmp rax, -0xfff ; jae 0x10756b ; ret
0x0000000000107587 : cmp rax, -0xfff ; jae 0x107598 ; ret
0x00000000001075b7 : cmp rax, -0xfff ; jae 0x1075c8 ; ret
0x00000000001075e7 : cmp rax, -0xfff ; jae 0x1075f8 ; ret
0x0000000000107617 : cmp rax, -0xfff ; jae 0x107628 ; ret
0x0000000000107647 : cmp rax, -0xfff ; jae 0x107658 ; ret
0x000000000010767a : cmp rax, -0xfff ; jae 0x10768b ; ret
0x00000000001076aa : cmp rax, -0xfff ; jae 0x1076bb ; ret
0x00000000001076d7 : cmp rax, -0xfff ; jae 0x1076e8 ; ret
0x0000000000107707 : cmp rax, -0xfff ; jae 0x107718 ; ret
0x0000000000107737 : cmp rax, -0xfff ; jae 0x107748 ; ret
0x000000000010776a : cmp rax, -0xfff ; jae 0x10777b ; ret
0x000000000010779a : cmp rax, -0xfff ; jae 0x1077ab ; ret
0x00000000001077ca : cmp rax, -0xfff ; jae 0x1077db ; ret
0x0000000000107803 : cmp rax, -0xfff ; jae 0x107847 ; ret
0x0000000000107857 : cmp rax, -0xfff ; jae 0x107868 ; ret
0x0000000000107893 : cmp rax, -0xfff ; jae 0x1078d7 ; ret
0x00000000001078e7 : cmp rax, -0xfff ; jae 0x1078f8 ; ret
0x0000000000107917 : cmp rax, -0xfff ; jae 0x107928 ; ret
0x0000000000107953 : cmp rax, -0xfff ; jae 0x107997 ; ret
0x00000000001079a7 : cmp rax, -0xfff ; jae 0x1079b8 ; ret
0x00000000001079da : cmp rax, -0xfff ; jae 0x1079eb ; ret
0x0000000000107a07 : cmp rax, -0xfff ; jae 0x107a18 ; ret
0x0000000000107a37 : cmp rax, -0xfff ; jae 0x107a48 ; ret
0x0000000000107a6a : cmp rax, -0xfff ; jae 0x107a7b ; ret
0x0000000000107aa0 : cmp rax, -0xfff ; jae 0x107ae1 ; ret
0x0000000000107af7 : cmp rax, -0xfff ; jae 0x107b08 ; ret
0x0000000000107b2a : cmp rax, -0xfff ; jae 0x107b3b ; ret
0x0000000000107b5a : cmp rax, -0xfff ; jae 0x107b6b ; ret
0x0000000000107bb0 : cmp rax, -0xfff ; jae 0x107bf1 ; ret
0x0000000000107c07 : cmp rax, -0xfff ; jae 0x107c18 ; ret
0x0000000000107c40 : cmp rax, -0xfff ; jae 0x107c81 ; ret
0x0000000000107c97 : cmp rax, -0xfff ; jae 0x107ca8 ; ret
0x0000000000107cc7 : cmp rax, -0xfff ; jae 0x107cd8 ; ret
0x0000000000107cfa : cmp rax, -0xfff ; jae 0x107d0b ; ret
0x0000000000107d27 : cmp rax, -0xfff ; jae 0x107d38 ; ret
0x0000000000107e23 : cmp rax, -0xfff ; jae 0x107e67 ; ret
0x0000000000107e80 : cmp rax, -0xfff ; jae 0x107ec1 ; ret
0x0000000000107fa0 : cmp rax, -0xfff ; jae 0x107fe1 ; ret
0x0000000000108003 : cmp rax, -0xfff ; jae 0x108047 ; ret
0x000000000010805a : cmp rax, -0xfff ; jae 0x10806b ; ret
0x0000000000108087 : cmp rax, -0xfff ; jae 0x108098 ; ret
0x00000000001080b7 : cmp rax, -0xfff ; jae 0x1080c8 ; ret
0x00000000001080ea : cmp rax, -0xfff ; jae 0x1080fb ; ret
0x0000000000108643 : cmp rax, -0xfff ; jae 0x108687 ; ret
0x00000000001086a3 : cmp rax, -0xfff ; jae 0x1086e7 ; ret
0x00000000001086f7 : cmp rax, -0xfff ; jae 0x108708 ; ret
0x0000000000108727 : cmp rax, -0xfff ; jae 0x108738 ; ret
0x0000000000108757 : cmp rax, -0xfff ; jae 0x108768 ; ret
0x0000000000108787 : cmp rax, -0xfff ; jae 0x108798 ; ret
0x00000000001087ba : cmp rax, -0xfff ; jae 0x1087cb ; ret
0x00000000001087ea : cmp rax, -0xfff ; jae 0x1087fb ; ret
0x0000000000108817 : cmp rax, -0xfff ; jae 0x108828 ; ret
0x0000000000108847 : cmp rax, -0xfff ; jae 0x108858 ; ret
0x0000000000108877 : cmp rax, -0xfff ; jae 0x108888 ; ret
0x00000000001088a7 : cmp rax, -0xfff ; jae 0x1088b8 ; ret
0x000000000013feba : cmp rax, -0xfff ; jae 0x13fecb ; ret
0x000000000013ff0a : cmp rax, -0xfff ; jae 0x13ff1b ; ret
0x0000000000035597 : cmp rax, -0xfff ; jae 0x355a8 ; ret
0x0000000000035c87 : cmp rax, -0xfff ; jae 0x35c98 ; ret
0x000000000006c777 : cmp rax, -0xfff ; jae 0x6c788 ; ret
0x000000000006c7aa : cmp rax, -0xfff ; jae 0x6c7bb ; ret
0x00000000000bb247 : cmp rax, -0xfff ; jae 0xbb258 ; ret
0x00000000000be207 : cmp rax, -0xfff ; jae 0xbe218 ; ret
0x00000000000be237 : cmp rax, -0xfff ; jae 0xbe248 ; ret
0x00000000000ca6f7 : cmp rax, -0xfff ; jae 0xca708 ; ret
0x00000000000ca90a : cmp rax, -0xfff ; jae 0xca91b ; ret
0x00000000000ca9e7 : cmp rax, -0xfff ; jae 0xca9f8 ; ret
0x00000000000cabd0 : cmp rax, -0xfff ; jae 0xcac11 ; ret
0x00000000000cac30 : cmp rax, -0xfff ; jae 0xcac71 ; ret
0x00000000000cb047 : cmp rax, -0xfff ; jae 0xcb058 ; ret
0x00000000000cbb57 : cmp rax, -0xfff ; jae 0xcbb68 ; ret
0x00000000000cbd17 : cmp rax, -0xfff ; jae 0xcbd28 ; ret
0x00000000000cbd47 : cmp rax, -0xfff ; jae 0xcbd58 ; ret
0x00000000000cbda7 : cmp rax, -0xfff ; jae 0xcbdb8 ; ret
0x00000000000cbdd7 : cmp rax, -0xfff ; jae 0xcbde8 ; ret
0x00000000000cbe07 : cmp rax, -0xfff ; jae 0xcbe18 ; ret
0x00000000000cbe37 : cmp rax, -0xfff ; jae 0xcbe48 ; ret
0x00000000000ea9b7 : cmp rax, -0xfff ; jae 0xea9c8 ; ret
0x00000000000ea9e7 : cmp rax, -0xfff ; jae 0xea9f8 ; ret
0x00000000000eaa17 : cmp rax, -0xfff ; jae 0xeaa28 ; ret
0x00000000000eaa47 : cmp rax, -0xfff ; jae 0xeaa58 ; ret
0x00000000000eaa77 : cmp rax, -0xfff ; jae 0xeaa88 ; ret
0x00000000000eaaa7 : cmp rax, -0xfff ; jae 0xeaab8 ; ret
0x00000000000eaad7 : cmp rax, -0xfff ; jae 0xeaae8 ; ret
0x00000000000eab07 : cmp rax, -0xfff ; jae 0xeab18 ; ret
0x00000000000f5d33 : cmp rax, -0xfff ; jae 0xf5d77 ; ret
0x00000000000f5d93 : cmp rax, -0xfff ; jae 0xf5dd7 ; ret
0x00000000000f6d77 : cmp rax, -0xfff ; jae 0xf6d88 ; ret
0x00000000000f7017 : cmp rax, -0xfff ; jae 0xf7028 ; ret
0x00000000000f7047 : cmp rax, -0xfff ; jae 0xf7058 ; ret
0x00000000000f7117 : cmp rax, -0xfff ; jae 0xf7128 ; ret
0x00000000000f7147 : cmp rax, -0xfff ; jae 0xf7158 ; ret
0x00000000000f7207 : cmp rax, -0xfff ; jae 0xf7218 ; ret
0x00000000000f7237 : cmp rax, -0xfff ; jae 0xf7248 ; ret
0x00000000000f7270 : cmp rax, -0xfff ; jae 0xf72b1 ; ret
0x00000000000f7480 : cmp rax, -0xfff ; jae 0xf74c1 ; ret
0x00000000000f74e0 : cmp rax, -0xfff ; jae 0xf7521 ; ret
0x00000000000f7537 : cmp rax, -0xfff ; jae 0xf7548 ; ret
0x00000000000f79c7 : cmp rax, -0xfff ; jae 0xf79d8 ; ret
0x00000000000f7b10 : cmp rax, -0xfff ; jae 0xf7b51 ; ret
0x00000000000f7b67 : cmp rax, -0xfff ; jae 0xf7b78 ; ret
0x00000000000f7b97 : cmp rax, -0xfff ; jae 0xf7ba8 ; ret
0x00000000000f7bc7 : cmp rax, -0xfff ; jae 0xf7bd8 ; ret
0x00000000000f7bf7 : cmp rax, -0xfff ; jae 0xf7c08 ; ret
0x00000000000f7c27 : cmp rax, -0xfff ; jae 0xf7c38 ; ret
0x00000000000f7c60 : cmp rax, -0xfff ; jae 0xf7ca1 ; ret
0x00000000000f7cb7 : cmp rax, -0xfff ; jae 0xf7cc8 ; ret
0x00000000000f7ce7 : cmp rax, -0xfff ; jae 0xf7cf8 ; ret
0x00000000000f84d7 : cmp rax, -0xfff ; jae 0xf84e8 ; ret
0x00000000000f8507 : cmp rax, -0xfff ; jae 0xf8518 ; ret
0x00000000000f8537 : cmp rax, -0xfff ; jae 0xf8548 ; ret
0x00000000000f856a : cmp rax, -0xfff ; jae 0xf857b ; ret
0x00000000000f8b27 : cmp rax, -0xfff ; jae 0xf8b38 ; ret
0x00000000000f8b5a : cmp rax, -0xfff ; jae 0xf8b6b ; ret
0x00000000000f8b87 : cmp rax, -0xfff ; jae 0xf8b98 ; ret
0x00000000000f8bb7 : cmp rax, -0xfff ; jae 0xf8bc8 ; ret
0x00000000000f8be7 : cmp rax, -0xfff ; jae 0xf8bf8 ; ret
0x00000000000f8c1a : cmp rax, -0xfff ; jae 0xf8c2b ; ret
0x00000000000f8c47 : cmp rax, -0xfff ; jae 0xf8c58 ; ret
0x00000000000f8c77 : cmp rax, -0xfff ; jae 0xf8c88 ; ret
0x00000000000f8ca7 : cmp rax, -0xfff ; jae 0xf8cb8 ; ret
0x00000000000fb8c0 : cmp rax, -0xfff ; jae 0xfb901 ; ret
0x00000000000fbbfa : cmp rax, -0xfff ; jae 0xfbc0b ; ret
0x00000000000fc373 : cmp rax, -0xfff ; jae 0xfc3b7 ; ret
0x00000000000fcae7 : cmp rax, -0xfff ; jae 0xfcaf8 ; ret
0x00000000000fcb17 : cmp rax, -0xfff ; jae 0xfcb28 ; ret
0x00000000000fcb47 : cmp rax, -0xfff ; jae 0xfcb58 ; ret
0x00000000000fcef7 : cmp rax, -0xfff ; jae 0xfcf08 ; ret
0x00000000000fd0b7 : cmp rax, -0xfff ; jae 0xfd0c8 ; ret
0x00000000000fd0f0 : cmp rax, -0xfff ; jae 0xfd131 ; ret
0x00000000000fd150 : cmp rax, -0xfff ; jae 0xfd191 ; ret
0x00000000000fd647 : cmp rax, -0xfff ; jae 0xfd658 ; ret
0x00000000000fd6e7 : cmp rax, -0xfff ; jae 0xfd6f8 ; ret
0x00000000000fd723 : cmp rax, -0xfff ; jae 0xfd767 ; ret
0x00000000000fd877 : cmp rax, -0xfff ; jae 0xfd888 ; ret
0x00000000000fd8a7 : cmp rax, -0xfff ; jae 0xfd8b8 ; ret
0x00000000000fd8e0 : cmp rax, -0xfff ; jae 0xfd921 ; ret
0x00000000000fd937 : cmp rax, -0xfff ; jae 0xfd948 ; ret
0x00000000000fd970 : cmp rax, -0xfff ; jae 0xfd9b1 ; ret
0x00000000000fd9c7 : cmp rax, -0xfff ; jae 0xfd9d8 ; ret
0x00000000000fdcb7 : cmp rax, -0xfff ; jae 0xfdcc8 ; ret
0x00000000000fdce7 : cmp rax, -0xfff ; jae 0xfdcf8 ; ret
0x00000000000fdd17 : cmp rax, -0xfff ; jae 0xfdd28 ; ret
0x00000000000ff227 : cmp rax, -0xfff ; jae 0xff238 ; ret
0x00000000000ff257 : cmp rax, -0xfff ; jae 0xff268 ; ret
0x000000000007a5d4 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x7a5e9 ; movzx eax, byte ptr [rax] ; ret
0x0000000000100e80 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfd149
0x000000000007d9e8 : cmp rax, rcx ; jae 0x7da18 ; movzx eax, byte ptr [rax] ; ret
0x0000000000137950 : cmp rax, rdx ; je 0x137969 ; add rsp, 8 ; ret
0x00000000000470a4 : cmp rax, rdx ; jne 0x4709f ; xor eax, eax ; ret
0x00000000000f6c6b : cmp rbp, rsi ; ja 0xf6c07 ; pop rbx ; pop rbp ; ret
0x0000000000173389 : cmp rbx, rbp ; jae 0x17339e ; call qword ptr [rbx]
0x0000000000173389 : cmp rbx, rbp ; jae 0x1733a2 ; call qword ptr [rbx]
0x00000000001733b8 : cmp rbx, rbp ; jb 0x1733b4 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000007638d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016f25a : cmp rcx, rax ; jne 0x16f28a ; xor eax, eax ; ret
0x000000000017009a : cmp rcx, rax ; jne 0x1700ca ; xor eax, eax ; ret
0x00000000000ab036 : cmp rcx, rdx ; jne 0xab028 ; sub eax, r8d ; ret
0x000000000007cd39 : cmp rcx, rsi ; jne 0x7cd38 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001735c7 : cmp rdi, 1 ; ja 0x1735d6 ; ret
0x00000000000494e9 : cmp rdi, r8 ; jbe 0x494e9 ; nop ; pop rbx ; ret
0x0000000000105ea4 : cmp rdi, rdx ; jne 0x105ea1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f6c9f : cmp rdi, rsi ; ja 0xf6c96 ; ret
0x0000000000114f01 : cmp rdx, rax ; jne 0x114ee6 ; ret
0x00000000000888ba : cmp rdx, rax ; jne 0x88862 ; xor eax, eax ; pop rbx ; ret
0x0000000000123d3f : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000013b4a4 : cmp rdx, rcx ; je 0x13b4be ; ret
0x000000000008f2bb : cmp rdx, rcx ; jne 0x8f2a6 ; ret
0x000000000008f2ba : cmp rdx, rcx ; jne 0x8f2a7 ; ret
0x00000000000cc39a : cmp rdx, rcx ; jne 0xcc3d6 ; ret
0x00000000001145f9 : cmp rdx, rdi ; setae al ; ret
0x0000000000074189 : cmp rsi, rcx ; jb 0x74188 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000009436b : cmp rsi, rcx ; jne 0x9435f ; xor eax, eax ; ret
0x00000000000fcfb3 : cmp rsi, rdx ; ja 0xfcfe6 ; ret
0x0000000000047234 : cmp rsi, rdx ; jne 0x4722f ; xor eax, eax ; ret
0x00000000000e30e1 : cmp sil, 0x11 ; je 0xe3123 ; mov rdx, rax ; jmp 0xe308a
0x0000000000110742 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000011076a : cmp sil, dl ; cmovne eax, ecx ; ret
0x00000000001b3bb0 : cmp sil, sil ; call qword ptr [rax]
0x00000000001871c0 : cmp spl, 0xff ; mov al, 0x81 ; cld ; jmp qword ptr [rax]
0x000000000014bd17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c017 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001982f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; call rsp
0x00000000001a6f75 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; pop rax ; out dx, al ; jmp rdx
0x00000000001a6ee5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; test al, 0x49 ; out dx, al ; jmp qword ptr [rax]
0x00000000000833f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000014cc17 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016ecd9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000e1107 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001895b1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rax]
0x000000000009f2d4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000147346 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c917 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c617 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000134404 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134443 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x000000000002de2e : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rdi ; cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x00000000001127d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff1
0x000000000000e708 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sldt word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000c2b9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ff715 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add al, ch ; ret 0xf782
0x0000000000075bf5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4803
0x000000000008e3a7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000030f01 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, 0xc4834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000a2410 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000019c3c1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cli ; call rsp
0x0000000000186360 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in eax, -0x13 ; call rsp
0x00000000001a7541 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, al ; call qword ptr [rax]
0x00000000001b6149 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000000038ae : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000103f0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, 0 ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rbx]
0x0000000000044b35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb al, 0x38 ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000038ad : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000173369 : cmpxchg dword ptr [rip + 0x253758], edx ; je 0x17337c ; ret
0x000000000003a493 : cqo ; idiv rsi ; ret
0x0000000000032577 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d90eb : cwde ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x000000000007a4cf : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bacfe : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x12], cl ; call r12
0x00000000000d90fa : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000009a353 : cwde ; add ecx, ebp ; ret
0x000000000008553b : cwde ; add rax, rdx ; jmp rax
0x00000000000c78e7 : cwde ; call r14
0x00000000001af988 : cwde ; clc ; hlt ; jmp qword ptr [rcx]
0x00000000001bbab8 : cwde ; clc ; jmp qword ptr [rcx]
0x00000000001b1048 : cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001bb688 : cwde ; cmp eax, edi ; call rbx
0x00000000001886e0 : cwde ; hlt ; jmp qword ptr [rax]
0x00000000001a4f58 : cwde ; je 0x1a4f4b ; call qword ptr [rsi]
0x0000000000186cf8 : cwde ; jno 0x186cec ; jmp qword ptr [rax]
0x00000000000fc34f : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000011f970 : cwde ; pop rbx ; mov eax, dword ptr [rdx + rax*8 + 4] ; ret
0x0000000000003ab1 : cwde ; ret
0x0000000000111cb4 : cwde ; ret 0xffff
0x00000000001ae638 : cwde ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000001b31d8 : cwde ; sbb esi, esi ; jmp qword ptr [rsi]
0x0000000000124a2e : cwde ; shr rax, 4 ; ret
0x00000000001ab2e8 : cwde ; stc ; int1 ; call qword ptr [rax]
0x0000000000072754 : cwde ; xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x726fd
0x00000000001ae4c8 : cwde ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000000a3959 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000a1941 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000a395a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a1942 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000012380f : dec byte ptr [rax + 0x63] ; ret 0x6948
0x0000000000123bd7 : dec byte ptr [rax + 1] ; jmp 0x123c2a
0x0000000000123bd6 : dec byte ptr [rax + 1] ; jmp 0x123c2b
0x0000000000087bb7 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000004960c : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x000000000008b69a : dec byte ptr [rax - 0x77] ; ret
0x0000000000088939 : dec byte ptr [rax - 0x77] ; ret 0x1ee8
0x000000000007ac5b : dec byte ptr [rax - 0x77] ; ret 0x8d48
0x00000000000889a6 : dec byte ptr [rax - 0x77] ; ret 0xb1e8
0x000000000007fe02 : dec byte ptr [rbp + 0x34] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000046598 : dec byte ptr [rcx + 0xfdb85f8] ; xchg eax, ebp ; ret 0xe8d1
0x000000000003902a : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000003bd86 : dec byte ptr [rcx + rcx*4 - 1] ; call 0x47fd6
0x00000000000d2c65 : dec byte ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000089674 : dec byte ptr [rcx - 0x7d] ; ret 0x4c01
0x000000000004b482 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x000000000005e67c : dec dword ptr [r8 + 0x39] ; ret
0x000000000009ef07 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x00000000000762b0 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a3ada : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a1a82 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000005cef8 : dec dword ptr [rax + 0x29] ; ret 0x8548
0x000000000003e061 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000007ff35 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x0000000000186db7 : dec dword ptr [rax + 0x2cffee72] ; je 0x186db5 ; jmp rsp
0x000000000005e67d : dec dword ptr [rax + 0x39] ; ret
0x0000000000121f2f : dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000002617b : dec dword ptr [rax + 0x39] ; ret 0xe675
0x0000000000028e82 : dec dword ptr [rax + 0x39] ; ret 0xe775
0x000000000004db30 : dec dword ptr [rax + 0x39] ; ror byte ptr [rdi], 1 ; sahf ; ret 0xca20
0x0000000000059665 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7b ; ret 0xffbe
0x00000000000bbc51 : dec dword ptr [rax + 0x63] ; les r9d, ptr [r8 + 1] ; ret
0x000000000005d8d3 : dec dword ptr [rax + 0x63] ; ret
0x00000000000ee120 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000d1cec : dec dword ptr [rax + 0x63] ; ret 0x9589
0x000000000005db95 : dec dword ptr [rax + 0x63] ; ret 0xb60f
0x000000000008d6a9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000128cdf : dec dword ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x000000000008f7e4 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003a7f2 : dec dword ptr [rax + 0xf] ; ret
0x0000000000087a51 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000006e122 : dec dword ptr [rax + 0xf] ; ret 0x8349
0x000000000006dff2 : dec dword ptr [rax + 0xf] ; ret 0x894c
0x0000000000079b4d : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000002dd69 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000055680 : dec dword ptr [rax + 1] ; ret
0x000000000013f492 : dec dword ptr [rax + 1] ; ret 0x348
0x0000000000186f6b : dec dword ptr [rax + rbp*8] ; out dx, eax ; call rsi
0x0000000000186f67 : dec dword ptr [rax - 0x16] ; out dx, eax ; dec dword ptr [rax + rbp*8] ; out dx, eax ; call rsi
0x000000000018635b : dec dword ptr [rax - 0x17] ; in eax, dx ; jmp qword ptr [rdi - 0x2b00121b]
0x0000000000035f13 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000186d37 : dec dword ptr [rax - 0x2f00118e] ; jno 0x186d35 ; call rax
0x0000000000186d9f : dec dword ptr [rax - 0x2f00118e] ; jno 0x186d9d ; call rax
0x000000000005d428 : dec dword ptr [rax - 0x39] ; ret
0x00000000000f6672 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000fc34d : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000fe6e4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000ab8a6 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x000000000009c698 : dec dword ptr [rax - 0x73] ; push rbx ; add dword ptr [rax + 0x39], ecx ; ret 0x974
0x00000000000df4fb : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x00000000000c74c6 : dec dword ptr [rax - 0x75] ; and al, 8 ; call rax
0x000000000013bc35 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000102b9d : dec dword ptr [rax - 0x75] ; jge 0x102ba7 ; call rbx
0x0000000000102e50 : dec dword ptr [rax - 0x75] ; jge 0x102e5a ; call rbx
0x000000000018b70f : dec dword ptr [rax - 0x7700059d] ; movsxd rdi, edx ; jmp rax
0x000000000008f488 : dec dword ptr [rax - 0x77] ; clc ; ret
0x000000000012380c : dec dword ptr [rax - 0x77] ; dec byte ptr [rax + 0x63] ; ret 0x6948
0x00000000000fd066 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000012ad4c : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000013b68c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000139f19 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000010da17 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000009bd88 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000f9af4 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x000000000002adf5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xff46
0x00000000001723ba : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000133830 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x0000000000022a6a : dec dword ptr [rax - 0x77] ; ret
0x00000000000217ba : dec dword ptr [rax - 0x77] ; ret 0x13e9
0x00000000000fceb3 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fcfa1 : dec dword ptr [rax - 0x77] ; ret 0x1977
0x000000000004d21e : dec dword ptr [rax - 0x77] ; ret 0x1beb
0x00000000000ce201 : dec dword ptr [rax - 0x77] ; ret 0x1c73
0x0000000000082bf0 : dec dword ptr [rax - 0x77] ; ret 0x2b48
0x000000000005d3e6 : dec dword ptr [rax - 0x77] ; ret 0x2ce9
0x0000000000065393 : dec dword ptr [rax - 0x77] ; ret 0x348
0x000000000007841a : dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000083366 : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000cfd16 : dec dword ptr [rax - 0x77] ; ret 0x4164
0x000000000002179e : dec dword ptr [rax - 0x77] ; ret 0x4be9
0x00000000000568fc : dec dword ptr [rax - 0x77] ; ret 0x51ff
0x000000000002f97d : dec dword ptr [rax - 0x77] ; ret 0x57e9
0x000000000005c9b4 : dec dword ptr [rax - 0x77] ; ret 0x5de9
0x00000000000ccf34 : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x00000000000fc80e : dec dword ptr [rax - 0x77] ; ret 0x7c77
0x000000000013f73a : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f3d9 : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000ffb54 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000096e47 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000111f76 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x000000000004aa69 : dec dword ptr [rax - 0x77] ; ret 0x8d0f
0x0000000000134406 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000ce9fd : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000007bd72 : dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x000000000006c37f : dec dword ptr [rax - 0x77] ; ret 0x9de9
0x000000000006c377 : dec dword ptr [rax - 0x77] ; ret 0xa5e9
0x00000000001427e6 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000c837c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x0000000000134445 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000000956b1 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dbfac : dec dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000d5664 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000002f9e3 : dec dword ptr [rax - 0x77] ; ret 0xd1e9
0x000000000012e86a : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000006f948 : dec dword ptr [rax - 0x77] ; sal byte ptr [rdx + rcx*2 + 0x5b], 1 ; ret
0x0000000000087345 : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000000000bb15c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000001155cf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000d8cc1 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000011da4c : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000000000010ff50 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000f46f5 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rsi*4 + 0x48], 0x89 ; ret
0x0000000000041ac8 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rbx*8 + 0x44], 9 ; ret 0x8941
0x0000000000105a34 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x39 ; ret
0x0000000000095960 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000013fac6 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000013f736 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000013c376 : dec dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000098b7c : dec dword ptr [rax - 0x7d] ; jge 0x98b19 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5f2a : dec dword ptr [rax - 0x7d] ; jge 0xb5edf ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000083782 : dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x0000000000031353 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000e7690 : dec dword ptr [rax - 0x7d] ; ret 0x4104
0x0000000000065560 : dec dword ptr [rax - 0x7d] ; ret 0x4404
0x0000000000025dd6 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d71e1 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000008419a : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x000000000002616f : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000bdf5c : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x00000000000d4d29 : dec dword ptr [rax - 0x7d] ; ret 0x4c01
0x000000000005cfe0 : dec dword ptr [rax - 0x7d] ; ret 0x8001
0x000000000006018a : dec dword ptr [rax - 0x7d] ; ret 0x8504
0x00000000000ce329 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000000000005f23c : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000ce310 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000005f138 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000060ec5 : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000006af2f : dec dword ptr [rax - 0x7d] ; ror byte ptr [rax], 0xeb ; ret
0x0000000000077ea8 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a11c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000186f4b : dec dword ptr [rax] ; out -0x11, eax ; call rax
0x0000000000111c51 : dec dword ptr [rbp + 0x63] ; in eax, dx ; call 0x10df56
0x00000000000f90d3 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000008032d : dec dword ptr [rbp + rcx*4 + 0x25] ; or dword ptr [rdi], 0x11 ; add cl, ch ; ret 0xfffc
0x0000000000137710 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x00000000000bb652 : dec dword ptr [rbp + rcx*4 + 0x7d] ; ret 0x8d48
0x000000000019b3ab : dec dword ptr [rbp + rdx*8 + 0x3d340001] ; clc ; call rsp
0x00000000000d1204 : dec dword ptr [rbp - 0x73] ; add al, 0xe8 ; ret 0xf5cc
0x0000000000103056 : dec dword ptr [rbp - 0x75] ; add byte ptr [r9 + 0xf], r8b ; lahf ; ret 0x8545
0x000000000009980b : dec dword ptr [rbp - 0x77] ; ret
0x00000000000ee9d6 : dec dword ptr [rbp - 0x77] ; ret 0x8b48
0x00000000000493c3 : dec dword ptr [rbp - 0x77] ; ret 0xf66
0x00000000000da458 : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x00000000000dd6fe : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014311d : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000001983ab : dec dword ptr [rbx + rbp*4 + 0x79f40000] ; in eax, dx ; call rsp
0x00000000000d41f8 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x00000000000bdc26 : dec dword ptr [rbx + rcx*4 + 0xd] ; ret 0x3091
0x000000000019b373 : dec dword ptr [rbx + rdx*8 + 0x33b40001] ; clc ; call rsp
0x00000000001745b3 : dec dword ptr [rbx + rdx*8 - 0x16] ; push qword ptr [rbx + rdx*8 - 0x16] ; jmp rsp
0x000000000005d116 : dec dword ptr [rbx - 0x1df7b] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000060184 : dec dword ptr [rbx - 0x1df7b] ; dec dword ptr [rax - 0x7d] ; ret 0x8504
0x00000000000622d7 : dec dword ptr [rbx - 0x1ef6b] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195f2b : dec dword ptr [rbx - 0x6d] ; std ; call rax
0x00000000000f16a6 : dec dword ptr [rbx - 0x76a3dbbc] ; ret 0xc085
0x00000000000f0710 : dec dword ptr [rbx - 0x76c3dbbc] ; ret
0x0000000000188033 : dec dword ptr [rbx] ; mov eax, 0xa30afff3 ; jmp qword ptr [rax]
0x000000000010ca7b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006e7c2 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000003332e : dec dword ptr [rcx + 0x63] ; cmp al, 0xb8 ; add rdi, r8 ; jmp rdi
0x000000000003101a : dec dword ptr [rcx + 1] ; ret 0x8b48
0x000000000009cad6 : dec dword ptr [rcx + 1] ; ret 0xd231
0x000000000002cabd : dec dword ptr [rcx + 1] ; ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x00000000000d58d4 : dec dword ptr [rcx + rax - 0x3e] ; jmp 0xd58ec
0x000000000019ba23 : dec dword ptr [rcx + rcx + 0x6fc40002] ; stc ; call rsp
0x000000000019c3bb : dec dword ptr [rcx + rcx*2 - 0x58cbfffe] ; cli ; call rsp
0x000000000003bc7f : dec dword ptr [rcx + rcx*4 + 4] ; and al, 0xe8 ; ret
0x0000000000111c7f : dec dword ptr [rcx + rcx*4 - 0x19] ; call 0x10df56
0x000000000013b7b6 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x0000000000133295 : dec dword ptr [rcx + rcx*4 - 9] ; call 0x1f4c6
0x000000000019b1eb : dec dword ptr [rcx + rcx*8 + 0xb140001] ; clc ; jmp rsp
0x00000000000618a6 : dec dword ptr [rcx - 0x20f63] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001889af : dec dword ptr [rcx - 0x29000bb8] ; hlt ; jmp rdi
0x000000000018826b : dec dword ptr [rcx - 0x4b] ; call qword ptr [rcx]
0x0000000000185e93 : dec dword ptr [rcx - 0x500012b4] ; push rsp ; in eax, dx ; call qword ptr [rcx]
0x00000000000f97a3 : dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000001029d5 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102e5e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102a68 : dec dword ptr [rcx - 0x75] ; jge 0x102a72 ; call rbx
0x0000000000102b8f : dec dword ptr [rcx - 0x75] ; jge 0x102b99 ; call rbx
0x0000000000102cd2 : dec dword ptr [rcx - 0x75] ; jge 0x102cdc ; call rbx
0x0000000000102e42 : dec dword ptr [rcx - 0x75] ; jge 0x102e4c ; call rbx
0x00000000001731b8 : dec dword ptr [rcx - 0x75] ; jge 0x1731e4 ; call 0x1f4c7
0x000000000010f100 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000ef55c : dec dword ptr [rcx - 0x75] ; push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001426ae : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000001889ab : dec dword ptr [rcx - 0x76000bb8] ; hlt ; call rsi
0x0000000000188ac7 : dec dword ptr [rcx - 0x76000bb8] ; hlt ; jmp qword ptr [rax]
0x000000000009ef08 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000060fba : dec dword ptr [rcx - 0x77] ; add byte ptr [r8 + 1], r9b ; ret 0xae9
0x000000000005b903 : dec dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x77] ; ret 0x8b48
0x000000000003ffca : dec dword ptr [rcx - 0x77] ; ret
0x0000000000126233 : dec dword ptr [rcx - 0x77] ; ret 0x74e9
0x00000000000fac4e : dec dword ptr [rcx - 0x77] ; ret 0x8d4b
0x000000000003d0d1 : dec dword ptr [rcx - 0x77] ; ret 0xc931
0x00000000001261ee : dec dword ptr [rcx - 0x77] ; ret 0xf66
0x000000000003f782 : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000119440 : dec dword ptr [rcx - 0x7d] ; ret 0x4104
0x000000000003c87a : dec dword ptr [rcx - 0x7d] ; ret 0x4c01
0x00000000000654ec : dec dword ptr [rcx - 0x7d] ; ret 0x4c04
0x0000000000107055 : dec dword ptr [rcx] ; clc ; ret
0x0000000000111a48 : dec dword ptr [rcx] ; ret
0x000000000007aa42 : dec dword ptr [rcx] ; ret 0xfd81
0x000000000010a216 : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000195e2f : dec dword ptr [rdi - 0x76] ; std ; jmp qword ptr [rax]
0x000000000007a904 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000000bb804 : dec dword ptr [rdi] ; mov bh, 0x7d ; ret 0xb70f
0x000000000010aacd : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10aa5e ; loopne 0x10aade ; ret
0x000000000002e3b6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2e347 ; loopne 0x2e3c7 ; ret
0x00000000000cdb23 : dec dword ptr [rdi] ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000455d1 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009c8b4 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x000000000009c8a2 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x000000000009a667 : dec dword ptr [rdi] ; mov dh, 0x55 ; ret
0x000000000009ad21 : dec dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x000000000009a655 : dec dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8349
0x00000000000e309a : dec dword ptr [rdi] ; mov dh, 0x70 ; xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x0000000000060f1c : dec dword ptr [rdi] ; mov dh, 2 ; jmp 0x5d1c9
0x000000000001f8fd : dec dword ptr [rdi] ; ret 0x3eb
0x00000000000242bb : dec dword ptr [rdi] ; ret 0x41c3
0x00000000000d9ae0 : dec dword ptr [rdi] ; ret 0x4489
0x0000000000044ff5 : dec dword ptr [rdi] ; ret 0x8341
0x0000000000020337 : dec dword ptr [rdi] ; ret 0x8348
0x000000000006e0a1 : dec dword ptr [rdi] ; ret 0x8349
0x0000000000121b70 : dec dword ptr [rdi] ; ret 0x8589
0x000000000001f5b6 : dec dword ptr [rdi] ; ret 0xcaeb
0x000000000004d41f : dec dword ptr [rdi] ; sbb dword ptr [rax + 0x48fffffd], -0x7d ; ret 0x4901
0x000000000006542c : dec dword ptr [rdi] ; test ah, ah ; and eax, 0x83480000 ; ret 0x4804
0x00000000000653a4 : dec dword ptr [rdi] ; test al, al ; sbb eax, 0x83480000 ; ret 0x4804
0x0000000000065382 : dec dword ptr [rdi] ; test al, bh ; sbb eax, 0x83480000 ; ret 0x4804
0x000000000013c506 : dec dword ptr [rdi] ; test al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000009a571 : dec dword ptr [rdi] ; test byte ptr [rax], cl ; and al, 0 ; add bh, dh ; ret
0x000000000009a565 : dec dword ptr [rdi] ; test byte ptr [rax], cl ; and al, byte ptr [rax] ; add bh, dh ; ret
0x000000000009e80c : dec dword ptr [rdi] ; test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000009e800 : dec dword ptr [rdi] ; test byte ptr [rcx + rax], bl ; add bh, dh ; ret 0
0x00000000000d76e0 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x000000000009e67f : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000ff712 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x18000000], ah ; ret 0xf782
0x000000000009e673 : dec dword ptr [rdi] ; test byte ptr [rdx], dh ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x00000000000e2d5d : dec dword ptr [rdi] ; test byte ptr [rsi], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000009eb52 : dec dword ptr [rdi] ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000013db6e : dec dword ptr [rdi] ; test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d177e : dec dword ptr [rdi] ; test dh, bl ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f209f : dec dword ptr [rdi] ; test dl, cl ; add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000db140 : dec dword ptr [rdi] ; test dword ptr [rbx], ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000001719f0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000402b8 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x941
0x00000000001218f6 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc985
0x00000000000ead4a : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x0000000000030ccf : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000081783 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x4e8
0x00000000000cddf3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x00000000000e2d23 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x941
0x00000000000e2b83 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000773ba : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001965ef : dec dword ptr [rsi + 0x45] ; cld ; call rax
0x000000000019c85b : dec dword ptr [rsi + rdi] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000198513 : dec dword ptr [rsi + rsi*4 - 0x561c0000] ; in eax, dx ; call rsp
0x00000000001895ab : dec dword ptr [rsi - 0x71000a5a] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rax]
0x0000000000198d43 : dec dword ptr [rsp + rbp*8 - 0x1a6c0000] ; out dx, al ; call rsp
0x000000000019803b : dec dword ptr [rsp + rdx*4] ; add byte ptr [rsp + rsi*8 - 0x16], al ; jmp rsp
0x00000000001165a3 : dec dword ptr ss:[rax - 0x7f] ; ret
0x00000000001960af : dec eax ; sar ebx, -1 ; nop ; ret
0x000000000018822b : dec ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rcx]
0x0000000000048e5d : dec ecx ; ret
0x0000000000199363 : dec esp ; adc al, 1 ; add byte ptr [rdx + rax*2], dh ; int1 ; jmp rsp
0x000000000019c2ab : dec esp ; add al, byte ptr [r8] ; in al, -0x77 ; cli ; jmp rsp
0x000000000019b7cb : dec esp ; add dword ptr [rax], eax ; test byte ptr [rsi], dl ; stc ; jmp rsp
0x00000000001995d3 : dec esp ; add dword ptr es:[rax], eax ; in al, 0x30 ; jmp rsp
0x000000000019c45b : dec esp ; add r8b, byte ptr [rax] ; adc al, 0xb4 ; cli ; jmp rsp
0x000000000019b61b : dec esp ; call 0xffffffffc37db629
0x0000000000198fa3 : dec esp ; cld ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x198fa2 ; jmp rsp
0x0000000000198a73 : dec esp ; fadd dword ptr [rax] ; add byte ptr [rdx + rcx*2], al ; out dx, al ; jmp rsp
0x0000000000198b03 : dec esp ; fild dword ptr [rax] ; add byte ptr [rdi + rdx*2 - 0x12], dh ; jmp rsp
0x0000000000198b5b : dec esp ; fld qword ptr [rax] ; add byte ptr [rcx], ah ; out dx, al ; jmp rsp
0x0000000000199f63 : dec esp ; imul eax, dword ptr [rcx], 0 ; xchg eax, esp ; cli ; cmc ; jmp rsp
0x0000000000199fa3 : dec esp ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; cld ; cmc ; jmp rsp
0x00000000001988f3 : dec esp ; iretd ; add byte ptr [rax], al ; mov ah, 0x1a ; out dx, al ; jmp rsp
0x0000000000197a6b : dec esp ; jne 0x197a77 ; add byte ptr [rcx + rdx*8 - 0x17], al ; jmp rsp
0x00000000001987eb : dec esp ; leave ; add byte ptr [rax], al ; add al, 6 ; out dx, al ; jmp rsp
0x000000000019c813 : dec esp ; mov ebp, 0xc0740001 ; std ; jmp rsp
0x000000000019868b : dec esp ; mov esi, 0xcf640000 ; in eax, dx ; jmp rsp
0x0000000000198fe3 : dec esp ; std ; add byte ptr [rax], al ; xor al, 0x7e ; out dx, eax ; jmp rsp
0x000000000019befb : dec esp ; sub al, byte ptr [rdx] ; add byte ptr [rbx + rdx - 6], ah ; jmp rsp
0x000000000019a953 : dec esp ; wait ; add dword ptr [rax], eax ; add r14b, dil ; jmp rsp
0x000000000018bbd3 : dec esp ; xchg eax, ebx ; cli ; jmp rsp
0x00000000000a3ad9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000a1a81 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000002617a : dec qword ptr [r8 + 0x39] ; ret 0xe675
0x0000000000028e81 : dec qword ptr [r8 + 0x39] ; ret 0xe775
0x0000000000025dd5 : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002616e : dec qword ptr [rax - 0x7d] ; ret 0x4901
0x000000000019b0e1 : div bh ; push rsp ; ret
0x0000000000096a9f : div byte ptr [rbp + 0xa] ; jmp 0x96a6a
0x000000000008b892 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000009f2b1 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000973ff : div byte ptr [rbp - 0x3c] ; xor eax, eax ; ret
0x000000000002ae4a : div byte ptr [rbx + rax + 0x5b] ; ret
0x0000000000112263 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00000000000f6ca1 : div dword ptr [rdi - 0x14] ; ret
0x000000000007927f : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117645 : div ebx ; pop rbx ; pop rbp ; ret
0x000000000004f76d : div ecx ; add eax, r8d ; ret
0x00000000001ab1c9 : div ecx ; call qword ptr [rdx]
0x00000000001ab239 : div ecx ; jmp qword ptr [rcx]
0x00000000000a9b8a : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000001b6351 : div esi ; jmp qword ptr [rcx]
0x00000000000a9ba6 : div esi ; mov eax, eax ; ret
0x000000000006fc02 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079245 : div esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079244 : div r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007927e : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117644 : div rbx ; pop rbx ; pop rbp ; ret
0x0000000000056759 : enter -0x12, -1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000056701 : enter -0x12, -1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000186010 : enter -0x12a8, -1 ; push rcx ; movsxd rbp, ebp ; jmp qword ptr [rbx]
0x000000000001f5bd : enter -0x1401, -0x3b ; ret
0x00000000000cffc1 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x0000000000104780 : enter -0x1518, 0x78 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000044a63 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x000000000009f1be : enter -0x208c, -0xd ; ret
0x000000000010e763 : enter -0x2709, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000a03d1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000001303a2 : enter -0x3eb8, -0x18 ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000c8445 : enter -0x3fcf, -0x18 ; ret
0x0000000000171b64 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000001960b0 : enter -0x43f, -1 ; nop ; ret
0x0000000000049800 : enter -0x72b7, 0x7a ; add dword ptr [rax - 0x7d], ecx ; call qword ptr [rsi]
0x00000000000a3956 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a193e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a3ad6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a1a7e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000f810b : enter -0x76b4, -0x39 ; call 0x943f6
0x0000000000060ebf : enter -0x7af1, -3 ; ret 0xffff
0x0000000000102c3d : enter -0xf, 0x49 ; mov edi, dword ptr [rsi] ; call rbx
0x0000000000067064 : enter -2, -1 ; jmp 0x6329b
0x0000000000102ab4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000082af9 : enter -2, -1 ; xor edi, edi ; call qword ptr [r15]
0x0000000000062bdd : enter -5, -0x17 ; ret
0x00000000001961a1 : enter -5, -0x30 ; leave ; sti ; call rax
0x00000000001318b7 : enter 0, 0 ; call rax
0x0000000000131879 : enter 0, 0 ; jmp rcx
0x000000000012cf77 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000cc4ff : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x000000000007d9ea : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000004916e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008b0cd : enter 0x31c3, -0x40 ; ret
0x0000000000087bde : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x000000000002eb11 : enter 0x415d, 0x5c ; ret
0x0000000000134787 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x00000000001346e4 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x00000000001347b4 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000013505b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x0000000000134f3b : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007f578 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007aec2 : enter 0x4880, -0x77 ; ret
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000087c4b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005a2d2 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x000000000018503c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003a47d : enter 0x948, -0x30 ; ret
0x000000000009737d : enter 0xf41, -0x6c ; ret
0x000000000016ed86 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089af1 : enter 0xf66, -0x15 ; ret
0x0000000000149eec : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000001b916d : enter 1, -0x70 ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x00000000001b90dd : enter 1, 0x60 ; mov dl, 0xf7 ; jmp qword ptr [rax]
0x00000000000e3164 : enter 3, 0 ; call 0x1f466
0x0000000000006b68 : enter 5, 0 ; adc dword ptr [rax], eax ; verw word ptr [rcx] ; ret 0x18
0x00000000000a71b4 : enter 5, 0 ; ret
0x000000000006ca57 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007bf07 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007c3e3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000104c00 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000044d36 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001aa105 : fadd dword ptr [rax] ; add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x0000000000198a75 : fadd dword ptr [rax] ; add byte ptr [rdx + rcx*2], al ; out dx, al ; jmp rsp
0x000000000011565c : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b1842 : fadd dword ptr [rbp + 0x39] ; ret
0x000000000008efe0 : fadd dword ptr [rbx + 0x294807e0] ; ret
0x00000000001a6d18 : fadd dword ptr [rbx - 0x12] ; call qword ptr [rax]
0x0000000000071d51 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000115464 : fadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x0000000000076159 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000011f881 : fadd qword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000da8c3 : fadd qword ptr [rcx + 0x39] ; ret 0x8941
0x00000000000e94bf : fadd qword ptr [rcx] ; ret
0x00000000000bae17 : fadd st(1) ; call 0x48cdd742
0x00000000000ba7bc : fadd st(1) ; call 0xffffffff89cdd0e7
0x0000000000172188 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x00000000001700de : fadd st(3) ; ret
0x0000000000105a10 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016e8d1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000cd173 : fbld dword ptr [rsp + rax*2 - 0x75] ; add al, ch ; ret 0x29e
0x00000000001730cc : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042429 : fchs ; jmp 0x41e9f
0x00000000000c1427 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x0000000000184678 : fcmovb st(0), st(3) ; ret
0x000000000019e568 : fcom dword ptr [rcx + rbp*8] ; call qword ptr [rdx]
0x00000000001a4908 : fcom dword ptr [rdi - 0x13] ; jmp rax
0x000000000011130e : fcom qword ptr [rax - 0x74e7ac75] ; or r14b, sil ; ret 0x7508
0x0000000000187281 : fcomi st(1) ; inc dword ptr [rax] ; fdivr st(1), st(0) ; call qword ptr [rax]
0x000000000010ba5d : fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000009f96d : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002afe7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000036834 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000032463 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000084846 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000001853f9 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000010205b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001a6884 : fcomp qword ptr [rdi + 0x20480000] ; out dx, al ; jmp qword ptr [rdx]
0x0000000000183660 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001ae884 : fcomp qword ptr [rdi] ; add dword ptr [rax], eax ; call 0x221add37
0x00000000001aa184 : fcomp st(0), st(0) ; add byte ptr [rax], al ; test al, 0x7c ; int1 ; call qword ptr [rax]
0x00000000001aa684 : fcomp st(0), st(5) ; add byte ptr [rax], al ; test al, 0xcb ; int1 ; call qword ptr [rbx]
0x000000000012b8e4 : fcomp st(1) ; sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000009f1c0 : fcompi st(3) ; ret
0x00000000001b9c19 : fcompi st(7) ; jmp rdx
0x000000000006c0a5 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001b1878 : fdiv dword ptr [rdi - 0xb] ; jmp qword ptr [rcx]
0x00000000001af984 : fdiv qword ptr [rax] ; add dword ptr [rax], eax ; cwde ; clc ; hlt ; jmp qword ptr [rcx]
0x00000000001aff84 : fdiv qword ptr [rsi] ; add dword ptr [rax], eax ; js 0x1affaa ; cmc ; jmp qword ptr [rcx]
0x00000000001ad611 : fdiv st(3) ; jmp qword ptr [rax]
0x00000000000ead34 : fdiv st(3) ; ret
0x0000000000110316 : fdiv st(6) ; ret 0x7402
0x0000000000185d45 : fdivp st(7) ; call qword ptr [rsi]
0x00000000000da33f : fdivr dword ptr [rcx] ; ret 0xc189
0x0000000000187285 : fdivr st(1), st(0) ; call qword ptr [rax]
0x00000000001872b5 : fdivr st(1), st(0) ; call rax
0x00000000001aab49 : fdivr st(1), st(0) ; call rdi
0x00000000001872b1 : fdivr st(1), st(0) ; inc eax ; fdivr st(1), st(0) ; call rax
0x0000000000187289 : fdivr st(1), st(0) ; jmp qword ptr [rax]
0x00000000001872b9 : fdivr st(1), st(0) ; jmp rax
0x00000000001963c5 : fdivr st(3) ; call rax
0x00000000001829b5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000016c45d : fdivr st(7) ; ret
0x00000000000a480e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001872e9 : fdivrp st(1) ; jmp qword ptr [rax]
0x00000000001af1d9 : fdivrp st(4) ; call qword ptr [rsi]
0x00000000001af1f1 : fdivrp st(4) ; jmp qword ptr [rcx]
0x000000000019aff1 : fdivrp st(7) ; jmp rsp
0x00000000001aa33d : fiadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000f7892 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x0000000000073873 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000000ba920 : fiadd dword ptr [rcx + 0x29] ; ret 0x8d43
0x000000000009d0db : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000012e959 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x000000000019b43d : fiadd dword ptr [rcx] ; add byte ptr [rsi + rdx*2], dh ; clc ; jmp rsp
0x00000000000c236e : fiadd word ptr [r9] ; ret
0x0000000000198b8d : fiadd word ptr [rax] ; add byte ptr [rbx - 0x12], ah ; call rsp
0x00000000000c236f : fiadd word ptr [rcx] ; ret
0x00000000001031f9 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000185246 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000173588 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000890a4 : fidiv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x890b6 ; ret
0x0000000000142e45 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e815c : fidivr dword ptr [rcx] ; ret 0x3273
0x00000000000e87cf : fidivr dword ptr [rcx] ; ret 0x3673
0x00000000000e765f : fidivr dword ptr [rcx] ; ret 0x3773
0x00000000000e7b8d : fidivr dword ptr [rcx] ; ret 0x3973
0x00000000000da995 : fidivr dword ptr [rcx] ; ret 0xc689
0x00000000000daa4d : fidivr dword ptr [rcx] ; ret 0xc789
0x00000000000462e8 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x0000000000198b05 : fild dword ptr [rax] ; add byte ptr [rdi + rdx*2 - 0x12], dh ; jmp rsp
0x00000000000eccb1 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000133241 : fild dword ptr [rbx] ; call 0x1f464
0x000000000011079b : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000000000188790 : fild dword ptr [rsi - 0xc] ; call rcx
0x00000000000d65a4 : fild word ptr [rax + rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001afc75 : fild word ptr [rax] ; add byte ptr [rax], bh ; add al, 0xf5 ; jmp rdx
0x00000000000d187f : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00000000000fc526 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000518f0 : fild word ptr [rcx + 1] ; ret 0x54e9
0x000000000004f758 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000110cb6 : fild word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000003d22f : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x00000000001455c6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000c036c : fimul dword ptr [rax - 0x7d] ; ret
0x000000000012ad4f : fimul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000011e7c9 : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000ae7a8 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008f4b2 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x00000000000ebda2 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, qword ptr [rbp - 0x78] ; call r14
0x000000000012f376 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000016b202 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cc121
0x000000000016c282 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cd1a1
0x00000000000de42c : fimul word ptr [rax - 0x75] ; jl 0xde45d ; push rax ; call 0xda728
0x0000000000025725 : fimul word ptr [rax - 0x77] ; je 0x25757 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x000000000013b68f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000005db8b : fimul word ptr [rax - 0x77] ; ret
0x00000000000aecb6 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000004d724 : fimul word ptr [rax - 0x77] ; ret 0x894c
0x00000000000c74a7 : fimul word ptr [rax - 0x7d] ; ret
0x0000000000084701 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000004739e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x473f8
0x0000000000048f8e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x48fe8
0x0000000000037200 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000013807e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000139f1c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000002a9cd : fimul word ptr [rcx - 0x48f0dbfc] ; add al, 0x29 ; ret 0x8941
0x0000000000095e07 : fimul word ptr [rcx - 0x77] ; ret 0x8948
0x00000000000b7da0 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x00000000000d9aa0 : fistp qword ptr [rcx] ; ret 0xc189
0x000000000007362f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000073477 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000139fc1 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000861d5 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000087f9e : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c4505 : fisttp dword ptr [rax + 0x39] ; ret
0x00000000000f7d96 : fisttp dword ptr [rax - 0x77] ; call 0xffffffffc3548ced
0x0000000000173585 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000048041 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000010900e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bb2aa ; pop rbx ; ret
0x000000000004805b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000009a58f : fisttp dword ptr [rcx - 0x7d] ; ret
0x0000000000046705 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000004659c : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xe8d1
0x000000000009d576 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000103719 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000dd084 : fisttp qword ptr [rax + 0x63] ; ret 0x5489
0x0000000000149fd2 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000005b603 : fisttp qword ptr [rax - 0x77] ; ret
0x000000000005b906 : fisttp qword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000d3142 : fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008e6da : fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000000e94bb : fisttp qword ptr [rbx + 0x1dc2444] ; ret
0x0000000000142a1c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012a62a : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x00000000000f1ddb : fisttp word ptr [rax - 0x77] ; ret
0x000000000009fa61 : fisttp word ptr [rax - 0x77] ; ret 0x86e8
0x0000000000173259 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000480df : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000138332 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000009c2cd : fisttp word ptr [rcx + 1] ; ret 0x8b48
0x0000000000088277 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000012a72b : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000014a9dd : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000fc898 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000016eca1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001151bb : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000e42dd : fisub dword ptr [rsi - 0x7f] ; loope 0xe42e8 ; add esi, esi ; ret
0x000000000016e9a1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014d43c : fisubr word ptr [rcx] ; ret 0xfec5
0x0000000000198b5d : fld qword ptr [rax] ; add byte ptr [rcx], ah ; out dx, al ; jmp rsp
0x00000000001836a1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034dce : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034e88 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034d69 : fld xword ptr [rsp + 8] ; ret
0x0000000000034e59 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000034e39 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000035009 : fldcw word ptr [rsp - 2] ; ret
0x000000000011b563 : fldenv dword ptr [rbx - 0x76b7ffd6] ; ret 0x8d48
0x00000000000cbaf5 : fldenv dword ptr [rcx + rcx*4 + 0x34] ; and eax, 0x2d0 ; ret
0x000000000014a010 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008ea19 : fldenv dword ptr [rsi + 0xf] ; je 0x8ea76 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000096697 : fldenv dword ptr [rsi + 0xf] ; je 0x966f4 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016ed21 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e911 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000197b11 : fldl2t ; call rsp
0x0000000000047444 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000082a21 : fmul dword ptr [rax + 0x29] ; ret 0x348
0x00000000000c237c : fmul dword ptr [rax + 0x39] ; ret
0x00000000000582ac : fmul dword ptr [rax + 1] ; ret 0x8948
0x00000000000cdd92 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x000000000004d721 : fmul dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; ret 0x894c
0x0000000000076255 : fmul dword ptr [rax - 0x77] ; ret
0x0000000000109a23 : fmul dword ptr [rax - 0x77] ; ret 0xc148
0x00000000000bd6d5 : fmul dword ptr [rax - 0x7d] ; ret
0x000000000009bd8b : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000004942f : fmul dword ptr [rbp + 0x39] ; ret
0x00000000000db6e6 : fmul dword ptr [rbp - 0x76be0085] ; ret
0x0000000000078bc6 : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000080cb1 : fmul dword ptr [rcx + 0x21] ; ret 0x394d
0x00000000000956e5 : fmul dword ptr [rcx + 0xf] ; ret
0x00000000001097c5 : fmul dword ptr [rdi] ; ret
0x00000000001b4348 : fmul dword ptr [rdx - 0xa] ; call qword ptr [rax]
0x0000000000063b5b : fmul qword ptr [rax - 0x7d] ; ret
0x000000000001fc08 : fmul qword ptr [rax - 1] ; ret
0x0000000000089e89 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fddf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001b1784 : fmul qword ptr [rsi + 1] ; add byte ptr [rax], bl ; jno 0x1b1787 ; jmp qword ptr [rcx]
0x0000000000041a34 : fmul st(0) ; ret
0x00000000000418d2 : fmulp st(1) ; ret
0x00000000000d0013 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000d7e04 : fnstenv dword ptr [rbp - 0x3e] ; jmp 0xd7dba
0x000000000000251a : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000047082 : fnstsw dword ptr [rax + 1] ; ret
0x0000000000033955 : fpatan ; ret
0x000000000018821c : frstor dword ptr [rbp - 0x52a9000d] ; jmp qword ptr [rcx]
0x000000000016eaa1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000187279 : fscale ; call qword ptr [rax]
0x0000000000034e8c : fscale ; fstp st(1) ; ret
0x00000000001963c9 : fsincos ; jmp qword ptr [rax]
0x0000000000183387 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000096dfe : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000183700 : fstp st(0) ; ret 0xde5d
0x0000000000034e8e : fstp st(1) ; ret
0x0000000000034dd0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034e5d : fstp xword ptr [rdi] ; ret
0x00000000001b0e98 : fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x00000000000355a8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035298 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000016eda1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d4c80 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e15bf7
0x00000000000a07b4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001b3084 : fsub qword ptr [rdi + 1] ; add byte ptr [rax], cl ; or al, 0xf9 ; jmp qword ptr [rsi]
0x00000000000a95ab : fsub qword ptr [rsi + 0xf] ; jmp 0xa9577
0x000000000016eba1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089c0c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001737fb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001af4e8 : fsub st(4) ; hlt ; jmp qword ptr [rcx]
0x0000000000186234 : fsub st(5) ; in eax, dx ; call rsp
0x00000000001bb684 : fsub st(5), st(0) ; add dword ptr [rax], eax ; cwde ; cmp eax, edi ; call rbx
0x0000000000102ab2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000012734b : fsubp st(0) ; jmp qword ptr [rsi]
0x0000000000034dd2 : fsubp st(1) ; ret
0x00000000000cc7ee : fsubp st(6) ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000019f308 : fsubr dword ptr [rbp - 0x17] ; jmp rsp
0x00000000001af484 : fsubr qword ptr [rbx] ; add dword ptr [rax], eax ; sbb ah, ah ; hlt ; jmp qword ptr [rcx]
0x00000000000b8a6b : fsubr qword ptr [rcx] ; ret
0x000000000011e00e : fsubr st(1) ; ret 0xfffd
0x0000000000181349 : fsubr st(2) ; call rsi
0x0000000000181345 : fsubr st(2) ; jmp rax
0x0000000000198251 : fsubr st(3) ; call rsp
0x00000000001a5d99 : fsubr st(5) ; call rdi
0x00000000001853d8 : fucom st(5) ; loop 0x185431 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001976e9 : fucomi st(0) ; call rsp
0x00000000001a2661 : fucomp st(4) ; jmp qword ptr [rbx]
0x00000000000adb3b : fucompi st(0) ; call rdx
0x000000000007797d : fucompi st(0) ; insd dword ptr [rdi], dx ; add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x7792d
0x00000000000884d2 : fucompi st(0) ; js 0x8854d ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e9e3f : fucompi st(0) ; mov ebx, dword ptr [rax] ; cli ; dec dword ptr [rax + 1] ; ret
0x00000000000cadc2 : fucompi st(0) ; or byte ptr [rbx], ch ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000026fb7 : fucompi st(0) ; ret
0x0000000000136fa8 : fucompi st(0) ; ret 0xfc66
0x000000000002adf8 : fucompi st(0) ; ret 0xff46
0x0000000000084508 : fucompi st(0) ; ret 0xffd3
0x00000000000f925c : fucompi st(0) ; sahf ; sar cl, cl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000072414 : fucompi st(0) ; xchg byte ptr [rdi], cl ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x723c6
0x0000000000021429 : hlt ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000012c768 : hlt ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rax ; adc dh, dh ; ret 0x7401
0x00000000001abd8d : hlt ; add byte ptr [rax], al ; mov al, 0x8a ; call rdi
0x00000000001b309c : hlt ; add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000000238e4 : hlt ; add dword ptr [rax], eax ; add al, ch ; ret
0x000000000019c83d : hlt ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001af79c : hlt ; add dword ptr cs:[rax], eax ; jo 0x1af796 ; hlt ; jmp qword ptr [rsi]
0x00000000001aff9c : hlt ; add dword ptr ss:[rax], eax ; nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000001b179c : hlt ; add qword ptr [rax], r8 ; xor byte ptr [rcx - 0xb], dh ; jmp rbx
0x00000000001a3eb4 : hlt ; and dword ptr [rax], eax ; add byte ptr [rax], ch ; cmp ebp, ebp ; jmp qword ptr [rbx]
0x00000000001886ae : hlt ; call qword ptr [rax]
0x00000000001aee2a : hlt ; call qword ptr [rbx]
0x00000000001ae002 : hlt ; call qword ptr [rcx]
0x000000000018883e : hlt ; call qword ptr [rsi]
0x0000000000188ae6 : hlt ; call rax
0x0000000000188792 : hlt ; call rcx
0x00000000001888ba : hlt ; call rsi
0x0000000000195ce5 : hlt ; cli ; inc dword ptr [rax] ; cmc ; cli ; jmp qword ptr [rax]
0x0000000000197760 : hlt ; cmp cl, ch ; jmp rsp
0x000000000009f16b : hlt ; cmp ecx, edx ; je 0x9f166 ; ret
0x00000000000d5663 : hlt ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000000d8cc0 : hlt ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001889ae : hlt ; dec dword ptr [rcx - 0x29000bb8] ; hlt ; jmp rdi
0x00000000001889aa : hlt ; dec dword ptr [rcx - 0x76000bb8] ; hlt ; call rsi
0x0000000000188ac6 : hlt ; dec dword ptr [rcx - 0x76000bb8] ; hlt ; jmp qword ptr [rax]
0x000000000019b0d9 : hlt ; idiv edi ; pushfq ; ret
0x0000000000198770 : hlt ; imul ch ; call rsp
0x00000000001864bc : hlt ; in al, -0x13 ; inc dword ptr [rcx] ; cmc ; in eax, dx ; call qword ptr [rdx]
0x00000000001ab59c : hlt ; in al, dx ; add byte ptr [rax], al ; mov al, 5 ; jmp qword ptr [rcx]
0x00000000001986f0 : hlt ; in eax, -0x13 ; inc esp ; ret 0
0x0000000000188b12 : hlt ; inc dword ptr [rax] ; hlt ; inc dword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000188b16 : hlt ; inc dword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000189146 : hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp qword ptr [rsi]
0x0000000000189072 : hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp rsp
0x000000000018914a : hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp qword ptr [rsi]
0x0000000000189076 : hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp rsp
0x0000000000183788 : hlt ; jmp 0x18375d
0x00000000001886aa : hlt ; jmp qword ptr [rax + 0x10fff43f]
0x00000000001886e2 : hlt ; jmp qword ptr [rax]
0x00000000001af332 : hlt ; jmp qword ptr [rbx]
0x00000000001ae04a : hlt ; jmp qword ptr [rcx]
0x0000000000188d16 : hlt ; jmp qword ptr [rdi]
0x000000000018883a : hlt ; jmp qword ptr [rdx]
0x000000000018914e : hlt ; jmp qword ptr [rsi]
0x00000000001886a2 : hlt ; jmp rax
0x00000000001aec32 : hlt ; jmp rbx
0x00000000001ad642 : hlt ; jmp rcx
0x00000000001889b6 : hlt ; jmp rdi
0x000000000018872e : hlt ; jmp rdx
0x0000000000188b22 : hlt ; jmp rsi
0x000000000018907a : hlt ; jmp rsp
0x0000000000172065 : hlt ; jne 0x172187 ; ret
0x0000000000172064 : hlt ; jne 0x172188 ; ret
0x00000000001983b0 : hlt ; jns 0x1983a3 ; call rsp
0x00000000001886de : hlt ; lcall ptr [rax + 0x20fff440] ; hlt ; jmp qword ptr [rax]
0x0000000000188d4a : hlt ; lcall ptr [rdi + rbx*4] ; hlt ; jmp qword ptr [rdi]
0x0000000000188836 : hlt ; ljmp ptr [rax*2 + 0x4522fff4] ; hlt ; call qword ptr [rsi]
0x000000000018889a : hlt ; ljmp ptr [rdx] ; hlt ; jmp qword ptr [rax]
0x000000000015a55a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015285e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000171673 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000019b0c0 : hlt ; out dx, eax ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001a8521 : hlt ; out dx, eax ; jmp rbx
0x0000000000079246 : hlt ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000199a68 : hlt ; pop rsp ; call rsp
0x0000000000188af6 : hlt ; push qword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000188896 : hlt ; push qword ptr [rsp + rax*2] ; hlt ; ljmp ptr [rdx] ; hlt ; jmp qword ptr [rax]
0x0000000000188ae2 : hlt ; push rax ; hlt ; call rax
0x0000000000188b02 : hlt ; push rax ; hlt ; jmp qword ptr [rax]
0x0000000000188ade : hlt ; push rax ; hlt ; push rax ; hlt ; call rax
0x000000000002fe45 : hlt ; ret
0x000000000019c518 : hlt ; ret 0xfffa
0x000000000019c840 : hlt ; ret 0xfffd
0x000000000019b0cc : hlt ; ret 1
0x00000000001986dc : hlt ; rol dword ptr [rax], 0 ; je 0x1986cf ; in eax, dx ; call qword ptr [rdx + rax*8]
0x00000000001a9c9c : hlt ; rol dword ptr [rax], cl ; add byte ptr [rax], ah ; adc al, 0xf1 ; jmp qword ptr [rax]
0x00000000001151d4 : hlt ; shl dword ptr [rsi + 0xf], -0x2c ; ret 0xf66
0x00000000001997b0 : hlt ; std ; jmp rsp
0x00000000001962e9 : hlt ; sti ; call rax
0x0000000000196349 : hlt ; sti ; jmp qword ptr [rax]
0x000000000019c3e0 : hlt ; stosb byte ptr [rdi], al ; cli ; call rsp
0x00000000001838c3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001190a9 : hlt ; sub al, byte ptr [rax] ; add rsp, 0x28 ; jmp rax
0x0000000000171677 : hlt ; sub eax, edx ; ret
0x0000000000003c8d : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000007e6a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000b8c4e : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000104df5 : idiv bh ; add rsp, 0x408 ; ret
0x00000000000805cf : idiv bh ; dec dword ptr [rax + 0x39] ; ret
0x000000000012825d : idiv bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ce9fb : idiv bh ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000bf5e7 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000009ec46 : idiv bh ; dec dword ptr [rdi] ; mov dh, 0x55 ; ret
0x000000000009ec33 : idiv bh ; dec dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x00000000000ec970 : idiv bh ; inc dword ptr [rcx - 0x77] ; ret
0x000000000019a68a : idiv bh ; mov ah, 0x8f ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sal dh, 1 ; jmp rsp
0x00000000000b8c0a : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001b454a : idiv bh ; ret 1
0x0000000000189ad4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000128b8e : idiv bh ; xor eax, eax ; ret
0x00000000000e7b65 : idiv byte ptr [rcx] ; ret
0x00000000000242b6 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000000ce9fa : idiv dil ; dec dword ptr [rax - 0x77] ; ret 0x8d49
0x0000000000195d2d : idiv dl ; jmp qword ptr [rax]
0x000000000019628d : idiv ebx ; call rax
0x0000000000128250 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000127585 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000f16a4 : idiv edi ; dec dword ptr [rbx - 0x76a3dbbc] ; ret 0xc085
0x000000000019b0e2 : idiv edi ; hlt ; ret
0x000000000019b0ca : idiv edi ; hlt ; ret 1
0x000000000019aae2 : idiv edi ; mov esp, 0x640001a1 ; adc dh, bh ; call rsp
0x000000000019a9a2 : idiv edi ; mov esp, 0xb400019c ; add al, 0xf7 ; call rsp
0x000000000019aa7a : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; lahf ; add dword ptr [rax], eax ; or al, 0xf7 ; call rsp
0x000000000019b0c2 : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019b0da : idiv edi ; pushfq ; ret
0x000000000019b0d2 : idiv edi ; ret
0x000000000003a496 : idiv esi ; ret
0x00000000001b4549 : idiv r15b ; ret 1
0x000000000003a495 : idiv rsi ; ret
0x00000000000b8b9c : imul al ; and al, 5 ; add byte ptr [rcx], bh ; ret
0x00000000000be057 : imul al ; ret
0x00000000000c1369 : imul byte ptr [rcx] ; ret 0xd269
0x00000000000cadb6 : imul byte ptr [rdx] ; sti ; dec dword ptr [rax - 0x77] ; ret
0x0000000000198771 : imul ch ; call rsp
0x0000000000111775 : imul cl ; ret 0xfff6
0x00000000000a4008 : imul cl ; ret 8
0x000000000005a86b : imul eax ; call qword ptr [rdi]
0x0000000000067042 : imul eax ; cwde ; ret
0x000000000003315e : imul eax ; pop rsp ; ret
0x000000000005d1a7 : imul eax ; ret
0x00000000000627a8 : imul eax ; ret 0x198
0x0000000000033a78 : imul eax ; ret 0x5bd
0x0000000000068418 : imul eax ; ret 0xaf
0x00000000000e63f8 : imul eax ; ret 0xf390
0x0000000000197805 : imul eax, dword ptr [rax], 0xe9685400 ; call rsp
0x00000000000c1d51 : imul eax, dword ptr [rbx], 0x56e80000 ; ret
0x00000000001701d1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000199f65 : imul eax, dword ptr [rcx], 0 ; xchg eax, esp ; cli ; cmc ; jmp rsp
0x0000000000199ebd : imul eax, dword ptr [rcx], 0xf5f53400 ; call rsp
0x00000000001b31bd : imul eax, dword ptr [rcx], 0xf6198000 ; jmp qword ptr [rsi]
0x00000000001b31d5 : imul eax, dword ptr [rcx], 0xf6199800 ; jmp qword ptr [rsi]
0x00000000001b31ed : imul eax, dword ptr [rcx], 0xf619b000 ; jmp qword ptr [rsi]
0x00000000000bc016 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000001258fb : imul eax, dword ptr [rsi], 0x348b4800 ; ret 0x5ba
0x000000000010b523 : imul eax, esp, 0x8948002b ; ret 0x8d48
0x0000000000128763 : imul ebp, dword ptr [rdi], 0x3948fff6 ; ret
0x000000000017310e : imul ebx, dword ptr [rax], -0x18 ; stosd dword ptr [rdi], eax ; ret
0x000000000010e845 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d7bc : imul ecx, dword ptr [rax], -0x15 ; ret
0x000000000010e7e5 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a208b : imul ecx, dword ptr [rsi], -0x70 ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a3692 : imul ecx, dword ptr [rsi], 8 ; ret
0x000000000010e71f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c1fb : imul edi, dword ptr [rax], 0xf ; ret 0x389
0x0000000000196ce9 : imul edi, esp, -1 ; sub ch, byte ptr [rbx - 4] ; call rax
0x0000000000196b31 : imul edi, esp, -1 ; xchg byte ptr [rcx - 4], dh ; call qword ptr [rsi]
0x000000000010e815 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c8113 : imul edx, edi, 0x8948002f ; ret 0x8d48
0x0000000000002b68 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x00000000000fe551 : imul esi, dword ptr [rbx + 0x2c], 0 ; add rsp, 8 ; ret
0x00000000000bb3f6 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x00000000000a4d4c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000083363 : imul esp, ebp, 0x8948ffff ; ret 0x3d83
0x00000000001b31ec : imul r8d, dword ptr [rcx], 0xf619b000 ; jmp qword ptr [rsi]
0x00000000001a7829 : in al, -0x12 ; jmp qword ptr [rsi]
0x0000000000003758 : in al, -0x12 ; jne 0x373a ; ret 0x975
0x00000000001ab68c : in al, -0x13 ; add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001986e1 : in al, -0x13 ; call qword ptr [rdx + rax*8]
0x00000000001864bd : in al, -0x13 ; inc dword ptr [rcx] ; cmc ; in eax, dx ; call qword ptr [rdx]
0x0000000000198250 : in al, -0x28 ; jmp 0x198256
0x000000000019c530 : in al, -0x3a ; cli ; call rsp
0x000000000019c510 : in al, -0x3e ; cli ; ljmp ptr [rcx + rbp*2 + 1] ; add ah, dh ; ret 0xfffa
0x00000000001090d4 : in al, -0x4f ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a738c : in al, -0x56 ; add byte ptr [rax], al ; push rax ; test dh, ch ; call qword ptr [rcx]
0x0000000000198518 : in al, -0x57 ; in eax, dx ; call rsp
0x00000000001b698c : in al, -0x60 ; add dword ptr [rax], eax ; and ch, cl ; sti ; call rsi
0x000000000019bb50 : in al, -0x6d ; stc ; jmp rsp
0x000000000019c2b0 : in al, -0x77 ; cli ; jmp rsp
0x000000000010170b : in al, -0x77 ; ret
0x00000000001abd8c : in al, -0xc ; add byte ptr [rax], al ; mov al, 0x8a ; call rdi
0x00000000001af471 : in al, -0xc ; jmp qword ptr [rcx]
0x000000000015a53a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000187329 : in al, -0xf ; call qword ptr [rax]
0x0000000000187321 : in al, -0xf ; call rax
0x0000000000198748 : in al, -0xf ; in eax, dx ; call rsp
0x0000000000187325 : in al, -0xf ; push rax ; in al, -0xf ; call qword ptr [rax]
0x0000000000196429 : in al, -5 ; call qword ptr [rax]
0x00000000001963e9 : in al, -5 ; jmp qword ptr [rax - 0x1f00041b]
0x0000000000172098 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000001072d1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x00000000001ade8c : in al, 0x15 ; add dword ptr [rax], eax ; jo 0x1adef2 ; stc ; call qword ptr [rax]
0x000000000019ef8c : in al, 0x26 ; add byte ptr [rax], al ; add byte ptr [rsi - 0x17], ah ; jmp qword ptr [rcx]
0x00000000001992e8 : in al, 0x27 ; int1 ; jmp rsp
0x00000000001af38c : in al, 0x2a ; add dword ptr [rax], eax ; mov al, 0xe2 ; hlt ; jmp qword ptr [rcx]
0x00000000001995d8 : in al, 0x30 ; jmp rsp
0x000000000009f1bb : in al, 0x41 ; cmp eax, ecx ; je 0x9f1a7 ; ret
0x00000000001993e8 : in al, 0x53 ; int1 ; call rsp
0x00000000001b318c : in al, 0x68 ; add dword ptr [rax], eax ; push rax ; sbb esi, esi ; jmp qword ptr [rsi]
0x000000000019c52c : in al, 0x74 ; add dword ptr [rax], eax ; in al, -0x3a ; cli ; call rsp
0x0000000000089a0c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000186e6c : in al, 0x74 ; out dx, al ; call rsp
0x0000000000186dd8 : in al, 0x74 ; out dx, al ; jmp rsp
0x0000000000186e38 : in al, 0x74 ; out dx, al ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000045942 : in al, 0x74 ; sub eax, dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x00000000000a983e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x00000000000897c0 : in al, 0x75 ; and eax, 0x5c415d5b ; ret
0x00000000000acbca : in al, 0x75 ; ret
0x00000000001ad48c : in al, 0xb ; add dword ptr [rax], eax ; loopne 0x1ad46e ; jmp qword ptr [rcx]
0x0000000000060e7e : in al, 0xf ; mov byte ptr [rsi], bh ; ret
0x0000000000060ed7 : in al, 0xf ; test ch, ah ; ret 0xffff
0x000000000006ad5c : in al, 0xf ; test esi, ebp ; ret
0x000000000019b1d8 : in al, 5 ; clc ; jmp rsp
0x00000000000a5888 : in al, 6 ; add byte ptr [rax], al ; ret
0x000000000019be70 : in al, 9 ; cli ; jmp rsp
0x00000000000e889a : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rsp ; ret
0x0000000000079103 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000007ea04 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x961
0x000000000006f934 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xa52
0x00000000001ab59d : in al, dx ; add byte ptr [rax], al ; mov al, 5 ; jmp qword ptr [rcx]
0x0000000000198d45 : in al, dx ; add byte ptr [rax], al ; xchg eax, esp ; in eax, -0x12 ; call rsp
0x00000000001b0e94 : in al, dx ; add dword ptr [r8], r8d ; fsub dword ptr [rbx - 0xb] ; jmp qword ptr [rcx]
0x000000000019b6e5 : in al, dx ; add dword ptr [rax], eax ; add al, 0xdd ; clc ; jmp rsp
0x00000000001bb4d5 : in al, dx ; add dword ptr [rax], eax ; call 0x231bb066
0x0000000000144c90 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001b1194 : in al, dx ; add qword ptr [rax], rax ; cmc ; jmp qword ptr [rcx]
0x00000000001a2242 : in al, dx ; call qword ptr [rax]
0x0000000000195cbd : in al, dx ; cli ; jmp rax
0x0000000000048965 : in al, dx ; cmp dh, dh ; ret 0x4801
0x0000000000049249 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000189149 : in al, dx ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp qword ptr [rsi]
0x0000000000189075 : in al, dx ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp rsp
0x000000000018914d : in al, dx ; hlt ; jmp qword ptr [rsi]
0x000000000018872c : in al, dx ; hlt ; jmp rdx
0x0000000000189079 : in al, dx ; hlt ; jmp rsp
0x00000000001862a5 : in al, dx ; in eax, dx ; call rsp
0x00000000001862b9 : in al, dx ; in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x00000000001aaf61 : in al, dx ; int1 ; call rdi
0x00000000001a1b92 : in al, dx ; jmp qword ptr [rax]
0x00000000001a2662 : in al, dx ; jmp qword ptr [rbx]
0x00000000001a1c4a : in al, dx ; jmp qword ptr [rcx]
0x00000000001a2d02 : in al, dx ; jmp rbx
0x00000000001a4394 : in al, dx ; jp 0x1a439e ; add al, cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000000ff3eb : in al, dx ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000015285a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009f2b3 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000013a154 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000015a93a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001a6d94 : in al, dx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rdx]
0x000000000013c379 : in al, dx ; or byte ptr [rax + 0x29], cl ; ret
0x000000000006f1f6 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000008361a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001459b4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013d49d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000036782 : in al, dx ; or byte ptr [rcx + 0x415d5bd0], 0x5c ; ret
0x0000000000036831 : in al, dx ; or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x00000000001bb094 : in al, dx ; out 1, eax ; add byte ptr [rax + 0xb], ch ; clc ; jmp qword ptr [rcx]
0x00000000001b6594 : in al, dx ; pushfq ; add dword ptr [rax], eax ; adc rdi, rsi ; call qword ptr [rcx]
0x000000000009f0bb : in al, dx ; ret
0x0000000000039ee0 : in al, dx ; ret 0x38
0x00000000001431b0 : in al, dx ; ret 0xffed
0x00000000001175e2 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3af3c
0x00000000000f70a1 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001ae694 : in al, dx ; sbb eax, 0x51780001 ; stc ; call qword ptr [rax]
0x00000000001b7794 : in al, dx ; scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], cl ; call qword ptr [rdi]
0x0000000000196379 : in al, dx ; sti ; jmp rax
0x0000000000196359 : in al, dx ; sti ; push qword ptr [rax] ; out dx, al ; sti ; call qword ptr [rax]
0x00000000001af594 : in al, dx ; sub al, 1 ; add byte ptr [rax], bl ; out -0xc, eax ; jmp qword ptr [rcx]
0x000000000007e1e4 : in al, dx ; xchg dword ptr [rax + rax], esi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a5d94 : in al, dx ; xchg eax, esp ; add byte ptr [rax], al ; js 0x1a5d79 ; in eax, dx ; call rdi
0x0000000000184e1e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184db1 ; ret 0x48f
0x0000000000184e1d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184db2 ; ret 0x48f
0x000000000011f0e2 : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x000000000012f773 : in al, dx ; xor dh, dh ; ret 0xc707
0x0000000000198d49 : in eax, -0x12 ; call rsp
0x0000000000186235 : in eax, -0x13 ; call rsp
0x00000000001986f1 : in eax, -0x13 ; inc esp ; ret 0
0x0000000000197bf1 : in eax, -0x17 ; call rsp
0x0000000000033f5e : in eax, -0x17 ; ret 0xfffd
0x00000000001853d9 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000015a5ba : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000009446a : in eax, -0xd ; ret
0x0000000000187349 : in eax, -0xf ; call qword ptr [rax]
0x0000000000187341 : in eax, -0xf ; call rax
0x00000000001aad51 : in eax, -0xf ; call rdi
0x0000000000187345 : in eax, -0xf ; push rax ; in eax, -0xf ; call qword ptr [rax]
0x0000000000083364 : in eax, -1 ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000001848a1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001963ed : in eax, -5 ; jmp rax
0x000000000007aee2 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000183523 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000109191 : in eax, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000012a72e : in eax, 0x41 ; call rdi
0x00000000000ab03a : in eax, 0x44 ; sub eax, eax ; ret
0x000000000008f3da : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000049742 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000001154c5 : in eax, 0x5d ; ret
0x00000000001827b9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000000aae13 : in eax, 0xf ; je 0xaae38 ; add rax, 2 ; ret
0x00000000001ab62d : in eax, dx ; add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001ab6a5 : in eax, dx ; add byte ptr [rax], al ; sub byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000000ae5bd : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000001bb685 : in eax, dx ; add dword ptr [rax], eax ; cwde ; cmp eax, edi ; call rbx
0x0000000000111771 : in eax, dx ; add eax, dword ptr [rbp + 0x30] ; imul cl ; ret 0xfff6
0x0000000000111c54 : in eax, dx ; call 0x10df53
0x00000000001a4812 : in eax, dx ; call qword ptr [rax]
0x000000000018632e : in eax, dx ; call qword ptr [rbx]
0x0000000000185e9a : in eax, dx ; call qword ptr [rcx]
0x00000000001a5aaa : in eax, dx ; call qword ptr [rdi]
0x00000000001986e2 : in eax, dx ; call qword ptr [rdx + rax*8]
0x00000000001864c2 : in eax, dx ; call qword ptr [rdx]
0x00000000001861ca : in eax, dx ; call qword ptr [rsi]
0x00000000001a436a : in eax, dx ; call rbx
0x00000000001a5d9a : in eax, dx ; call rdi
0x0000000000186236 : in eax, dx ; call rsp
0x000000000018635a : in eax, dx ; dec dword ptr [rax - 0x17] ; in eax, dx ; jmp qword ptr [rdi - 0x2b00121b]
0x00000000001983aa : in eax, dx ; dec dword ptr [rbx + rbp*4 + 0x79f40000] ; in eax, dx ; call rsp
0x0000000000185e92 : in eax, dx ; dec dword ptr [rcx - 0x500012b4] ; push rsp ; in eax, dx ; call qword ptr [rcx]
0x0000000000198512 : in eax, dx ; dec dword ptr [rsi + rsi*4 - 0x561c0000] ; in eax, dx ; call rsp
0x000000000019868a : in eax, dx ; dec esp ; mov esi, 0xcf640000 ; in eax, dx ; jmp rsp
0x00000000001af7a1 : in eax, dx ; hlt ; jmp qword ptr [rsi]
0x00000000001864be : in eax, dx ; inc dword ptr [rcx] ; cmc ; in eax, dx ; call qword ptr [rdx]
0x00000000001862fe : in eax, dx ; inc dword ptr [rsi] ; in al, dx ; in eax, dx ; call rsp
0x00000000001986f2 : in eax, dx ; inc esp ; ret 0
0x00000000001a439a : in eax, dx ; jmp qword ptr [rax]
0x00000000001862aa : in eax, dx ; jmp qword ptr [rbp - 0x2b00121d]
0x00000000001986fa : in eax, dx ; jmp qword ptr [rbx + rax*8]
0x0000000000186016 : in eax, dx ; jmp qword ptr [rbx]
0x00000000001a4df2 : in eax, dx ; jmp qword ptr [rcx]
0x000000000018635e : in eax, dx ; jmp qword ptr [rdi - 0x2b00121b]
0x00000000001a425a : in eax, dx ; jmp qword ptr [rdi]
0x000000000018602a : in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001a4732 : in eax, dx ; jmp qword ptr [rsi]
0x00000000001a490a : in eax, dx ; jmp rax
0x00000000001a3bfa : in eax, dx ; jmp rbx
0x00000000001a4c02 : in eax, dx ; jmp rsi
0x00000000001983e2 : in eax, dx ; jmp rsp
0x0000000000117609 : in eax, dx ; jne 0x117621 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000017311f : in eax, dx ; jne 0x173101 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007920f : in eax, dx ; jne 0x79227 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000efefa : in eax, dx ; jne 0xefee9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000186152 : in eax, dx ; lcall ptr [rdi] ; push rdi ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000186372 : in eax, dx ; lcall ptr [rdx] ; salc ; in eax, dx ; call rsp
0x00000000001862a2 : in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x00000000001862b6 : in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x00000000000a94c2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000018615e : in eax, dx ; ljmp ptr [rbx + 0x57] ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001860de : in eax, dx ; ljmp ptr [rdi + 0x62ffed52] ; ret
0x00000000000a8e89 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a8e9f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a8ec1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a8edf : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a8eff : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a8f25 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8f41 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a8f61 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a8f81 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a8fa7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a8fc9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a8fe7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9007 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9023 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9043 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9063 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9083 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a90a9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a90f9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a8dcf : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a8ded : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a8e0d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a8e2f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a8e4f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a8e6f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a8d05 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a8d17 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a8d2d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a8d45 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a8d5b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8d6d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8d8b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a8d97 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a8dad : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a8cf1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000015266a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000adb89 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xadba6
0x00000000000b03aa : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb03c6
0x00000000000b2a82 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb2a9e
0x000000000015a9ba : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d7694 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000149520 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000cab28 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000017358a : in eax, dx ; pop rbx ; ret
0x000000000018609e : in eax, dx ; push qword ptr [rax + 0x54] ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000198642 : in eax, dx ; push qword ptr [rbp + rdi*4 - 0x34cc0000] ; in eax, dx ; call rsp
0x000000000018632a : in eax, dx ; push qword ptr [rdx - 0x17] ; in eax, dx ; call qword ptr [rbx]
0x00000000001861c2 : in eax, dx ; push qword ptr [rip + 0x35ffede1] ; loope 0x1861c1 ; call qword ptr [rsi]
0x00000000001860f2 : in eax, dx ; push qword ptr [rsi + 0x61] ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001983da : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x7d040000] ; in eax, dx ; jmp rsp
0x0000000000186136 : in eax, dx ; push rsi ; pop rcx ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001864ba : in eax, dx ; push rsp ; in al, -0x13 ; inc dword ptr [rcx] ; cmc ; in eax, dx ; call qword ptr [rdx]
0x0000000000072fe2 : in eax, dx ; ret
0x00000000001731cf : in eax, dx ; ret 0xffea
0x00000000001962d9 : in eax, dx ; sti ; call qword ptr [rax]
0x000000000019637d : in eax, dx ; sti ; call rax
0x00000000001962f9 : in eax, dx ; sti ; jmp rax
0x00000000000d569f : in eax, dx ; sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000001962b9 : in eax, dx ; sti ; push qword ptr [rax] ; out dx, eax ; sti ; call qword ptr [rax]
0x00000000000d560a : in eax, dx ; sti ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000a9612 : in eax, dx ; sub rax, 1 ; ret
0x000000000009734f : in eax, dx ; test al, al ; je 0x97344 ; xor eax, eax ; ret
0x000000000009f1fa : in eax, dx ; xor eax, eax ; ret
0x000000000014d3c6 : inc bl ; jb 0x14d3d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d8b6 : inc bl ; jb 0x14d8c6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014dc56 : inc bl ; jb 0x14dc66 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008f2e5 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000007c1f6 : inc byte ptr [rbp + 0x6b8948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000c6191 : inc byte ptr [rcx] ; je 0xc61a6 ; xor eax, eax ; ret
0x0000000000078969 : inc byte ptr [rdx] ; je 0x7897f ; mov dword ptr [rdi], edx ; ret
0x000000000011ed4c : inc byte ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000195d43 : inc dword ptr [rax + 0x10] ; sti ; jmp rax
0x00000000001964cf : inc dword ptr [rax + 0x11] ; cld ; inc dword ptr [rax] ; adc edi, esp ; jmp rax
0x0000000000196533 : inc dword ptr [rax + 0x12] ; cld ; call qword ptr [rax]
0x0000000000196497 : inc dword ptr [rax + 0x15] ; cld ; jmp qword ptr [rax]
0x000000000019651b : inc dword ptr [rax + 0x16] ; cld ; jmp qword ptr [rax]
0x000000000019647b : inc dword ptr [rax + 0x17] ; cld ; jmp qword ptr [rax]
0x0000000000195d63 : inc dword ptr [rax + 0x1d] ; sti ; jmp rax
0x000000000018869f : inc dword ptr [rax + 0x40] ; hlt ; jmp rax
0x000000000019610f : inc dword ptr [rax + 0x40fffbc1] ; ret
0x000000000019652f : inc dword ptr [rax + 0x40fffc10] ; adc bh, ah ; call qword ptr [rax]
0x0000000000196807 : inc dword ptr [rax + 0x49] ; cld ; call rax
0x0000000000195cc7 : inc dword ptr [rax + 0x50fffaee] ; out dx, eax ; cli ; jmp qword ptr [rax]
0x0000000000195de3 : inc dword ptr [rax + 0x57] ; sti ; call qword ptr [rax + 0x20fffb58]
0x0000000000196b1b : inc dword ptr [rax + 0x6d] ; cld ; call rax
0x0000000000196cf3 : inc dword ptr [rax + 0x71] ; cld ; call rax
0x00000000001965d3 : inc dword ptr [rax + 6] ; cld ; call qword ptr [rax - 0x1f0003f9]
0x0000000000058338 : inc dword ptr [rax - 0x108543] ; jmp qword ptr [rax]
0x0000000000196407 : inc dword ptr [rax - 0x26] ; sti ; call qword ptr [rax - 0x1f000425]
0x00000000001963b3 : inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x00000000001965e3 : inc dword ptr [rax - 0x2f0003f5] ; or al, 0xfc ; jmp qword ptr [rax]
0x0000000000196417 : inc dword ptr [rax - 0x2f000421] ; loopne 0x196422 ; jmp qword ptr [rax]
0x00000000001963c3 : inc dword ptr [rax - 0x2f000428] ; fsincos ; jmp qword ptr [rax]
0x000000000019624b : inc dword ptr [rax - 0x2f00044d] ; mov ah, 0xfb ; jmp qword ptr [rax]
0x00000000001961f7 : inc dword ptr [rax - 0x2f000454] ; lodsd eax, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x0000000000195db3 : inc dword ptr [rax - 0x2f0004b9] ; sti ; jmp qword ptr [rax]
0x000000000019617f : inc dword ptr [rax - 0x38] ; sti ; call qword ptr [rax]
0x00000000001960db : inc dword ptr [rax - 0x39] ; sti ; jmp qword ptr [rax]
0x00000000001960f7 : inc dword ptr [rax - 0x3b] ; sti ; jmp qword ptr [rax]
0x0000000000196197 : inc dword ptr [rax - 0x3c] ; sti ; jmp qword ptr [rax]
0x0000000000196113 : inc dword ptr [rax - 0x3d] ; sti ; jmp qword ptr [rax]
0x0000000000196227 : inc dword ptr [rax - 0x44] ; sti ; call qword ptr [rax - 0x2f000443]
0x0000000000195d27 : inc dword ptr [rax - 0x4f0004fc] ; idiv dl ; jmp qword ptr [rax]
0x0000000000187547 : inc dword ptr [rax - 0x4f000e04] ; cld ; int1 ; jmp rax
0x000000000019623b : inc dword ptr [rax - 0x52] ; sti ; call qword ptr [rax - 0x1f000451]
0x000000000004d8f9 : inc dword ptr [rax - 0x55f43] ; jmp qword ptr [rax]
0x000000000004b4a1 : inc dword ptr [rax - 0x56c43] ; jmp qword ptr [rax]
0x0000000000197013 : inc dword ptr [rax - 0x6c] ; cld ; call rax
0x000000000019722b : inc dword ptr [rax - 0x6f] ; cld ; jmp rax
0x0000000000195f57 : inc dword ptr [rax - 0x70] ; std ; call rax
0x0000000000196287 : inc dword ptr [rax - 0xb] ; sti ; inc dword ptr [rax - 9] ; sti ; call rax
0x000000000019657f : inc dword ptr [rax - 1] ; sti ; call qword ptr [rax - 0x1f000400]
0x0000000000187557 : inc dword ptr [rax - 3] ; int1 ; push qword ptr [rax - 3] ; int1 ; jmp qword ptr [rax]
0x0000000000195cf7 : inc dword ptr [rax - 7] ; cli ; push qword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x000000000019628b : inc dword ptr [rax - 9] ; sti ; call rax
0x00000000001964d3 : inc dword ptr [rax] ; adc edi, esp ; jmp rax
0x00000000000ed0fb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000000000013519b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8348
0x000000000017207d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016f2b7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000019c5f5 : inc dword ptr [rax] ; add byte ptr [rcx + rcx - 5], ah ; call rsp
0x0000000000034d2c : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000001875cb : inc dword ptr [rax] ; add dl, dh ; jmp qword ptr [rax]
0x000000000018761b : inc dword ptr [rax] ; add edx, esi ; call qword ptr [rax]
0x000000000019661f : inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc46]
0x00000000001967f7 : inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc4a]
0x0000000000195ce7 : inc dword ptr [rax] ; cmc ; cli ; jmp qword ptr [rax]
0x0000000000196867 : inc dword ptr [rax] ; cmp al, 0xfc ; push qword ptr [rax + 0x3b] ; cld ; jmp rsi
0x000000000019619f : inc dword ptr [rax] ; enter -5, -0x30 ; leave ; sti ; call rax
0x0000000000187283 : inc dword ptr [rax] ; fdivr st(1), st(0) ; call qword ptr [rax]
0x00000000001872e7 : inc dword ptr [rax] ; fdivrp st(1) ; jmp qword ptr [rax]
0x0000000000188b13 : inc dword ptr [rax] ; hlt ; inc dword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000188b17 : inc dword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x0000000000196377 : inc dword ptr [rax] ; in al, dx ; sti ; jmp rax
0x00000000001962f7 : inc dword ptr [rax] ; in eax, dx ; sti ; jmp rax
0x0000000000196d23 : inc dword ptr [rax] ; insb byte ptr [rdi], dx ; cld ; call qword ptr [rax + 0x20fffc6b]
0x000000000018b743 : inc dword ptr [rax] ; mov edi, edx ; inc dword ptr [rax] ; mov edi, edx ; jmp qword ptr [rax]
0x000000000018b747 : inc dword ptr [rax] ; mov edi, edx ; jmp qword ptr [rax]
0x000000000018b723 : inc dword ptr [rax] ; movsxd rdi, edx ; call qword ptr [rax]
0x0000000000119190 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000196b0b : inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffc6e]
0x00000000001875ab : inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x00000000000ff374 : inc dword ptr [rax] ; ret
0x000000000019649f : inc dword ptr [rax] ; sbb esp, edi ; jmp rax
0x0000000000195d07 : inc dword ptr [rax] ; std ; cli ; push rax ; std ; cli ; jmp rax
0x00000000001871cf : inc dword ptr [rax] ; xchg ah, bh ; push qword ptr [rax - 0x79] ; cld ; jmp rax
0x000000000019721b : inc dword ptr [rax] ; xchg eax, ebx ; cld ; call qword ptr [rax + 0x20fffc92]
0x0000000000197003 : inc dword ptr [rax] ; xchg eax, esi ; cld ; call qword ptr [rax + 0x20fffc95]
0x000000000005ea36 : inc dword ptr [rbp + 0x4e0f44c0] ; loopne 0x5ea2f ; ret 0xfffe
0x0000000000034f48 : inc dword ptr [rbp + 0xf595ac0] ; xchg eax, esp ; ret 0x2cdb
0x0000000000124553 : inc dword ptr [rbp + 1] ; ret 0x3941
0x000000000019939b : inc dword ptr [rbp + rdx + 0x45c40001] ; int1 ; call rsp
0x0000000000197187 : inc dword ptr [rbp + rdx*4 - 4] ; call rsp
0x000000000003a4e3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x000000000019b5ab : inc dword ptr [rbp - 0x637bffff] ; clc ; call rsp
0x00000000000fb86c : inc dword ptr [rbp - 0x76608a40] ; out dx, eax ; call 0xf7b09
0x0000000000060e7b : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; mov byte ptr [rsi], bh ; ret
0x0000000000060ed4 : inc dword ptr [rbp - 0x7b] ; in al, 0xf ; test ch, ah ; ret 0xffff
0x00000000000ffe2f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ffe7a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000000c44ff : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000019c023 : inc dword ptr [rbx + rsi + 0x33440002] ; cli ; jmp rsp
0x0000000000056aff : inc dword ptr [rbx - 0x112743] ; jmp qword ptr [rax]
0x000000000009a350 : inc dword ptr [rbx - 0x16fe67bb] ; ret
0x00000000000332ae : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000019bdd3 : inc dword ptr [rbx - 0x32bfffe] ; stc ; call rsp
0x00000000000d120d : inc dword ptr [rbx - 0x76be0008] ; ret
0x0000000000057700 : inc dword ptr [rbx - 0x7bf00008] ; ret 2
0x0000000000188443 : inc dword ptr [rbx - 0x7c000c29] ; xlatb ; jmp qword ptr [rcx]
0x000000000012385f : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003ad76 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000a9b88 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a9aaf : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000b8270 : inc dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x0000000000125620 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x000000000019b783 : inc dword ptr [rcx + rsi*8 + 0xec40001] ; stc ; call rsp
0x0000000000195ea3 : inc dword ptr [rcx - 0x6e] ; std ; jmp rcx
0x0000000000031d5c : inc dword ptr [rcx - 0x75] ; add ecx, ebp ; ret 0xfff4
0x0000000000195e3f : inc dword ptr [rcx - 0x76] ; std ; call qword ptr [rax]
0x00000000000d0baa : inc dword ptr [rcx - 0x77] ; ret
0x000000000005ca39 : inc dword ptr [rcx - 0x77] ; ret 0x850f
0x00000000000d9c0c : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x0000000000067030 : inc dword ptr [rcx - 0x77] ; vpsrld xmm13, xmm9, xmm1 ; pop rdx ; ret 0xffff
0x0000000000030af1 : inc dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000051da4 : inc dword ptr [rcx - 0x7d] ; ret 0xc701
0x0000000000123391 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000005521d : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001864bf : inc dword ptr [rcx] ; cmc ; in eax, dx ; call qword ptr [rdx]
0x00000000001735c9 : inc dword ptr [rcx] ; ja 0x1735d4 ; ret
0x000000000005d151 : inc dword ptr [rcx] ; jmp 0x5d11a
0x0000000000195e93 : inc dword ptr [rcx] ; nop ; std ; call qword ptr [rcx + 0x21fffd90]
0x00000000000d55aa : inc dword ptr [rcx] ; ret 0x5389
0x00000000000c5062 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x00000000000e3db6 : inc dword ptr [rdi] ; jbe 0xe3dc9 ; mov eax, 0xc ; ret
0x00000000001968eb : inc dword ptr [rdx + 0x3b] ; cld ; call rdx
0x00000000001966db : inc dword ptr [rdx + 0x47] ; cld ; call rdx
0x0000000000196bc7 : inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x000000000019b203 : inc dword ptr [rdx + rcx*8 + 0xec40001] ; clc ; call rsp
0x00000000001970bf : inc dword ptr [rdx - 0x6a] ; cld ; call rdx
0x00000000001966cb : inc dword ptr [rdx] ; cld ; call qword ptr [rdx + 0x22fffc48]
0x0000000000196bb7 : inc dword ptr [rdx] ; jno 0x196bbf ; call qword ptr [rdx + 0x22fffc70]
0x000000000014b1bd : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000196637 : inc dword ptr [rsi + 0x4b] ; cld ; call rsi
0x0000000000196b63 : inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x00000000001967a3 : inc dword ptr [rsi + rax*2 - 4] ; call rsp
0x0000000000196c8f : inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x00000000001981eb : inc dword ptr [rsi + rbx*4 - 0x546c0000] ; jmp 0x1981fb
0x000000000019705b : inc dword ptr [rsi - 0x6d] ; cld ; call rsi
0x00000000001862ff : inc dword ptr [rsi] ; in al, dx ; in eax, dx ; call rsp
0x0000000000196b53 : inc dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc6d]
0x000000000019704b : inc dword ptr [rsi] ; xchg eax, ebp ; cld ; call qword ptr [rsi + 0x26fffc94]
0x0000000000195edb : inc dword ptr [rsi] ; xchg eax, ecx ; std ; call qword ptr [rsi + 0x26fffd91]
0x0000000000189147 : inc dword ptr [rsp + rbp*8] ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp qword ptr [rsi]
0x0000000000189073 : inc dword ptr [rsp + rbp*8] ; hlt ; inc dword ptr [rsp + rbp*8] ; hlt ; jmp rsp
0x000000000018914b : inc dword ptr [rsp + rbp*8] ; hlt ; jmp qword ptr [rsi]
0x0000000000189077 : inc dword ptr [rsp + rbp*8] ; hlt ; jmp rsp
0x000000000019c03b : inc dword ptr [rsp + rsi + 0x37040002] ; cli ; jmp rsp
0x000000000018760b : inc eax ; add dl, dh ; call rax
0x00000000001872b3 : inc eax ; fdivr st(1), st(0) ; call rax
0x0000000000196427 : inc eax ; in al, -5 ; call qword ptr [rax]
0x0000000000186d7f : inc eax ; je 0x186d75 ; call rax
0x000000000018711f : inc eax ; jge 0x187118 ; call rax
0x0000000000196207 : inc eax ; mov cl, 0xfb ; call qword ptr [rax]
0x000000000019659f : inc eax ; or esp, edi ; call qword ptr [rax]
0x0000000000187383 : inc eax ; out -0xf, eax ; call rax
0x00000000001875c3 : inc eax ; push rcx ; jmp rax
0x0000000000034d49 : inc eax ; shr eax, 0x1f ; ret
0x0000000000187507 : inc eax ; stc ; int1 ; jmp rax
0x000000000018757f : inc eax ; std ; int1 ; call rax
0x0000000000195dc3 : inc eax ; sti ; call qword ptr [rax]
0x0000000000187537 : inc eax ; sti ; int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x00000000001965b3 : inc eax ; sti ; sti ; call qword ptr [rax]
0x0000000000189ad9 : inc ebx ; add dh, bh ; jmp rdi
0x000000000007639c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000171b69 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000187e03 : inc edx ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000187dff : inc edx ; outsb dx, byte ptr [rsi] ; inc edx ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000187d7b : inc edx ; outsb dx, byte ptr [rsi] ; jmp rsp
0x000000000005b216 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000fe6a9 : inc esi ; jmp qword ptr [r8]
0x0000000000198f43 : inc esp ; cli ; add byte ptr [rax], al ; and al, 0x63 ; out dx, eax ; jmp rsp
0x000000000019c55b : inc esp ; mov ebx, 0xc8040001 ; cli ; jmp rsp
0x00000000001986f3 : inc esp ; ret 0
0x000000000019b25b : inc esp ; retf ; add dword ptr [rax], eax ; adc al, r15b ; jmp rsp
0x00000000000d55a9 : inc qword ptr [rcx] ; ret 0x5389
0x00000000001a8ca0 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add ah, bh ; ret
0x0000000000199a64 : insb byte ptr [rdi], dx ; add dword ptr [r8], eax ; hlt ; pop rsp ; call rsp
0x0000000000097070 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000146134 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000199fa5 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; push rsp ; cld ; cmc ; jmp rsp
0x00000000001b1314 : insb byte ptr [rdi], dx ; add qword ptr [rax], rax ; js 0x1b138a ; cmc ; jmp qword ptr [rcx]
0x0000000000034dcb : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000034e5a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000034e3a : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000003500a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000034e89 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034d6a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001bc114 : insb byte ptr [rdi], dx ; clc ; add dword ptr [rax], eax ; clc ; call qword ptr [rax]
0x00000000001bc341 : insb byte ptr [rdi], dx ; clc ; call qword ptr [rax]
0x0000000000196d25 : insb byte ptr [rdi], dx ; cld ; call qword ptr [rax + 0x20fffc6b]
0x0000000000196b65 : insb byte ptr [rdi], dx ; cld ; call rsi
0x0000000000196b61 : insb byte ptr [rdi], dx ; cld ; inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x00000000001b1481 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001853de : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000019b564 : insb byte ptr [rdi], dx ; jrcxz 0x19b56f ; add byte ptr [rcx + rdx*4 - 8], al ; call rsp
0x00000000001319d2 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x00000000001a6d14 : insb byte ptr [rdi], dx ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fadd dword ptr [rbx - 0x12] ; call qword ptr [rax]
0x00000000001a0bc8 : insb byte ptr [rdi], dx ; ret
0x00000000001b9c14 : insb byte ptr [rdi], dx ; rol dword ptr [rcx], cl ; add al, bh ; fcompi st(7) ; jmp rdx
0x000000000019ba01 : insb byte ptr [rdi], dx ; stc ; call rsp
0x00000000000b5398 : insb byte ptr [rdi], dx ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001aa014 : insb byte ptr [rdi], dx ; xlatb ; add byte ptr [rax], al ; call 0x221a9165
0x00000000001afa14 : insb byte ptr [rdi], dx ; xor dword ptr [rcx], eax ; add al, bh ; clc ; hlt ; jmp rcx
0x0000000000148da0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007797f : insd dword ptr [rdi], dx ; add byte ptr [r8], r8b ; mov edx, eax ; jmp 0x7792b
0x000000000009788f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000149ca0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000196bd9 : insd dword ptr [rdi], dx ; cld ; call qword ptr [rdx]
0x0000000000196b1d : insd dword ptr [rdi], dx ; cld ; call rax
0x0000000000196b19 : insd dword ptr [rdi], dx ; cld ; inc dword ptr [rax + 0x6d] ; cld ; call rax
0x0000000000196b59 : insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rsi]
0x0000000000196d19 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x0000000000187181 : insd dword ptr [rdi], dx ; cld ; push rax ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001b1549 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x000000000010477f : insd dword ptr [rdi], dx ; enter -0x1518, 0x78 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d8002 : insd dword ptr [rdi], dx ; or byte ptr [rax - 0x77], cl ; ret
0x000000000018650d : insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x0000000000186501 : insd dword ptr [rdi], dx ; out dx, al ; call rax
0x00000000001853df : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000018378d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x000000000004df3b : insd dword ptr [rdi], dx ; ret 0xffff
0x000000000018469f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000002d6f7 : int 0x70
0x00000000000c73ef : int 0x80
0x000000000009c8b1 : int 0xcd
0x000000000005d1a1 : int 0xf2
0x00000000001884b1 : int 0xf3
0x00000000001436af : int 0xfa
0x000000000007f066 : int 0xff
0x000000000000386b : int 3
0x000000000012e3ab : int1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001aba3d : int1 ; add byte ptr [rax], al ; rol byte ptr [rdx + rsi*8 - 1], 1 ; ret 0
0x000000000004f76e : int1 ; add eax, r8d ; ret
0x00000000001873e2 : int1 ; call qword ptr [rax - 0x4f000e17]
0x0000000000187396 : int1 ; call qword ptr [rax]
0x00000000001aa68a : int1 ; call qword ptr [rbx]
0x00000000001a9c3a : int1 ; call qword ptr [rcx]
0x00000000001aa10a : int1 ; call qword ptr [rdx]
0x00000000001a9a12 : int1 ; call qword ptr [rsi]
0x000000000018743a : int1 ; call rax
0x00000000001aa81a : int1 ; call rdi
0x00000000001993a2 : int1 ; call rsp
0x00000000001106c8 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000102b9c : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102ba8 ; call rbx
0x0000000000102e4f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102e5b ; call rbx
0x000000000011da4b : int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000102a5a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102e5d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102a67 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102a73 ; call rbx
0x0000000000102b8e : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102b9a ; call rbx
0x0000000000102cd1 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102cdd ; call rbx
0x0000000000102e41 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102e4d ; call rbx
0x0000000000199362 : int1 ; dec esp ; adc al, 1 ; add byte ptr [rdx + rax*2], dh ; int1 ; jmp rsp
0x00000000000bb3f5 : int1 ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x0000000000198749 : int1 ; in eax, dx ; call rsp
0x0000000000187546 : int1 ; inc dword ptr [rax - 0x4f000e04] ; cld ; int1 ; jmp rax
0x0000000000187556 : int1 ; inc dword ptr [rax - 3] ; int1 ; push qword ptr [rax - 3] ; int1 ; jmp qword ptr [rax]
0x00000000001875ca : int1 ; inc dword ptr [rax] ; add dl, dh ; jmp qword ptr [rax]
0x0000000000187282 : int1 ; inc dword ptr [rax] ; fdivr st(1), st(0) ; call qword ptr [rax]
0x00000000001872e6 : int1 ; inc dword ptr [rax] ; fdivrp st(1) ; jmp qword ptr [rax]
0x00000000001875aa : int1 ; inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x000000000019939a : int1 ; inc dword ptr [rbp + rdx + 0x45c40001] ; int1 ; call rsp
0x00000000001872b2 : int1 ; inc eax ; fdivr st(1), st(0) ; call rax
0x000000000018711e : int1 ; inc eax ; jge 0x187119 ; call rax
0x0000000000187382 : int1 ; inc eax ; out -0xf, eax ; call rax
0x00000000001875c2 : int1 ; inc eax ; push rcx ; jmp rax
0x0000000000187506 : int1 ; inc eax ; stc ; int1 ; jmp rax
0x000000000018757e : int1 ; inc eax ; std ; int1 ; call rax
0x0000000000187536 : int1 ; inc eax ; sti ; int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x00000000001ab079 : int1 ; int1 ; jmp rdi
0x000000000009f169 : int1 ; je 0x9f168 ; cmp ecx, edx ; je 0x9f168 ; ret
0x0000000000187372 : int1 ; jmp qword ptr [rax - 0x2f000e19]
0x00000000001872da : int1 ; jmp qword ptr [rax - 0x3f000e23]
0x000000000018728a : int1 ; jmp qword ptr [rax]
0x00000000001a9bba : int1 ; jmp qword ptr [rcx]
0x00000000001872e2 : int1 ; jmp rax
0x00000000000a9b45 : int1 ; jmp rcx
0x00000000001ab07a : int1 ; jmp rdi
0x00000000001992ea : int1 ; jmp rsp
0x000000000007cd3b : int1 ; jne 0x7cd36 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000003a57 : int1 ; mov dl, 0x1e ; ret
0x000000000015a3ab : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152e2f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012e7fa : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011451e : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000c4089 : int1 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000171643 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000a9b8b : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000018736e : int1 ; push qword ptr [rax - 0x19] ; int1 ; jmp qword ptr [rax - 0x2f000e19]
0x000000000018754a : int1 ; push qword ptr [rax - 0x1f000e04] ; cld ; int1 ; call qword ptr [rax]
0x000000000018735e : int1 ; push qword ptr [rax - 0x1f000e1a] ; out 0xf1, al ; call qword ptr [rax]
0x000000000018757a : int1 ; push qword ptr [rax - 0x3f000e03] ; std ; int1 ; call rax
0x000000000018737e : int1 ; push qword ptr [rax - 0x3f000e19] ; out -0xf, eax ; call rax
0x00000000001872ae : int1 ; push qword ptr [rax - 0x3f000e24] ; fdivr st(1), st(0) ; call rax
0x000000000018711a : int1 ; push qword ptr [rax - 0x3f000e83] ; jge 0x18711d ; call rax
0x000000000018755a : int1 ; push qword ptr [rax - 3] ; int1 ; jmp qword ptr [rax]
0x00000000001874ee : int1 ; push rax ; clc ; int1 ; call qword ptr [rax]
0x0000000000187326 : int1 ; push rax ; in al, -0xf ; call qword ptr [rax]
0x0000000000187346 : int1 ; push rax ; in eax, -0xf ; call qword ptr [rax]
0x0000000000187306 : int1 ; push rax ; jrcxz 0x187301 ; call qword ptr [rax]
0x0000000000187586 : int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x000000000018753a : int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x00000000000025ef : int1 ; ret
0x00000000000f7b73 : int1 ; ret 0x2c
0x0000000000184db6 : int1 ; ret 0x5803
0x00000000001962a1 : int1 ; sti ; jmp qword ptr [rax]
0x0000000000196365 : int1 ; sti ; jmp rax
0x0000000000171647 : int1 ; sub eax, edx ; ret
0x00000000001988f5 : iretd ; add byte ptr [rax], al ; mov ah, 0x1a ; out dx, al ; jmp rsp
0x000000000019b681 : iretd ; clc ; jmp rsp
0x0000000000198691 : iretd ; in eax, dx ; jmp rsp
0x000000000013368b : iretd ; jmp r8
0x00000000000893f9 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000012b7b5 : iretd ; mov r8, qword ptr [rax + 0x18] ; jmp r8
0x0000000000198d01 : iretd ; out dx, al ; jmp rsp
0x0000000000105357 : ja 0x105363 ; ret
0x0000000000106e53 : ja 0x106e64 ; pop rbx ; pop rbp ; ret
0x00000000001070c6 : ja 0x1070d2 ; ret
0x0000000000107188 : ja 0x107193 ; ret
0x00000000001071c2 : ja 0x1071d3 ; ret
0x0000000000107d73 : ja 0x107d82 ; ret
0x0000000000107ef3 : ja 0x107f02 ; ret
0x000000000010838d : ja 0x108392 ; ret
0x000000000010842f : ja 0x10843a ; ret
0x00000000001084df : ja 0x1084ea ; ret
0x0000000000115350 : ja 0x11535b ; ret
0x00000000001153cd : ja 0x1153ed ; ret
0x00000000001172d2 : ja 0x1172e3 ; ret
0x0000000000117382 : ja 0x117393 ; ret
0x0000000000118dc7 : ja 0x118dda ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000001244c3 : ja 0x1244c8 ; ret
0x00000000001247f0 : ja 0x1247db ; mov eax, 0xffffffff ; ret
0x0000000000124899 : ja 0x1248b0 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012e81d : ja 0x12e80e ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013b4ba : ja 0x13b4db ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000013b4e7 : ja 0x13b503 ; ret
0x000000000013b65f : ja 0x13b682 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013b8f0 : ja 0x13b920 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001735cb : ja 0x1735d2 ; ret
0x0000000000184e24 : ja 0x184dab ; ret 0x48f
0x00000000001871a5 : ja 0x1871a5 ; call qword ptr [rax]
0x0000000000197b0d : ja 0x197b15 ; add byte ptr [rcx + rbx*8 - 0x17], ah ; call rsp
0x00000000001a4fc9 : ja 0x1a4fba ; call qword ptr [rcx]
0x00000000001b1879 : ja 0x1b1872 ; jmp qword ptr [rcx]
0x000000000002df0d : ja 0x2df28 ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000003526d : ja 0x35293 ; ret
0x0000000000035566 : ja 0x35573 ; ret
0x00000000000355d2 : ja 0x355e3 ; ret
0x000000000003561c : ja 0x35622 ; ret
0x00000000000356a2 : ja 0x356b3 ; ret
0x00000000000038a6 : ja 0x3908 ; clc ; salc ; jb 0x392e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000401da : ja 0x401e4 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000047a9e : ja 0x47af0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004f757 : ja 0x4f73d ; mov eax, r8d ; ret
0x0000000000074456 : ja 0x74463 ; ret
0x0000000000077ea5 : ja 0x77eca ; std ; dec dword ptr [rax - 0x7f] ; ret
0x000000000008f238 : ja 0x8f243 ; ret
0x00000000000943f8 : ja 0x943f2 ; ret 0x7401
0x0000000000096dfd : ja 0x96dde ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ff8c : ja 0x9ffa5 ; mov rax, rdi ; ret
0x00000000000a4e97 : ja 0xa4e9d ; ret
0x00000000000a4eb3 : ja 0xa4ebd ; mov dword ptr [rdi], ecx ; ret
0x00000000000a4ef4 : ja 0xa4f03 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f79 : ja 0xa4f8d ; ret
0x00000000000a4fcf : ja 0xa4fe7 ; ret
0x00000000000a5051 : ja 0xa506d ; ret
0x00000000000a6497 : ja 0xa64a1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a64b3 : ja 0xa64c1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6504 : ja 0xa6517 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a65e9 : ja 0xa6601 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a665f : ja 0xa667b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a66e1 : ja 0xa6701 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a7f77 : ja 0xa7f7d ; ret
0x00000000000a7f93 : ja 0xa7f9d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a7fd4 : ja 0xa7fe3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8059 : ja 0xa806d ; ret
0x00000000000a80af : ja 0xa80c7 ; ret
0x00000000000a8131 : ja 0xa814d ; ret
0x00000000000a8a47 : ja 0xa8a4d ; ret
0x00000000000a8a63 : ja 0xa8a6d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8aa4 : ja 0xa8ab3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8b29 : ja 0xa8b3d ; ret
0x00000000000a8b7f : ja 0xa8b97 ; ret
0x00000000000a8c01 : ja 0xa8c1d ; ret
0x00000000000a9e69 : ja 0xa9e89 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000aab85 : ja 0xaabb5 ; or al, 0 ; ret
0x00000000000ab6da : ja 0xab6ea ; cmove rax, rcx ; ret
0x00000000000abaec : ja 0xabafc ; mov eax, edi ; ret
0x00000000000c7f87 : ja 0xc7f92 ; ret
0x00000000000ca7a6 : ja 0xca7b2 ; ret
0x00000000000ca850 : ja 0xca85a ; ret
0x00000000000ca951 : ja 0xca95a ; ret
0x00000000000cbb99 : ja 0xcbba2 ; ret
0x00000000000cbc09 : ja 0xcbc12 ; ret
0x00000000000cbe7d : ja 0xcbe82 ; ret
0x00000000000cbefd : ja 0xcbf02 ; ret
0x00000000000d6c46 : ja 0xd6c57 ; mov eax, 2 ; ret
0x00000000000f6231 : ja 0xf623b ; xor eax, eax ; ret
0x00000000000f6c6e : ja 0xf6c04 ; pop rbx ; pop rbp ; ret
0x00000000000f6ca2 : ja 0xf6c93 ; ret
0x00000000000f6e1b : ja 0xf6e23 ; ret
0x00000000000f6e6a : ja 0xf6e73 ; ret
0x00000000000f6ebb : ja 0xf6ec3 ; ret
0x00000000000f6f13 : ja 0xf6f23 ; ret
0x00000000000f6f77 : ja 0xf6f83 ; ret
0x00000000000f6fd0 : ja 0xf6fdb ; ret
0x00000000000f71af : ja 0xf71bb ; ret
0x00000000000f7316 : ja 0xf7323 ; ret
0x00000000000f7869 : ja 0xf78a3 ; ret
0x00000000000f790d : ja 0xf7957 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fb733 : ja 0xfb748 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000fbc38 : ja 0xfbc43 ; ret
0x00000000000fbc8c : ja 0xfbc93 ; ret
0x00000000000fc3e0 : ja 0xfc3ea ; ret
0x00000000000fc4c3 : ja 0xfc4cf ; ret
0x00000000000fc519 : ja 0xfc525 ; ret
0x00000000000fc924 : ja 0xfc932 ; ret
0x00000000000fcfb6 : ja 0xfcfe3 ; ret
0x00000000000fd1c0 : ja 0xfd1ca ; ret
0x00000000000fd270 : ja 0xfd27a ; ret
0x00000000000fd31b : ja 0xfd322 ; ret
0x00000000000fd38b : ja 0xfd392 ; ret
0x00000000000fd40c : ja 0xfd412 ; ret
0x00000000000fd4bc : ja 0xfd4c2 ; ret
0x00000000000fda0c : ja 0xfda13 ; ret
0x00000000000ff06d : ja 0xff07b ; ret
0x00000000000ff101 : ja 0xff10b ; ret
0x00000000000ff1a1 : ja 0xff1ab ; ret
0x00000000000ff1f5 : ja 0xff203 ; ret
0x00000000000ff2d9 : ja 0xff2e5 ; ret
0x00000000000022d3 : ja 0xffffffffd6104b5f ; ret
0x00000000001015af : jae 0x1015b4 ; ret
0x0000000000101730 : jae 0x101735 ; ret
0x000000000010175d : jae 0x101762 ; ret
0x000000000010178d : jae 0x101792 ; ret
0x00000000001017c6 : jae 0x1017fb ; ret
0x000000000010181d : jae 0x101822 ; ret
0x000000000010184d : jae 0x101852 ; ret
0x0000000000101880 : jae 0x101885 ; ret
0x00000000001018ad : jae 0x1018b2 ; ret
0x00000000001018dd : jae 0x1018e2 ; ret
0x000000000010190d : jae 0x101912 ; ret
0x000000000010193d : jae 0x101942 ; ret
0x00000000001045fe : jae 0x104639 ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000105c40 : jae 0x105c45 ; ret
0x0000000000105c6d : jae 0x105c72 ; ret
0x0000000000105c9d : jae 0x105ca2 ; ret
0x0000000000105cd0 : jae 0x105cd5 ; ret
0x0000000000105d00 : jae 0x105d05 ; ret
0x0000000000105d2d : jae 0x105d32 ; ret
0x0000000000105d60 : jae 0x105d65 ; ret
0x0000000000105d8d : jae 0x105d92 ; ret
0x0000000000105dbd : jae 0x105dc2 ; ret
0x0000000000105df0 : jae 0x105df5 ; ret
0x0000000000105e1d : jae 0x105e22 ; ret
0x0000000000105e50 : jae 0x105e55 ; ret
0x0000000000106dbd : jae 0x106dc2 ; ret
0x0000000000106ded : jae 0x106df2 ; ret
0x0000000000106f26 : jae 0x106f5b ; ret
0x0000000000106f8d : jae 0x106f92 ; ret
0x0000000000106fbd : jae 0x106fc2 ; ret
0x0000000000106fed : jae 0x106ff2 ; ret
0x000000000010701d : jae 0x107022 ; ret
0x0000000000107250 : jae 0x107255 ; ret
0x000000000010727d : jae 0x107282 ; ret
0x00000000001072ad : jae 0x1072b2 ; ret
0x00000000001072f0 : jae 0x1072f5 ; ret
0x000000000010731d : jae 0x107322 ; ret
0x000000000010734d : jae 0x107352 ; ret
0x000000000010737d : jae 0x107382 ; ret
0x00000000001073ad : jae 0x1073b2 ; ret
0x00000000001073dd : jae 0x1073e2 ; ret
0x000000000010740d : jae 0x107412 ; ret
0x000000000010743d : jae 0x107442 ; ret
0x000000000010746d : jae 0x107472 ; ret
0x00000000001074a0 : jae 0x1074a5 ; ret
0x00000000001074d9 : jae 0x107511 ; ret
0x000000000010752d : jae 0x107532 ; ret
0x0000000000107560 : jae 0x107565 ; ret
0x000000000010758d : jae 0x107592 ; ret
0x00000000001075bd : jae 0x1075c2 ; ret
0x00000000001075ed : jae 0x1075f2 ; ret
0x000000000010761d : jae 0x107622 ; ret
0x000000000010764d : jae 0x107652 ; ret
0x0000000000107680 : jae 0x107685 ; ret
0x00000000001076b0 : jae 0x1076b5 ; ret
0x00000000001076dd : jae 0x1076e2 ; ret
0x000000000010770d : jae 0x107712 ; ret
0x000000000010773d : jae 0x107742 ; ret
0x0000000000107770 : jae 0x107775 ; ret
0x00000000001077a0 : jae 0x1077a5 ; ret
0x00000000001077d0 : jae 0x1077d5 ; ret
0x0000000000107809 : jae 0x107841 ; ret
0x000000000010785d : jae 0x107862 ; ret
0x0000000000107899 : jae 0x1078d1 ; ret
0x00000000001078ed : jae 0x1078f2 ; ret
0x000000000010791d : jae 0x107922 ; ret
0x0000000000107959 : jae 0x107991 ; ret
0x00000000001079ad : jae 0x1079b2 ; ret
0x00000000001079e0 : jae 0x1079e5 ; ret
0x0000000000107a0d : jae 0x107a12 ; ret
0x0000000000107a3d : jae 0x107a42 ; ret
0x0000000000107a70 : jae 0x107a75 ; ret
0x0000000000107a70 : jae 0x107a7a ; ret
0x0000000000107aa6 : jae 0x107adb ; ret
0x0000000000107ad6 : jae 0x107ae0 ; ret
0x0000000000107afd : jae 0x107b02 ; ret
0x0000000000107afd : jae 0x107b07 ; ret
0x0000000000107b30 : jae 0x107b35 ; ret
0x0000000000107b30 : jae 0x107b3a ; ret
0x0000000000107b60 : jae 0x107b65 ; ret
0x0000000000107bb6 : jae 0x107beb ; ret
0x0000000000107c0d : jae 0x107c12 ; ret
0x0000000000107c46 : jae 0x107c7b ; ret
0x0000000000107c9d : jae 0x107ca2 ; ret
0x0000000000107ccd : jae 0x107cd2 ; ret
0x0000000000107d00 : jae 0x107d05 ; ret
0x0000000000107d2d : jae 0x107d32 ; ret
0x0000000000107e29 : jae 0x107e61 ; ret
0x0000000000107e86 : jae 0x107ebb ; ret
0x0000000000107fa6 : jae 0x107fdb ; ret
0x0000000000108009 : jae 0x108041 ; ret
0x0000000000108060 : jae 0x108065 ; ret
0x000000000010808d : jae 0x108092 ; ret
0x00000000001080bd : jae 0x1080c2 ; ret
0x00000000001080f0 : jae 0x1080f5 ; ret
0x0000000000108649 : jae 0x108681 ; ret
0x00000000001086a9 : jae 0x1086e1 ; ret
0x00000000001086fd : jae 0x108702 ; ret
0x000000000010872d : jae 0x108732 ; ret
0x000000000010875d : jae 0x108762 ; ret
0x000000000010878d : jae 0x108792 ; ret
0x00000000001087c0 : jae 0x1087c5 ; ret
0x00000000001087f0 : jae 0x1087f5 ; ret
0x000000000010881d : jae 0x108822 ; ret
0x000000000010884d : jae 0x108852 ; ret
0x000000000010887d : jae 0x108882 ; ret
0x00000000001088ad : jae 0x1088b2 ; ret
0x000000000013b5c7 : jae 0x13b5d2 ; ret
0x000000000013b607 : jae 0x13b612 ; ret
0x000000000013fec0 : jae 0x13fec5 ; ret
0x000000000013ff10 : jae 0x13ff15 ; ret
0x0000000000142e44 : jae 0x142e27 ; mov eax, 1 ; ret
0x000000000017338c : jae 0x17339b ; call qword ptr [rbx]
0x000000000017338c : jae 0x17339f ; call qword ptr [rbx]
0x0000000000173f37 : jae 0x173f54 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000001833e2 : jae 0x1833c4 ; jo 0x183460 ; mov ebp, 0xfb67d10d ; ret
0x000000000018427e : jae 0x184259 ; push rsi ; pop rdx ; je 0x18424e ; ret 0xacfc
0x00000000001a31c7 : jae 0x1a31d5 ; ret
0x00000000001a3bf5 : jae 0x1a3bfd ; add byte ptr [rax], bl ; xor ch, ch ; jmp rbx
0x00000000001a3bf4 : jae 0x1a3bfe ; add byte ptr [rax], bl ; xor ch, ch ; jmp rbx
0x00000000001accb9 : jae 0x1accb0 ; call qword ptr [rsi]
0x000000000003559d : jae 0x355a2 ; ret
0x0000000000035c8d : jae 0x35c92 ; ret
0x0000000000046b57 : jae 0x46b60 ; xor eax, eax ; ret
0x000000000006c77d : jae 0x6c782 ; ret
0x000000000006c7b0 : jae 0x6c7b5 ; ret
0x000000000007a5d8 : jae 0x7a5e5 ; movzx eax, byte ptr [rax] ; ret
0x000000000007bfa3 : jae 0x7bf5a ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007d9eb : jae 0x7da15 ; movzx eax, byte ptr [rax] ; ret
0x00000000000bb24d : jae 0xbb252 ; ret
0x00000000000be20d : jae 0xbe212 ; ret
0x00000000000be23d : jae 0xbe242 ; ret
0x00000000000ca6fd : jae 0xca702 ; ret
0x00000000000ca910 : jae 0xca915 ; ret
0x00000000000ca9ed : jae 0xca9f2 ; ret
0x00000000000cabd6 : jae 0xcac0b ; ret
0x00000000000cac36 : jae 0xcac6b ; ret
0x00000000000cafc7 : jae 0xcafcc ; ret
0x00000000000cb04d : jae 0xcb052 ; ret
0x00000000000cbb5d : jae 0xcbb62 ; ret
0x00000000000cbd1d : jae 0xcbd22 ; ret
0x00000000000cbd4d : jae 0xcbd52 ; ret
0x00000000000cbdad : jae 0xcbdb2 ; ret
0x00000000000cbddd : jae 0xcbde2 ; ret
0x00000000000cbe0d : jae 0xcbe12 ; ret
0x00000000000cbe3d : jae 0xcbe42 ; ret
0x00000000000e2e6d : jae 0xe3049 ; movdqa xmm0, xmm2 ; jmp 0xe2e60
0x00000000000e3faf : jae 0xe3fbf ; mov byte ptr [rsi + rcx], al ; jmp 0xe3f7e
0x00000000000ea9bd : jae 0xea9c2 ; ret
0x00000000000ea9ed : jae 0xea9f2 ; ret
0x00000000000eaa1d : jae 0xeaa22 ; ret
0x00000000000eaa4d : jae 0xeaa52 ; ret
0x00000000000eaa7d : jae 0xeaa82 ; ret
0x00000000000eaaad : jae 0xeaab2 ; ret
0x00000000000eaadd : jae 0xeaae2 ; ret
0x00000000000eab0d : jae 0xeab12 ; ret
0x00000000000f5d39 : jae 0xf5d71 ; ret
0x00000000000f5d99 : jae 0xf5dd1 ; ret
0x00000000000f6d5a : jae 0xf6d63 ; mov eax, edx ; ret
0x00000000000f6d7d : jae 0xf6d82 ; ret
0x00000000000f701d : jae 0xf7022 ; ret
0x00000000000f704d : jae 0xf7052 ; ret
0x00000000000f711d : jae 0xf7122 ; ret
0x00000000000f714d : jae 0xf7152 ; ret
0x00000000000f720d : jae 0xf7212 ; ret
0x00000000000f723d : jae 0xf7242 ; ret
0x00000000000f7276 : jae 0xf72ab ; ret
0x00000000000f7486 : jae 0xf74bb ; ret
0x00000000000f74e6 : jae 0xf751b ; ret
0x00000000000f753d : jae 0xf7542 ; ret
0x00000000000f79cd : jae 0xf79d2 ; ret
0x00000000000f7b16 : jae 0xf7b4b ; ret
0x00000000000f7b46 : jae 0xf7b50 ; ret
0x00000000000f7b6d : jae 0xf7b72 ; ret
0x00000000000f7b9d : jae 0xf7ba2 ; ret
0x00000000000f7bcd : jae 0xf7bd2 ; ret
0x00000000000f7bfd : jae 0xf7c02 ; ret
0x00000000000f7c2d : jae 0xf7c32 ; ret
0x00000000000f7c66 : jae 0xf7c9b ; ret
0x00000000000f7cbd : jae 0xf7cc2 ; ret
0x00000000000f7ced : jae 0xf7cf2 ; ret
0x00000000000f84dd : jae 0xf84e2 ; ret
0x00000000000f850d : jae 0xf8512 ; ret
0x00000000000f853d : jae 0xf8542 ; ret
0x00000000000f8570 : jae 0xf8575 ; ret
0x00000000000f8b2d : jae 0xf8b32 ; ret
0x00000000000f8b60 : jae 0xf8b65 ; ret
0x00000000000f8b8d : jae 0xf8b92 ; ret
0x00000000000f8bbd : jae 0xf8bc2 ; ret
0x00000000000f8bed : jae 0xf8bf2 ; ret
0x00000000000f8c20 : jae 0xf8c25 ; ret
0x00000000000f8c4d : jae 0xf8c52 ; ret
0x00000000000f8c7d : jae 0xf8c82 ; ret
0x00000000000f8cad : jae 0xf8cb2 ; ret
0x00000000000fb8c6 : jae 0xfb8fb ; ret
0x00000000000fb954 : jae 0xfb9a7 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fbc00 : jae 0xfbc05 ; ret
0x00000000000fc379 : jae 0xfc3b1 ; ret
0x00000000000fcaed : jae 0xfcaf2 ; ret
0x00000000000fcb1d : jae 0xfcb22 ; ret
0x00000000000fcb4d : jae 0xfcb52 ; ret
0x00000000000fcefd : jae 0xfcf02 ; ret
0x00000000000fd0bd : jae 0xfd0c2 ; ret
0x00000000000fd0f6 : jae 0xfd12b ; ret
0x00000000000fd156 : jae 0xfd18b ; ret
0x00000000000fd64d : jae 0xfd652 ; ret
0x00000000000fd6ed : jae 0xfd6f2 ; ret
0x00000000000fd729 : jae 0xfd761 ; ret
0x00000000000fd87d : jae 0xfd882 ; ret
0x00000000000fd8ad : jae 0xfd8b2 ; ret
0x00000000000fd8e6 : jae 0xfd91b ; ret
0x00000000000fd93d : jae 0xfd942 ; ret
0x00000000000fd976 : jae 0xfd9ab ; ret
0x00000000000fd9cd : jae 0xfd9d2 ; ret
0x00000000000fdcbd : jae 0xfdcc2 ; ret
0x00000000000fdced : jae 0xfdcf2 ; ret
0x00000000000fdd1d : jae 0xfdd22 ; ret
0x00000000000ff22d : jae 0xff232 ; ret
0x00000000000ff25d : jae 0xff262 ; ret
0x000000000010e52b : jb 0x10e53f ; mov eax, 1 ; ret
0x0000000000124778 : jb 0x12476b ; mov eax, 0xffffffff ; ret
0x0000000000124777 : jb 0x12476c ; mov eax, 0xffffffff ; ret
0x00000000001280d0 : jb 0x1280dd ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000012e821 : jb 0x12e845 ; ret
0x000000000012e81b : jb 0x12e84d ; ja 0x12e810 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014d2c1 : jb 0x14d2aa ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d324 : jb 0x14d30d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014d3c8 : jb 0x14d3d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014d7b1 : jb 0x14d79a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d814 : jb 0x14d7fd ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014d8b8 : jb 0x14d8c4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014db54 : jb 0x14db3d ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014dbb4 : jb 0x14db9d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014dc58 : jb 0x14dc64 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000150e3a : jb 0x150e4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150f8a : jb 0x150f9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001510da : jb 0x1510ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015122a : jb 0x15123a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015137a : jb 0x15138a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001514ca : jb 0x1514da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015161a : jb 0x15162a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015176a : jb 0x15177a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001518ba : jb 0x1518ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151a0a : jb 0x151a1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b5a : jb 0x151b6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151caa : jb 0x151cba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151dfa : jb 0x151e0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f4a : jb 0x151f5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015209a : jb 0x1520aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015380a : jb 0x15381a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015395a : jb 0x15396a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153aaa : jb 0x153aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153bfa : jb 0x153c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153d4a : jb 0x153d5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e9a : jb 0x153eaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fea : jb 0x153ffa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015413a : jb 0x15414a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015428a : jb 0x15429a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543da : jb 0x1543ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015452a : jb 0x15453a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015467a : jb 0x15468a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001547ca : jb 0x1547da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015491a : jb 0x15492a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a6a : jb 0x154a7a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001561da : jb 0x1561ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015632a : jb 0x15633a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015647a : jb 0x15648a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001565ca : jb 0x1565da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015671a : jb 0x15672a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015686a : jb 0x15687a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001569ba : jb 0x1569ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156b0a : jb 0x156b1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c5a : jb 0x156c6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156daa : jb 0x156dba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156efa : jb 0x156f0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015704a : jb 0x15705a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015719a : jb 0x1571aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572ea : jb 0x1572fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015743a : jb 0x15744a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001722b7 : jb 0x1722c7 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001722c3 : jb 0x1722d9 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000001722d3 : jb 0x1722db ; mov byte ptr [rdi], cl ; ret
0x00000000001733bb : jb 0x1733b1 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000173f49 : jb 0x173f48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018632c : jb 0x18631a ; in eax, dx ; call qword ptr [rbx]
0x0000000000186d39 : jb 0x186d2b ; call rax
0x0000000000186d79 : jb 0x186d6b ; call rax
0x0000000000186da1 : jb 0x186d93 ; call rax
0x0000000000186db9 : jb 0x186daf ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x00000000001b3af5 : jb 0x1b3afe ; add byte ptr [rax], cl ; cmp dh, dh ; call qword ptr [rax]
0x00000000001b3af4 : jb 0x1b3aff ; add byte ptr [rax], cl ; cmp dh, dh ; call qword ptr [rax]
0x00000000001b3b0d : jb 0x1b3b16 ; add byte ptr [rax], al ; cmp dh, dh ; call qword ptr [rax]
0x00000000001b3b0c : jb 0x1b3b17 ; add byte ptr [rax], al ; cmp dh, dh ; call qword ptr [rax]
0x00000000001b3b75 : jb 0x1b3b7e ; add byte ptr [rax], bh ; cmp dh, dh ; call qword ptr [rax]
0x0000000000002b64 : jb 0x2b04 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002dede : jb 0x2deeb ; ret
0x00000000000038aa : jb 0x392a ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000072645 : jb 0x7266b ; mov dword ptr [rcx], eax ; ret
0x000000000007418c : jb 0x74185 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a6e0a : jb 0xa6e19 ; add byte ptr [rax], al ; ret
0x00000000000fcbad : jb 0xfcbe0 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000fe5e8 : jb 0xfe61b ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000001152b4 : jbe 0x115288 ; cmp dl, 0x2e ; cmove eax, r10d ; jmp 0x1152a3
0x000000000012ddd3 : jbe 0x12dde7 ; mov eax, 2 ; ret
0x000000000013b8ed : jbe 0x13b909 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x00000000001860f4 : jbe 0x18615c ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001871a1 : jbe 0x1871a5 ; push rax ; ja 0x1871a9 ; call qword ptr [rax]
0x0000000000187c68 : jbe 0x187ce2 ; jmp rdx
0x00000000001a71a9 : jbe 0x1a719b ; call qword ptr [rax]
0x0000000000002bf3 : jbe 0x2bc7 ; clc ; ret
0x0000000000046f6b : jbe 0x46fe1 ; xor eax, eax ; ret
0x00000000000494ec : jbe 0x494e6 ; nop ; pop rbx ; ret
0x000000000007369a : jbe 0x73610 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000008b759 : jbe 0x8b7a8 ; bsf eax, edx ; ret
0x000000000008eb26 : jbe 0x8eb65 ; add rax, rdi ; ret
0x000000000008eb36 : jbe 0x8eb67 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb46 : jbe 0x8eb67 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb56 : jbe 0x8eb67 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000094463 : jbe 0x9447e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x94459 ; ret
0x00000000000a03e9 : jbe 0xa03e3 ; ret 0xf10
0x00000000000a2009 : jbe 0xa2003 ; ret 0xf10
0x00000000000e3db8 : jbe 0xe3dc7 ; mov eax, 0xc ; ret
0x00000000000f6b38 : jbe 0xf6b43 ; ret
0x00000000000f7dd0 : jbe 0xf7dc9 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000101578 : je 0x101589 ; mov dword ptr [rip + 0x2c2cf0], edi ; ret
0x00000000001025af : je 0x1025bb ; ret
0x0000000000103ae0 : je 0x103af2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001050ae : je 0x10514e ; call rax
0x0000000000105225 : je 0x105326 ; call rax
0x0000000000106eb6 : je 0x106ebb ; ret
0x0000000000109064 : je 0x10906b ; pop rbp ; ret
0x000000000010946a : je 0x10947a ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000001096b9 : je 0x1096c7 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010c56b : je 0x10c580 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000112706 : je 0x1126e6 ; mov rdx, qword ptr [r12 + 0x38] ; jmp 0x1126da
0x0000000000112e63 : je 0x112e77 ; mov eax, 7 ; ret
0x0000000000112e81 : je 0x112ea9 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000112e90 : je 0x112ef4 ; xor eax, eax ; pop rbx ; ret
0x000000000011459b : je 0x1145ab ; ret
0x0000000000114c49 : je 0x114c4e ; ret
0x0000000000114cad : je 0x114cb2 ; ret
0x00000000001150aa : je 0x1150b2 ; ret
0x0000000000115d95 : je 0x115da7 ; lea rax, qword ptr [rip + 0x37942] ; ret
0x0000000000115e65 : je 0x115e77 ; lea rax, qword ptr [rip + 0x37c12] ; ret
0x0000000000115e8f : je 0x115ea1 ; lea rax, qword ptr [rip + 0x5c318] ; ret
0x00000000001173cc : je 0x1173de ; add rsp, 8 ; ret
0x000000000011d8bd : je 0x11d8bb ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000011f87f : je 0x11f968 ; pop rbx ; ret
0x000000000012000f : je 0x12001b ; mov rdi, rbx ; call rax
0x00000000001202ff : je 0x12030b ; mov rdi, rbx ; call rax
0x000000000012040f : je 0x120423 ; lea rdi, qword ptr [rip + 0x2a87a8] ; call rax
0x00000000001204ba : je 0x1204e7 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000123863 : je 0x12385b ; pop rbx ; ret
0x000000000012415f : je 0x124189 ; cmp eax, 0xff ; mov dl, 2 ; cmove eax, edx ; ret
0x00000000001283f2 : je 0x1283fa ; ret
0x0000000000128451 : je 0x12845a ; ret
0x000000000012844b : je 0x12845b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x128460 ; ret
0x000000000012b8b3 : je 0x12b8bf ; mov rdi, rsp ; call rax
0x000000000012b98e : je 0x12b99a ; mov rdi, rsp ; call rax
0x000000000012c049 : je 0x12c076 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012c247 : je 0x12c253 ; mov rdi, rbp ; call rax
0x000000000012c5d8 : je 0x12c5e2 ; ret
0x000000000012c7a5 : je 0x12c7cf ; and ch, al ; ret
0x000000000012d2c5 : je 0x12d2d1 ; mov rdi, r14 ; call rax
0x000000000012d863 : je 0x12d874 ; xor eax, eax ; ret
0x000000000012de75 : je 0x12de81 ; mov rdi, rbp ; call rdx
0x000000000012e397 : je 0x12e48c ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001318b2 : je 0x1318c6 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000013228a : je 0x132296 ; mov rdi, r12 ; call rax
0x000000000013246b : je 0x132479 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133268 : je 0x133279 ; mov rdi, r15 ; call 0x1f4c7
0x0000000000133281 : je 0x13328c ; call 0x1f4c4
0x000000000013328f : je 0x13329a ; call 0x1f4c4
0x000000000013382b : je 0x13374f ; mov rdi, rbp ; call rax
0x0000000000133765 : je 0x133771 ; mov rdi, r13 ; call rax
0x0000000000133873 : je 0x133887 ; mov eax, 1 ; ret
0x0000000000133958 : je 0x133964 ; mov rdi, rbp ; call rax
0x0000000000133b78 : je 0x133b84 ; mov rdi, rbp ; call rax
0x000000000013468f : je 0x13469d ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134d3b : je 0x134d47 ; mov rdi, r12 ; call rax
0x00000000001350af : je 0x1350bd ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001378de : je 0x1378b8 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001378af : je 0x1378bb ; pop rbx ; ret
0x000000000013791b : je 0x1378cf ; pop rbx ; ret
0x0000000000137953 : je 0x137966 ; add rsp, 8 ; ret
0x000000000013856b : je 0x138572 ; ret
0x000000000013864b : je 0x138659 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138d74 : je 0x138d82 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013a1ed : je 0x13a248 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a2ad : je 0x13a308 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a36d : je 0x13a3c8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013a42d : je 0x13a488 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013accb : je 0x13acf7 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013ae3b : je 0x13ae67 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013af6d : je 0x13af98 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b02d : je 0x13b058 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b0ed : je 0x13b118 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b1ad : je 0x13b1d8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b4a7 : je 0x13b4bb ; ret
0x000000000013d538 : je 0x13d544 ; xor eax, eax ; ret
0x000000000013fb3f : je 0x13fb6d ; or byte ptr [rax - 0x77], cl ; salc ; call 0x13bdb8
0x0000000000142021 : je 0x142036 ; add rsp, 8 ; ret
0x00000000001445c3 : je 0x14458d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145295 : je 0x14529d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145393 : je 0x14535d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014627a : je 0x146282 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001463d3 : je 0x14639d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000147fa3 : je 0x147f6d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000149fd1 : je 0x149fb8 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a2c3 : je 0x14a28d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b953 : je 0x14b91d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016f017 : je 0x16f021 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000172e56 : je 0x172e5c ; call rdx
0x0000000000172f69 : je 0x172f74 ; call rdx
0x0000000000173370 : je 0x173375 ; ret
0x0000000000183548 : je 0x183513 ; xor al, 0xd8 ; ret
0x0000000000183787 : je 0x183784 ; jmp 0x18375e
0x0000000000184282 : je 0x18424a ; ret 0xacfc
0x0000000000186d01 : je 0x186cf3 ; call rax
0x0000000000186d81 : je 0x186d73 ; call rax
0x0000000000186d95 : je 0x186d87 ; call rax
0x0000000000186dbd : je 0x186daf ; jmp rsp
0x0000000000186dc5 : je 0x186db7 ; jmp rsp
0x0000000000186dc4 : je 0x186db8 ; jmp rsp
0x0000000000186dd5 : je 0x186dc7 ; jmp rsp
0x0000000000186dd1 : je 0x186dc7 ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000186dd9 : je 0x186dcb ; jmp rsp
0x0000000000186ddd : je 0x186dcf ; jmp rsp
0x0000000000186de1 : je 0x186dd3 ; jmp rsp
0x0000000000186de5 : je 0x186dd7 ; jmp rsp
0x0000000000186de9 : je 0x186ddb ; jmp rsp
0x0000000000186ded : je 0x186ddf ; jmp rsp
0x0000000000186df1 : je 0x186de3 ; jmp rsp
0x0000000000186df5 : je 0x186de7 ; jmp rsp
0x0000000000186df9 : je 0x186deb ; jmp rsp
0x0000000000186dfd : je 0x186def ; jmp rsp
0x0000000000186e05 : je 0x186df7 ; jmp rsp
0x0000000000186e09 : je 0x186dfb ; jmp rsp
0x0000000000186e0d : je 0x186dff ; jmp rsp
0x0000000000186e11 : je 0x186e03 ; jmp rsp
0x0000000000186e19 : je 0x186e0b ; jmp rsp
0x0000000000186e1d : je 0x186e0f ; jmp rsp
0x0000000000186e21 : je 0x186e13 ; jmp rsp
0x0000000000186e25 : je 0x186e17 ; jmp rsp
0x0000000000186e29 : je 0x186e1b ; jmp rsp
0x0000000000186e2d : je 0x186e1f ; jmp rsp
0x0000000000186e31 : je 0x186e23 ; jmp rsp
0x0000000000186e35 : je 0x186e27 ; jmp rsp
0x0000000000186e3d : je 0x186e2f ; jmp rsp
0x0000000000186e39 : je 0x186e2f ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000186e55 : je 0x186e47 ; jmp rsp
0x0000000000186e51 : je 0x186e47 ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000186e5d : je 0x186e4f ; jmp rsp
0x0000000000186e61 : je 0x186e53 ; jmp rsp
0x0000000000186e65 : je 0x186e57 ; jmp rsp
0x0000000000186e69 : je 0x186e5b ; jmp rsp
0x0000000000186e6d : je 0x186e5f ; call rsp
0x0000000000186e79 : je 0x186e6b ; jmp rsp
0x0000000000186e75 : je 0x186e6b ; push qword ptr [rsp + rsi*2 - 0x12] ; jmp rsp
0x0000000000186e7d : je 0x186e6f ; jmp rsp
0x0000000000186e85 : je 0x186e77 ; jmp rsp
0x0000000000186e8d : je 0x186e7f ; jmp rsp
0x0000000000186e91 : je 0x186e83 ; jmp rsp
0x0000000000186e78 : je 0x186ef1 ; out dx, al ; jmp rsp
0x00000000001891c4 : je 0x18922d ; cmc ; jmp rdx
0x00000000001891c0 : je 0x18922d ; cmc ; push qword ptr [rsp - 0xb] ; jmp rdx
0x00000000001986e0 : je 0x1986cb ; in eax, dx ; call qword ptr [rdx + rax*8]
0x0000000000198b08 : je 0x198b64 ; out dx, al ; jmp rsp
0x0000000000199774 : je 0x1997ad ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sti ; call rsp
0x000000000019b928 : je 0x19b97d ; stc ; jmp rsp
0x000000000019c800 : je 0x19c7c4 ; std ; call rsp
0x000000000019c818 : je 0x19c7dd ; std ; jmp rsp
0x000000000019c858 : je 0x19c826 ; std ; dec dword ptr [rsi + rdi] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001a4f59 : je 0x1a4f4a ; call qword ptr [rsi]
0x00000000001a851c : je 0x1a84e1 ; add byte ptr [rax], al ; adc ah, dh ; out dx, eax ; jmp rbx
0x00000000001b0a1c : je 0x1b0a66 ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], dl ; jmp rax
0x00000000001b3d45 : je 0x1b3d4e ; add al, ch ; cmp dh, dh ; jmp qword ptr [rax]
0x00000000001b5b83 : je 0x1b5b9b ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x0000000000001cb6 : je 0x1ce2 ; ret
0x00000000000210c8 : je 0x210e1 ; lea rax, qword ptr [rip + 0x3a872f] ; ret
0x0000000000025728 : je 0x25754 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000262cd : je 0x262fb ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000026fd4 : je 0x27002 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002ae4b : je 0x2ae53 ; pop rbx ; ret
0x000000000002ae47 : je 0x2ae57 ; test esi, esi ; je 0x2ae57 ; pop rbx ; ret
0x000000000002b715 : je 0x2b71b ; call rax
0x000000000002bbfe : je 0x2bc04 ; call rcx
0x000000000002cbfb : je 0x2cc01 ; call rax
0x0000000000032fd9 : je 0x33004 ; or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x0000000000034abd : je 0x34aac ; ret
0x0000000000034d85 : je 0x34daf ; call 0xffffffffe2851019
0x0000000000034e76 : je 0x34e1f ; ret
0x00000000000381ff : je 0x3822c ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x000000000005ca20 : je 0x5ca5d ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000005ca1f : je 0x5ca5e ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000005ca47 : je 0x5ca84 ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000006326a : je 0x63282 ; mov rdi, qword ptr [rbx] ; call 0x1f4c7
0x000000000006c0a6 : je 0x6c0c8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006c87a : je 0x6c883 ; ret
0x000000000006f1ca : je 0x6f1e1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f27a : je 0x6f291 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f335 : je 0x6f348 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000006f94c : je 0x6f99b ; pop rbx ; ret
0x00000000000714c9 : je 0x714df ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000000730aa : je 0x730fb ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000730a9 : je 0x730fc ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073e9c : je 0x73ea2 ; ret
0x0000000000073eca : je 0x73f2c ; pop rbp ; pop r12 ; ret
0x00000000000740ed : je 0x740f8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000074131 : je 0x7413c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000074688 : je 0x74697 ; mov eax, 0xffffffff ; ret
0x000000000007848c : je 0x784db ; pop rbx ; ret
0x000000000007896b : je 0x7897d ; mov dword ptr [rdi], edx ; ret
0x0000000000078c8c : je 0x78c9f ; mov eax, 0xffffffff ; ret
0x000000000007949b : je 0x79441 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007951f : je 0x7952b ; pop rbx ; ret
0x000000000007aeff : je 0x7aeec ; ret
0x000000000007bf83 : je 0x7bf3d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007c0d3 : je 0x7c08d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007c245 : je 0x7c252 ; ret
0x000000000007c277 : je 0x7c286 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ccb4 : je 0x7ccbf ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007edf5 : je 0x7edfb ; call rax
0x000000000007f976 : je 0x7f987 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000080a16 : je 0x80a40 ; xor cl, ch ; ret 0
0x0000000000081a9f : je 0x81ac9 ; jo 0x81a2a ; ret
0x0000000000082938 : je 0x8294d ; mov qword ptr [rsp + 0x30], rax ; call rdx
0x0000000000082a40 : je 0x82a5d ; xor al, 0 ; mov rdi, rbx ; call qword ptr [r15]
0x0000000000082a6a : je 0x82a86 ; mov qword ptr [rsp + 8], rsi ; call rax
0x0000000000084942 : je 0x8496b ; call rax
0x0000000000085232 : je 0x8525e ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x000000000008580b : je 0x85811 ; call rax
0x00000000000875a7 : je 0x875b3 ; ret
0x0000000000087b4e : je 0x87cd9 ; mov rsi, r14 ; call rax
0x00000000000890a8 : je 0x890b2 ; ret
0x0000000000089852 : je 0x89864 ; lea rax, qword ptr [rip + 0x16915] ; ret
0x0000000000089a3f : je 0x89a51 ; lea rax, qword ptr [rip + 0xe66a8] ; ret
0x000000000008b132 : je 0x8b144 ; lea rax, qword ptr [rip + 0xd9d35] ; ret
0x000000000008b23f : je 0x8b251 ; lea rax, qword ptr [rip + 0xbebf8] ; ret
0x000000000008b3b6 : je 0x8b3dc ; movsx eax, dl ; ret
0x000000000008b3b6 : je 0x8b3dd ; movsx eax, dl ; ret
0x000000000008b3b1 : je 0x8b409 ; cmp dl, 3 ; je 0x8b3e1 ; movsx eax, dl ; ret
0x000000000008b4c2 : je 0x8b4d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b70b : je 0x8b715 ; bsf eax, edx ; ret
0x000000000008b70b : je 0x8b716 ; bsf eax, edx ; ret
0x000000000008b7b4 : je 0x8b7c5 ; bsf rax, rdx ; ret
0x000000000008b7b4 : je 0x8b7c6 ; bsf rax, rdx ; ret
0x000000000008b758 : je 0x8b7d6 ; bsf rax, rdx ; ret
0x000000000008b9a3 : je 0x8b9c5 ; bsf rax, rdx ; ret
0x000000000008b9a3 : je 0x8b9c6 ; bsf rax, rdx ; ret
0x000000000008b933 : je 0x8b9d9 ; bsf rax, rdx ; ret
0x000000000008bae2 : je 0x8baf4 ; lea rax, qword ptr [rip + 0x162a5] ; ret
0x000000000008d3c2 : je 0x8d3d4 ; lea rax, qword ptr [rip + 0xd9255] ; ret
0x000000000008d6df : je 0x8d6f1 ; lea rax, qword ptr [rip + 0xbc898] ; ret
0x000000000008da5f : je 0x8da71 ; lea rax, qword ptr [rip + 0xbc648] ; ret
0x000000000008ea1c : je 0x8ea73 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008eb9c : je 0x8ebaf ; lea rax, qword ptr [rip + 0xdf0db] ; ret
0x000000000008f1af : je 0x8f1c1 ; lea rax, qword ptr [rip + 0xe3008] ; ret
0x000000000008f345 : je 0x8f357 ; lea rax, qword ptr [rip + 0xbe742] ; ret
0x000000000008f832 : je 0x8f844 ; lea rax, qword ptr [rip + 0xd9965] ; ret
0x000000000008f952 : je 0x8f964 ; lea rax, qword ptr [rip + 0xdb055] ; ret
0x0000000000094369 : je 0x94381 ; cmp rsi, rcx ; jne 0x94361 ; xor eax, eax ; ret
0x000000000009439f : je 0x943a4 ; ret
0x00000000000943c7 : je 0x943d9 ; lea rax, qword ptr [rip + 0xbc420] ; ret
0x00000000000958e8 : je 0x95901 ; lea rax, qword ptr [rip - 0x511] ; ret
0x0000000000095c7a : je 0x95c8e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x000000000009669a : je 0x966f1 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000096751 : je 0x96769 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000096c34 : je 0x96c47 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097352 : je 0x97341 ; xor eax, eax ; ret
0x000000000009734e : je 0x97345 ; test al, al ; je 0x97345 ; xor eax, eax ; ret
0x0000000000097337 : je 0x97346 ; test cl, cl ; jne 0x97314 ; mov rax, rdi ; ret
0x00000000000972fa : je 0x9734c ; xor eax, eax ; ret
0x00000000000972f6 : je 0x97350 ; test al, al ; je 0x97350 ; xor eax, eax ; ret
0x00000000000973ad : je 0x973f4 ; xor eax, eax ; ret
0x00000000000973a8 : je 0x973f9 ; test r9b, r9b ; je 0x973f9 ; xor eax, eax ; ret
0x00000000000973fb : je 0x9740e ; test rsi, rsi ; jne 0x973cf ; xor eax, eax ; ret
0x00000000000974ea : je 0x974d3 ; pop rbx ; pop rbp ; ret
0x00000000000974e6 : je 0x974d7 ; test al, al ; je 0x974d7 ; pop rbx ; pop rbp ; ret
0x0000000000097483 : je 0x974e4 ; pop rbx ; pop rbp ; ret
0x000000000009747f : je 0x974e8 ; test al, al ; je 0x974e8 ; pop rbx ; pop rbp ; ret
0x000000000009a751 : je 0x9a77e ; add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009c06a : je 0x9c097 ; add dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009f14a : je 0x9f143 ; ret
0x000000000009f16e : je 0x9f163 ; ret
0x000000000009f16a : je 0x9f167 ; cmp ecx, edx ; je 0x9f167 ; ret
0x000000000009f1bf : je 0x9f1a3 ; ret
0x000000000009f74c : je 0x9f728 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009fb4e : je 0x9fafe ; mov rax, rbx ; pop rbx ; ret
0x00000000000a5199 : je 0xa51ea ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a6826 : je 0xa6877 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a853a : je 0xa858b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a9abd : je 0xa9a86 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a9a95 : je 0xa9a88 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a9abd : je 0xa9a88 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a9be6 : je 0xa9c10 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000a9c5d : je 0xa9c43 ; ret
0x00000000000a9ca5 : je 0xa9c83 ; ret
0x00000000000aabbf : je 0xaabb1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aadf9 : je 0xaae19 ; mov cl, dl ; and cl, 0xf ; je 0xaae29 ; ret
0x00000000000aae00 : je 0xaae22 ; ret
0x00000000000aae15 : je 0xaae36 ; add rax, 2 ; ret
0x00000000000ab426 : je 0xab496 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab6d7 : je 0xab6f4 ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x00000000000ab73c : je 0xab74f ; lea rax, qword ptr [rip + 0xc3b7b] ; ret
0x00000000000ab8f8 : je 0xab8ad ; mov rax, rbx ; pop rbx ; ret
0x00000000000ac29e : je 0xac2cd ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000ac546 : je 0xac575 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000ad3f5 : je 0xad403 ; mov edx, eax ; jmp 0xad3c3
0x00000000000afc55 : je 0xafc63 ; mov edx, eax ; jmp 0xafc23
0x00000000000b2315 : je 0xb2323 ; mov edx, eax ; jmp 0xb22e3
0x00000000000b839e : je 0xb835a ; add byte ptr [rax + 0x39], cl ; ret 0x8943
0x00000000000baabd : je 0xbaaec ; pop rax ; mov rdi, qword ptr [rsp + 0x68] ; call r15
0x00000000000bafab : je 0xbafda ; pop rax ; mov rdi, qword ptr [rsp + 0x68] ; call r15
0x00000000000bf469 : je 0xbf4c0 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c1f93 : je 0xc1fe2 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c6193 : je 0xc61a4 ; xor eax, eax ; ret
0x00000000000cacce : je 0xcacd4 ; call rax
0x00000000000cae6b : je 0xcae75 ; call rax
0x00000000000caeeb : je 0xcaef5 ; call rdx
0x00000000000cc499 : je 0xcc4cf ; mov eax, 1 ; ret
0x00000000000d706a : je 0xd7079 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d7f71 : je 0xd7f85 ; xor eax, eax ; pop rbx ; ret
0x00000000000d88c1 : je 0xd88f0 ; sbb byte ptr [rax - 0x73], cl ; jl 0xd88f5 ; and al, ch ; ret 0xffbc
0x00000000000dcff6 : je 0xdd020 ; cmp al, ch ; ret 0xff84
0x00000000000dd07a : je 0xdd03a ; add al, 0x7f ; mov cl, 0x39 ; ret 0xc189
0x00000000000df575 : je 0xdf5b4 ; adc byte ptr [rax + 1], cl ; ret 0x894d
0x00000000000e30e5 : je 0xe311f ; mov rdx, rax ; jmp 0xe3086
0x00000000000e3556 : je 0xe3581 ; adc byte ptr [rax - 0x77], cl ; ret 0x94eb
0x00000000000e7208 : je 0xe7244 ; xor eax, eax ; ret
0x00000000000f0395 : je 0xf0373 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0db2 : je 0xf0ddd ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f44e4 : je 0xf450f ; cmp byte ptr [rax - 0x77], cl ; ret 0x70e9
0x00000000000f620a : je 0xf6213 ; ret
0x00000000000fa58b : je 0xfa5b6 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000fbbc3 : je 0xfbbdd ; neg eax ; pop rbx ; ret
0x00000000000fcd5f : je 0xfcd89 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fce18 : je 0xfce42 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fd54e : je 0xfd555 ; ret
0x00000000000ff303 : je 0xff30e ; mov qword ptr [rax], rdx ; ret
0x00000000000ff3ea : je 0xff3de ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000001267cc : jg 0x126784 ; mov byte ptr [r11], 0 ; ret
0x0000000000132692 : jg 0x1326dc ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1326a8 ; ret
0x0000000000138852 : jg 0x13889c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x138868 ; ret
0x000000000014d2c0 : jg 0x14d33c ; loopne 0x14d291 ; jp 0x14d34d ; jp 0x14d2c0 ; ret
0x000000000014d36c : jg 0x14d37d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014d7b0 : jg 0x14d82c ; loopne 0x14d781 ; jp 0x14d83d ; jp 0x14d7b0 ; ret
0x000000000014d85c : jg 0x14d86d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014db53 : jg 0x14dbcf ; loopne 0x14db24 ; jp 0x14dbe0 ; jp 0x14db53 ; ret
0x000000000014dbfc : jg 0x14dc0d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000152a19 : jg 0x152a6c ; ret
0x0000000000152a9f : jg 0x152aea ; ret
0x0000000000152c19 : jg 0x152c6c ; ret 0x894c
0x0000000000152c9f : jg 0x152cea ; ret 0x894c
0x00000000001553e9 : jg 0x15543c ; ret
0x000000000015546f : jg 0x1554ba ; ret
0x00000000001555e9 : jg 0x15563c ; ret 0x894c
0x000000000015566f : jg 0x1556ba ; ret 0x894c
0x0000000000157db9 : jg 0x157e0c ; ret
0x0000000000157e3f : jg 0x157e8a ; ret
0x0000000000157fb9 : jg 0x15800c ; ret 0x894c
0x000000000015803f : jg 0x15808a ; ret 0x894c
0x000000000015a388 : jg 0x15a3d9 ; loope 0x15a387 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a3ff : jg 0x15a44a ; ret 0xff2
0x000000000015a418 : jg 0x15a469 ; loop 0x15a417 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a48f : jg 0x15a4da ; ret
0x000000000015a4a8 : jg 0x15a4f9 ; jrcxz 0x15a4a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a538 : jg 0x15a589 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a5b8 : jg 0x15a609 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a638 : jg 0x15a689 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a6b8 : jg 0x15a709 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a738 : jg 0x15a789 ; call 0x4f94b73a
0x000000000015a7b8 : jg 0x15a809 ; jmp 0x4f94b7ba
0x000000000015a938 : jg 0x15a989 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a9b8 : jg 0x15aa09 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa48 : jg 0x15aa99 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aac8 : jg 0x15ab19 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab3c : jg 0x15ab47 ; ret
0x000000000015ab96 : jg 0x15aba9 ; ret
0x000000000015ab91 : jg 0x15abe1 ; psllq mm1, qword ptr [rdi] ; jg 0x15abae ; ret
0x000000000015ac06 : jg 0x15ac19 ; ret
0x000000000015ac76 : jg 0x15ac89 ; ret
0x000000000015ac71 : jg 0x15acc1 ; or eax, 0xf7f0ff3 ; ret
0x000000000015ace6 : jg 0x15acf9 ; ret
0x000000000015ace1 : jg 0x15ad31 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ad56 : jg 0x15ad69 ; ret
0x000000000015ad51 : jg 0x15ada1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015adc6 : jg 0x15add9 ; ret
0x000000000015adc1 : jg 0x15ae11 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ae36 : jg 0x15ae49 ; ret
0x000000000015ae31 : jg 0x15ae81 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015aea6 : jg 0x15aeb9 ; ret
0x000000000015aea1 : jg 0x15aef1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015af16 : jg 0x15af29 ; ret
0x000000000015af86 : jg 0x15af99 ; ret
0x000000000015aff6 : jg 0x15b009 ; ret
0x000000000015aff1 : jg 0x15b041 ; add eax, 0xf7f0ff3 ; ret
0x000000000015b066 : jg 0x15b079 ; ret
0x000000000015b061 : jg 0x15b0b1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b0d6 : jg 0x15b0e9 ; ret
0x000000000015b0d1 : jg 0x15b121 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b146 : jg 0x15b159 ; ret
0x000000000015b141 : jg 0x15b191 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b1b6 : jg 0x15b1c9 ; ret
0x000000000015b1b1 : jg 0x15b201 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ce58 : jg 0x15cea9 ; loope 0x15ce57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cecf : jg 0x15cf1a ; ret 0xff2
0x000000000015cee8 : jg 0x15cf39 ; loop 0x15cee7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cf5f : jg 0x15cfaa ; ret
0x000000000015cf78 : jg 0x15cfc9 ; jrcxz 0x15cf77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d008 : jg 0x15d059 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d088 : jg 0x15d0d9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d108 : jg 0x15d159 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d188 : jg 0x15d1d9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d208 : jg 0x15d259 ; call 0x4f94e20a
0x000000000015d288 : jg 0x15d2d9 ; jmp 0x4f94e28a
0x000000000015d408 : jg 0x15d459 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d488 : jg 0x15d4d9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d518 : jg 0x15d569 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d598 : jg 0x15d5e9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015d60c : jg 0x15d617 ; ret
0x000000000015d666 : jg 0x15d679 ; ret
0x000000000015d661 : jg 0x15d6b1 ; psllq mm1, qword ptr [rdi] ; jg 0x15d67e ; ret
0x000000000015d6d6 : jg 0x15d6e9 ; ret
0x000000000015d746 : jg 0x15d759 ; ret
0x000000000015d741 : jg 0x15d791 ; or eax, 0xf7f0ff3 ; ret
0x000000000015d7b6 : jg 0x15d7c9 ; ret
0x000000000015d7b1 : jg 0x15d801 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d826 : jg 0x15d839 ; ret
0x000000000015d821 : jg 0x15d871 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d896 : jg 0x15d8a9 ; ret
0x000000000015d891 : jg 0x15d8e1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d906 : jg 0x15d919 ; ret
0x000000000015d901 : jg 0x15d951 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d976 : jg 0x15d989 ; ret
0x000000000015d971 : jg 0x15d9c1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d9e6 : jg 0x15d9f9 ; ret
0x000000000015da56 : jg 0x15da69 ; ret
0x000000000015dac6 : jg 0x15dad9 ; ret
0x000000000015dac1 : jg 0x15db11 ; add eax, 0xf7f0ff3 ; ret
0x000000000015db36 : jg 0x15db49 ; ret
0x000000000015db31 : jg 0x15db81 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dba6 : jg 0x15dbb9 ; ret
0x000000000015dba1 : jg 0x15dbf1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dc16 : jg 0x15dc29 ; ret
0x000000000015dc11 : jg 0x15dc61 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015dc86 : jg 0x15dc99 ; ret
0x000000000015dc81 : jg 0x15dcd1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015f978 : jg 0x15f9c9 ; loope 0x15f977 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f9ef : jg 0x15fa3a ; ret 0xff2
0x000000000015fa08 : jg 0x15fa59 ; loop 0x15fa07 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa7f : jg 0x15faca ; ret
0x000000000015fa98 : jg 0x15fae9 ; jrcxz 0x15fa97 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fb28 : jg 0x15fb79 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fba8 : jg 0x15fbf9 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fc28 : jg 0x15fc79 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fca8 : jg 0x15fcf9 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fd28 : jg 0x15fd79 ; call 0x4f950d2a
0x000000000015fda8 : jg 0x15fdf9 ; jmp 0x4f950daa
0x000000000015ff28 : jg 0x15ff79 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ffa8 : jg 0x15fff9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160038 : jg 0x160089 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001600b8 : jg 0x160109 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016012c : jg 0x160137 ; ret
0x0000000000160186 : jg 0x160199 ; ret
0x0000000000160181 : jg 0x1601d1 ; psllq mm1, qword ptr [rdi] ; jg 0x16019e ; ret
0x00000000001601f6 : jg 0x160209 ; ret
0x0000000000160266 : jg 0x160279 ; ret
0x0000000000160261 : jg 0x1602b1 ; or eax, 0xf7f0ff3 ; ret
0x00000000001602d6 : jg 0x1602e9 ; ret
0x00000000001602d1 : jg 0x160321 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160346 : jg 0x160359 ; ret
0x0000000000160341 : jg 0x160391 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001603b6 : jg 0x1603c9 ; ret
0x00000000001603b1 : jg 0x160401 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160426 : jg 0x160439 ; ret
0x0000000000160421 : jg 0x160471 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160496 : jg 0x1604a9 ; ret
0x0000000000160491 : jg 0x1604e1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160506 : jg 0x160519 ; ret
0x0000000000160576 : jg 0x160589 ; ret
0x00000000001605e6 : jg 0x1605f9 ; ret
0x00000000001605e1 : jg 0x160631 ; add eax, 0xf7f0ff3 ; ret
0x0000000000160656 : jg 0x160669 ; ret
0x0000000000160651 : jg 0x1606a1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001606c6 : jg 0x1606d9 ; ret
0x00000000001606c1 : jg 0x160711 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160736 : jg 0x160749 ; ret
0x0000000000160731 : jg 0x160781 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001607a6 : jg 0x1607b9 ; ret
0x00000000001607a1 : jg 0x1607f1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000172185 : jg 0x172194 ; neg eax ; ret
0x0000000000172292 : jg 0x1722a2 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172333 : jg 0x172384 ; loopne 0x172388 ; sub eax, edx ; vzeroupper ; ret
0x00000000001b84f9 : jg 0x1b84f4 ; call qword ptr [rsi]
0x000000000002746f : jg 0x273fc ; ret 0x5c77
0x000000000003461b : jg 0x3466d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034b17 : jg 0x34aa1 ; or edi, ecx ; movd xmm0, edi ; ret
0x0000000000034abb : jg 0x34ac2 ; je 0x34aae ; ret
0x0000000000034c2d : jg 0x34c41 ; xchg eax, edi ; ret 0x5e77
0x0000000000034c63 : jg 0x34c77 ; xchg eax, edi ; ret 0x1377
0x0000000000034e72 : jg 0x34ebc ; or eax, esi ; je 0x34e23 ; ret
0x000000000003aaa2 : jg 0x3aaeb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000046beb : jg 0x46c59 ; xor eax, eax ; ret
0x0000000000049224 : jg 0x49231 ; ret 0x5488
0x0000000000056235 : jg 0x56249 ; xchg eax, esp ; ret 0xc084
0x0000000000078967 : jg 0x788f5 ; inc byte ptr [rdx] ; je 0x78981 ; mov dword ptr [rdi], edx ; ret
0x000000000007ea2b : jg 0x7ea66 ; add byte ptr [rax - 0x77], cl ; ret 0x1fe9
0x000000000008f3d7 : jg 0x8f3f0 ; jne 0x8f3c7 ; mov rax, rdi ; ret
0x0000000000094467 : jg 0x9447e ; jne 0x94455 ; ret
0x0000000000095938 : jg 0x95923 ; ret
0x00000000000a4f66 : jg 0xa4f71 ; ret
0x00000000000a4f76 : jg 0xa4f84 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a4f8a : jg 0xa4f99 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a4fa9 : jg 0xa4fb7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a4fb9 : jg 0xa4fc7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a4fc9 : jg 0xa4fda ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a4fea : jg 0xa4ff9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a500a : jg 0xa5019 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a502a : jg 0xa5039 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a504a : jg 0xa505c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a508d : jg 0xa509f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a50ad : jg 0xa50bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a50cb : jg 0xa50db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a50eb : jg 0xa50fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a510b : jg 0xa511b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a512b : jg 0xa513b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a56b8 : jg 0xa56c3 ; jne 0xa5f78 ; ret
0x00000000000a56dc : jg 0xa56e8 ; jne 0xa5f78 ; ret
0x00000000000a56ff : jg 0xa570c ; jne 0xa5f78 ; ret
0x00000000000a571a : jg 0xa5728 ; jne 0xa5f78 ; ret
0x00000000000a573d : jg 0xa574c ; jne 0xa5f78 ; ret
0x00000000000a5762 : jg 0xa5772 ; jne 0xa5f78 ; ret
0x00000000000a5780 : jg 0xa5791 ; jne 0xa5f78 ; ret
0x00000000000a579c : jg 0xa57ae ; jne 0xa5f78 ; ret
0x00000000000a57bf : jg 0xa57d2 ; jne 0xa5f78 ; ret
0x00000000000a57e4 : jg 0xa57f8 ; jne 0xa5f78 ; ret
0x00000000000a5802 : jg 0xa5817 ; jne 0xa5f78 ; ret
0x00000000000a5822 : jg 0xa5838 ; jne 0xa5f78 ; ret
0x00000000000a5844 : jg 0xa585b ; jne 0xa5f78 ; ret
0x00000000000a5864 : jg 0xa587c ; jne 0xa5f78 ; ret
0x00000000000a5884 : jg 0xa589d ; jne 0xa5f78 ; ret
0x00000000000a589e : jg 0xa58b8 ; jne 0xa5f78 ; ret
0x00000000000a58c1 : jg 0xa58dc ; jne 0xa5f78 ; ret
0x00000000000a58e6 : jg 0xa5902 ; jne 0xa5f78 ; ret
0x00000000000a5904 : jg 0xa5921 ; jne 0xa5f78 ; ret
0x00000000000a5924 : jg 0xa5942 ; jne 0xa5f78 ; ret
0x00000000000a5947 : jg 0xa5966 ; jne 0xa5f78 ; ret
0x00000000000a5966 : jg 0xa5986 ; jne 0xa5f78 ; ret
0x00000000000a5986 : jg 0xa59a7 ; jne 0xa5f78 ; ret
0x00000000000a59a6 : jg 0xa59c8 ; jne 0xa5f78 ; ret
0x00000000000a59c9 : jg 0xa59ec ; jne 0xa5f78 ; ret
0x00000000000a59fe : jg 0xa5a22 ; jne 0xa5f78 ; ret
0x00000000000a5a2c : jg 0xa5a51 ; jne 0xa5f78 ; ret
0x00000000000a5a5c : jg 0xa5a82 ; jne 0xa5f78 ; ret
0x00000000000a5a88 : jg 0xa5aaf ; jne 0xa5f78 ; ret
0x00000000000a5ab8 : jg 0xa5ae0 ; jne 0xa5f78 ; ret
0x00000000000a5ae8 : jg 0xa5b11 ; jne 0xa5f78 ; ret
0x00000000000a5b18 : jg 0xa5b42 ; jne 0xa5f78 ; ret
0x00000000000a5c36 : jg 0xa5c41 ; ret
0x00000000000a5c49 : jg 0xa5c57 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5c5a : jg 0xa5c69 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5c79 : jg 0xa5c87 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5c89 : jg 0xa5c97 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5c9c : jg 0xa5cad ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5cba : jg 0xa5cc9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5cda : jg 0xa5ce9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5cfa : jg 0xa5d09 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5d1d : jg 0xa5d2f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5d5d : jg 0xa5d6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5d7d : jg 0xa5d8f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5d9b : jg 0xa5dab ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5dbb : jg 0xa5dcb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5ddb : jg 0xa5deb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5dfb : jg 0xa5e0b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f32 : jg 0xa5f3d ; ret
0x00000000000a6066 : jg 0xa609a ; ret
0x00000000000a65d6 : jg 0xa65e5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a65e6 : jg 0xa65f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6619 : jg 0xa662b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a6639 : jg 0xa664b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a675f : jg 0xa67bf ; or eax, 0x1c478d48 ; ret
0x00000000000a6d5b : jg 0xa6d66 ; jne 0xa7788 ; ret
0x00000000000a6d80 : jg 0xa6d8c ; jne 0xa7788 ; ret
0x00000000000a6da3 : jg 0xa6db0 ; jne 0xa7788 ; ret
0x00000000000a6dbe : jg 0xa6dcc ; jne 0xa7788 ; ret
0x00000000000a6de1 : jg 0xa6df0 ; jne 0xa7788 ; ret
0x00000000000a6e06 : jg 0xa6e16 ; jne 0xa7788 ; ret
0x00000000000a6e24 : jg 0xa6e35 ; jne 0xa7788 ; ret
0x00000000000a6e40 : jg 0xa6e52 ; jne 0xa7788 ; ret
0x00000000000a6e63 : jg 0xa6e76 ; jne 0xa7788 ; ret
0x00000000000a6e88 : jg 0xa6e9c ; jne 0xa7788 ; ret
0x00000000000a6eb6 : jg 0xa6ecb ; jne 0xa7788 ; ret
0x00000000000a6ed6 : jg 0xa6eec ; jne 0xa7788 ; ret
0x00000000000a6ef8 : jg 0xa6f0f ; jne 0xa7788 ; ret
0x00000000000a6f28 : jg 0xa6f40 ; jne 0xa7788 ; ret
0x00000000000a6f58 : jg 0xa6f71 ; jne 0xa7788 ; ret
0x00000000000a6f82 : jg 0xa6f9c ; jne 0xa7788 ; ret
0x00000000000a6fa5 : jg 0xa6fc0 ; jne 0xa7788 ; ret
0x00000000000a6fca : jg 0xa6fe6 ; jne 0xa7788 ; ret
0x00000000000a6ff8 : jg 0xa7015 ; jne 0xa7788 ; ret
0x00000000000a7028 : jg 0xa7046 ; jne 0xa7788 ; ret
0x00000000000a705b : jg 0xa707a ; jne 0xa7788 ; ret
0x00000000000a708a : jg 0xa70aa ; jne 0xa7788 ; ret
0x00000000000a70ba : jg 0xa70db ; jne 0xa7788 ; ret
0x00000000000a70ea : jg 0xa710c ; jne 0xa7788 ; ret
0x00000000000a711d : jg 0xa7140 ; jne 0xa7788 ; ret
0x00000000000a7152 : jg 0xa7176 ; jne 0xa7788 ; ret
0x00000000000a7180 : jg 0xa71a5 ; jne 0xa7788 ; ret
0x00000000000a71b0 : jg 0xa71d6 ; jne 0xa7788 ; ret
0x00000000000a71dc : jg 0xa7203 ; jne 0xa7788 ; ret
0x00000000000a720c : jg 0xa7234 ; jne 0xa7788 ; ret
0x00000000000a723c : jg 0xa7265 ; jne 0xa7788 ; ret
0x00000000000a726c : jg 0xa7296 ; jne 0xa7788 ; ret
0x00000000000a7416 : jg 0xa7425 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7429 : jg 0xa743b ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a7469 : jg 0xa747b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7489 : jg 0xa749b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a75af : jg 0xa760f ; or eax, 0x1d478d48 ; ret
0x00000000000a7742 : jg 0xa774d ; ret
0x00000000000a7876 : jg 0xa78ae ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a7875 : jg 0xa78fd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a8046 : jg 0xa8051 ; ret
0x00000000000a8056 : jg 0xa8064 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a806a : jg 0xa8079 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8089 : jg 0xa8097 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8099 : jg 0xa80a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a80a9 : jg 0xa80ba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a80ca : jg 0xa80d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a80ea : jg 0xa80f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a810a : jg 0xa8119 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a812a : jg 0xa813c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a816d : jg 0xa817f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a818d : jg 0xa819f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a81ab : jg 0xa81bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a81cb : jg 0xa81db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a81eb : jg 0xa81fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a820b : jg 0xa821b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8b16 : jg 0xa8b21 ; ret
0x00000000000a8b26 : jg 0xa8b34 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8b3a : jg 0xa8b49 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8b59 : jg 0xa8b67 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8b69 : jg 0xa8b77 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8b79 : jg 0xa8b8a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8b9a : jg 0xa8ba9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8bba : jg 0xa8bc9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8bda : jg 0xa8be9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8bfa : jg 0xa8c0c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a8c3d : jg 0xa8c4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a8c5d : jg 0xa8c6f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a8c7b : jg 0xa8c8b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a8c9b : jg 0xa8cab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a8cbb : jg 0xa8ccb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a8cdb : jg 0xa8ceb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8e86 : jg 0xa8e96 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a905f : jg 0xa90c0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a907f : jg 0xa90e0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a90f6 : jg 0xa912f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a90f5 : jg 0xa917e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9a50 : jg 0xa9a8d ; ret 0x2b77
0x00000000000aab45 : jg 0xaab4d ; neg eax ; ret
0x00000000000ba3df : jg 0xba411 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bcd28 : jg 0xbcd3d ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000000cc25c : jg 0xcc262 ; add byte ptr [rax], al ; ret
0x00000000000cc2ab : jg 0xcc2b4 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cc2ab : jg 0xcc2b5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000f7a60 : jg 0xf7ab2 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000ff3b1 : jg 0xff3e6 ; add dh, al ; inc dword ptr [rax] ; ret
0x0000000000102a6b : jge 0x102a6f ; call rbx
0x0000000000102b92 : jge 0x102b96 ; call rbx
0x0000000000102ba0 : jge 0x102ba4 ; call rbx
0x0000000000102cd5 : jge 0x102cd9 ; call rbx
0x0000000000102e3f : jge 0x102e0f ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102e4f ; call rbx
0x0000000000102e45 : jge 0x102e49 ; call rbx
0x0000000000102e53 : jge 0x102e57 ; call rbx
0x0000000000103276 : jge 0x103241 ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000013246f : jge 0x132483 ; call rax
0x000000000013864f : jge 0x138663 ; call rax
0x0000000000138d78 : jge 0x138d8c ; call rax
0x00000000001723c0 : jge 0x1723d5 ; call r12
0x00000000001731cc : jge 0x1731d2 ; call 0x1f4c4
0x00000000001731bb : jge 0x1731e1 ; call 0x1f4c4
0x0000000000187121 : jge 0x187116 ; call rax
0x000000000018711d : jge 0x187116 ; inc eax ; jge 0x18711a ; call rax
0x00000000001983e1 : jge 0x1983d2 ; jmp rsp
0x0000000000199da9 : jge 0x199da2 ; call rsp
0x00000000001a8239 : jge 0x1a822c ; call qword ptr [rdi]
0x0000000000038dee : jge 0x38df3 ; call r14
0x00000000000462ea : jge 0x462f1 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000627f2 : jge 0x627f8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000098b7f : jge 0x98b16 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009f62f : jge 0x9f637 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ab9c6 : jge 0xab9cb ; call r12
0x00000000000b5f2d : jge 0xb5edc ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c78e6 : jge 0xc7883 ; call r14
0x00000000000db03a : jge 0xdb013 ; mov edx, eax ; jmp 0xdb01c
0x00000000000ebda8 : jge 0xebd35 ; call r14
0x00000000000ec4a1 : jge 0xec42e ; call r14
0x00000000000ec5de : jge 0xec56b ; call r14
0x00000000000f7dcf : jge 0xf7e4d ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ff510 : jge 0xff546 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000102ef8 : jl 0x102f26 ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000106eb4 : jl 0x106ef9 ; je 0x106ebd ; ret
0x0000000000128759 : jl 0x128784 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000001700db : jl 0x1700e4 ; neg eax ; ret
0x0000000000187d09 : jl 0x187d00 ; jmp rsp
0x00000000001970ac : jl 0x197042 ; cld ; jmp qword ptr [rdx]
0x0000000000197c1d : jl 0x197c25 ; add byte ptr [rax + rbp*8 - 0x17], ah ; call rsp
0x00000000001985f4 : jl 0x1985b8 ; add byte ptr [rax], al ; mov ah, 0xbd ; in eax, dx ; jmp rsp
0x0000000000198704 : jl 0x1986d2 ; add byte ptr [rax], al ; xchg eax, esp ; jmp 0x198701
0x0000000000198d8c : jl 0x198d84 ; add byte ptr [rax], al ; adc al, 0xfc ; out dx, al ; call rsp
0x000000000019959c : jl 0x1995ca ; add dword ptr [rax], eax ; xor al, 0x2e ; call rsp
0x000000000019b79c : jl 0x19b797 ; add dword ptr [rax], eax ; adc r15d, ecx ; jmp rsp
0x000000000019c2dc : jl 0x19c329 ; add al, byte ptr [rax] ; add al, 0x8d ; cli ; call rsp
0x000000000019c7fc : jl 0x19c865 ; add dword ptr [rax], eax ; je 0x19c7c8 ; std ; call rsp
0x00000000001a2965 : jl 0x1a297d ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a4324 : jl 0x1a43a7 ; add byte ptr [rax], al ; cmc ; mov bh, 0xe7 ; call rdx
0x00000000001a7824 : jl 0x1a77dc ; add byte ptr [rax], al ; mov ah, ah ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a8af0 : jl 0x1a8af7 ; add byte ptr [rax], al ; ret 0
0x00000000001a8ba0 : jl 0x1a8ba7 ; add byte ptr [rax], al ; cld ; ret 0
0x00000000001a8c24 : jl 0x1a8bf0 ; add byte ptr [rax], al ; pop rax ; xor dh, al ; jmp rdx
0x00000000001aa189 : jl 0x1aa17e ; call qword ptr [rax]
0x00000000001aa1a1 : jl 0x1aa196 ; call qword ptr [rax]
0x00000000001ae524 : jl 0x1ae549 ; add dword ptr [rax], eax ; clc ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001aee24 : jl 0x1aee52 ; add dword ptr [rax], eax ; pop rax ; salc ; hlt ; call qword ptr [rbx]
0x00000000001aff24 : jl 0x1aff63 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f24 : jl 0x1b0f73 ; add dword ptr [rax], eax ; cmc ; jmp qword ptr [rcx]
0x00000000001b1224 : jl 0x1b1276 ; add dword ptr [rax], eax ; or byte ptr [rax - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b19a9 : jl 0x1b19a2 ; jmp rax
0x00000000001b3024 : jl 0x1b3094 ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b4545 : jl 0x1b454f ; add byte ptr [rax + 0x4f], cl ; idiv bh ; ret 1
0x0000000000024aa6 : jl 0x24ad4 ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000025489 : jl 0x254b7 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000025c7 : jl 0x255a ; loop 0x25a5 ; ret 0x23cb
0x00000000000257fa : jl 0x25828 ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000262d2 : jl 0x262fb ; call rbx
0x00000000000266a0 : jl 0x266ce ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000026fd9 : jl 0x27002 ; call rbx
0x0000000000027419 : jl 0x27447 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002836d : jl 0x2839b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x0000000000034f1e : jl 0x34f4d ; call 0x24480e3d
0x000000000003f8a7 : jl 0x3f8d2 ; and byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000042377 : jl 0x423a2 ; sub byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00000000000511c0 : jl 0x5118a ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000052973 : jl 0x5299e ; and byte ptr [rcx + 0x29], cl ; ret 0x8d49
0x0000000000073e15 : jl 0x73db1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000087b50 : jl 0x87b5a ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000095077 : jl 0x950a2 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000009aeeb : jl 0x9aef9 ; adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret 0x3949
0x000000000009f6ba : jl 0x9f725 ; add rax, rdi ; ret
0x000000000009f6ca : jl 0x9f727 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f6ea : jl 0x9f727 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f70a : jl 0x9f727 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000c7bfd : jl 0xc7c2b ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000d3e84 : jl 0xd3ea5 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d88c6 : jl 0xd88f0 ; and al, ch ; ret 0xffbc
0x00000000000d8aa8 : jl 0xd8ab7 ; adc byte ptr [rax + 1], cl ; ret 0x8d4c
0x00000000000de42f : jl 0xde45a ; push rax ; call 0xda725
0x00000000000e274d : jl 0xe26e3 ; xchg eax, esp ; and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000f22f2 : jl 0xf232e ; add al, byte ptr [rcx - 0x80] ; jmp qword ptr [rbx]
0x00000000000f23c3 : jl 0xf23ee ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f3296 : jl 0xf32c5 ; js 0xf322c ; and al, 8 ; call 0x1f4c9
0x00000000000f4039 : jl 0xf4064 ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f4454 : jl 0xf447f ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000f7894 : jl 0xf78c0 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f7894 : jl 0xf78c1 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000ff67f : jl 0xff6b6 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000ff6be : jl 0xff6f4 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ff6bd : jl 0xff6f5 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000013328a : jle 0x1332a5 ; test rdi, rdi ; je 0x13329f ; call 0x1f4c9
0x0000000000137338 : jle 0x137350 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000149f66 : jle 0x149e81 ; movsxd rax, ecx ; ret
0x000000000014a1aa : jle 0x14a0eb ; ret
0x000000000017324c : jle 0x173248 ; mov rbx, qword ptr [rdi + 0x10] ; call 0x1f4c8
0x0000000000187c79 : jle 0x187c74 ; lcall ptr [rdi - 0x7d] ; jmp rsp
0x0000000000187d35 : jle 0x187d30 ; lcall ptr [rdx] ; jo 0x187d34 ; call qword ptr [rsi]
0x0000000000198fe9 : jle 0x198fdc ; jmp rsp
0x00000000001a472d : jle 0x1a4735 ; add byte ptr [rax], ah ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001acf81 : jle 0x1acf8f ; ret
0x000000000002ae92 : jle 0x2aea5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000b61a1 : jle 0xb6221 ; or eax, 0x3d8d4800 ; cld ; ret
0x00000000000cbacd : jle 0xcbadb ; ret
0x00000000000cc309 : jle 0xcc30f ; add byte ptr [rax], al ; ret
0x00000000000d7e00 : jle 0xd7db0 ; cmp r9b, r11b ; jne 0xd7dcf ; jmp 0xd7dbe
0x00000000001068c5 : jmp 0x105f75
0x000000000010b5b3 : jmp 0x10b5dc
0x000000000010b68e : jmp 0x10b6b9
0x000000000010c4dc : jmp 0x10c229
0x000000000010c50c : jmp 0x10c444
0x000000000010da22 : jmp 0x10d92d
0x000000000010e2b9 : jmp 0x10e27e
0x000000000011027e : jmp 0x11028d
0x000000000011270d : jmp 0x1126d3
0x00000000001183d1 : jmp 0x118396
0x0000000000118a3e : jmp 0x118986
0x000000000019ef91 : jmp 0x1196
0x000000000011a192 : jmp 0x119f69
0x000000000011a532 : jmp 0x11a321
0x000000000011dfb9 : jmp 0x11df7e
0x0000000000123bda : jmp 0x123c27
0x00000000001283b1 : jmp 0x1280c3
0x00000000001318df : jmp 0x1318a5
0x0000000000137bde : jmp 0x137be8
0x000000000013d95a : jmp 0x13d920
0x000000000014092d : jmp 0x140955
0x000000000018138a : jmp 0x18138c
0x00000000001813a6 : jmp 0x1813a8
0x00000000001813aa : jmp 0x1813ac
0x0000000000181476 : jmp 0x181478
0x000000000018147a : jmp 0x18147c
0x000000000018147e : jmp 0x181480
0x0000000000181482 : jmp 0x181484
0x0000000000181486 : jmp 0x181488
0x000000000018148a : jmp 0x18148c
0x000000000018148e : jmp 0x181490
0x0000000000181492 : jmp 0x181494
0x0000000000181496 : jmp 0x181498
0x000000000018149a : jmp 0x18149c
0x0000000000182a4a : jmp 0x182a89
0x0000000000183789 : jmp 0x18375c
0x0000000000184780 : jmp 0x184714
0x000000000018477f : jmp 0x184715
0x00000000001981ca : jmp 0x1981cc
0x00000000001981f2 : jmp 0x1981f4
0x0000000000198252 : jmp 0x198254
0x0000000000198709 : jmp 0x1986fc
0x00000000001a1732 : jmp 0x1a1734
0x00000000001a17e2 : jmp 0x1a17e4
0x000000000001f46b : jmp 0x1f427
0x00000000001731e0 : jmp 0x1f4c2
0x0000000000033306 : jmp 0x2102b34e
0x000000000002718b : jmp 0x26f9e
0x0000000000028f5e : jmp 0x288a6
0x000000000002b198 : jmp 0x2b1a3
0x000000000002d89f : jmp 0x2d529
0x0000000000031c45 : jmp 0x30af3
0x00000000000379f4 : jmp 0x379fe
0x0000000000003873 : jmp 0x3839
0x0000000000039a87 : jmp 0x39ab2
0x0000000000039e03 : jmp 0x39e2e
0x000000000003a324 : jmp 0x3a2ea
0x000000000003f77e : jmp 0x3f3ce
0x000000000004224d : jmp 0x41e9d
0x00000000000473a2 : jmp 0x473f4
0x00000000000e6fe0 : jmp 0x48d0f930
0x0000000000133222 : jmp 0x48d2f4b2
0x0000000000071572 : jmp 0x48f59ec5
0x0000000000048f92 : jmp 0x48fe4
0x000000000004df04 : jmp 0x4a1ae
0x000000000015a7ba : jmp 0x4f94b7b8
0x000000000015a7b9 : jmp 0x4f94b7b9
0x000000000015d28a : jmp 0x4f94e288
0x000000000015d289 : jmp 0x4f94e289
0x000000000015fdaa : jmp 0x4f950da8
0x000000000015fda9 : jmp 0x4f950da9
0x0000000000051d2a : jmp 0x50c2e
0x0000000000055ff1 : jmp 0x55da0
0x0000000000057450 : jmp 0x573d9
0x00000000000627f0 : jmp 0x5a5af
0x000000000005bc14 : jmp 0x5bbba
0x000000000005d424 : jmp 0x5bbd8
0x000000000005d153 : jmp 0x5d118
0x0000000000060f20 : jmp 0x5d1c5
0x0000000000061a51 : jmp 0x61a16
0x0000000000061f2d : jmp 0x61d7a
0x0000000000061ec4 : jmp 0x61dbf
0x0000000000066f32 : jmp 0x631e2
0x0000000000067036 : jmp 0x63297
0x0000000000063bfa : jmp 0x63cc5
0x0000000000066179 : jmp 0x6613e
0x000000000006b7f8 : jmp 0x67af6
0x000000000006af34 : jmp 0x6aefa
0x000000000006b254 : jmp 0x6b219
0x000000000007441b : jmp 0x743e1
0x000000000007441a : jmp 0x743e2
0x00000000001175e7 : jmp 0x76d3af37
0x0000000000045aee : jmp 0x77c6943f
0x000000000007d7be : jmp 0x7d784
0x00000000001977da : jmp 0x8234e7
0x000000000019789a : jmp 0x8545a7
0x0000000000088895 : jmp 0x8885b
0x0000000000089af4 : jmp 0x89aba
0x0000000000089c48 : jmp 0x89c0d
0x0000000000197aba : jmp 0x9047c7
0x00000000000960c5 : jmp 0x95f21
0x00000000000967ac : jmp 0x96772
0x00000000000968f8 : jmp 0x968bd
0x0000000000096aa2 : jmp 0x96a67
0x0000000000098ec9 : jmp 0x98e63
0x000000000009b666 : jmp 0x9b670
0x000000000009e7f6 : jmp 0x9e20c
0x000000000009eb3c : jmp 0x9e65e
0x000000000009e669 : jmp 0x9ea59
0x00000000000a946e : jmp 0xa9434
0x00000000000a953f : jmp 0xa9505
0x00000000000a95ae : jmp 0xa9574
0x00000000000aced3 : jmp 0xaccc7
0x00000000000ad32d : jmp 0xad157
0x00000000000b5d27 : jmp 0xb5ced
0x00000000000b5d26 : jmp 0xb5cee
0x00000000000ba512 : jmp 0xba4d7
0x00000000000bb784 : jmp 0xbb5a2
0x00000000000be6db : jmp 0xbe6a1
0x00000000000c6e71 : jmp 0xc6e36
0x00000000000c87a4 : jmp 0xc87ce
0x00000000000cbae5 : jmp 0xce2ab
0x00000000000d1c8c : jmp 0xd1c51
0x00000000000d884e : jmp 0xd8813
0x00000000000e328b : jmp 0xe3251
0x00000000000e3fb4 : jmp 0xe3f79
0x0000000000107494 : jmp 0xf10749d
0x00000000000f3076 : jmp 0xf2c14
0x00000000000f4706 : jmp 0xf4688
0x00000000000fcc91 : jmp 0xfcc53
0x0000000000116fe3 : jmp 0xfd402fa
0x0000000000133306 : jmp 0xffffffff80d62a1e
0x0000000000133527 : jmp 0xffffffff80d62c3f
0x000000000002cd17 : jmp 0xffffffff854acd28
0x00000000001215d8 : jmp 0xffffffff895ed868
0x00000000000f1a56 : jmp 0xffffffff8b58dce6
0x0000000000136bb4 : jmp 0xffffffff8d5b8a29
0x000000000012ab52 : jmp 0xffffffffc0987f5d
0x0000000000003156 : jmp 0xffffffffc25d0602
0x00000000000aaa53 : jmp 0xffffffffc30aaa5c
0x0000000000047aa1 : jmp 0xffffffffc31403f6
0x00000000001161be : jmp 0xffffffffc3e1eb13
0x0000000000115fee : jmp 0xffffffffc409e93f
0x00000000000988f5 : jmp 0xffffffffc58cca02
0x000000000007cc4d : jmp 0xffffffffd107cc54
0x00000000000ac54b : jmp 0xfffffffffffa4e9c
0x0000000000045ac6 : jmp qword ptr [r8]
0x00000000001886ab : jmp qword ptr [rax + 0x10fff43f]
0x0000000000196a27 : jmp qword ptr [rax + 0x10fffc3b]
0x0000000000196ef7 : jmp qword ptr [rax + 0x10fffc67]
0x000000000019745f : jmp qword ptr [rax + 0x10fffc88]
0x00000000001871e7 : jmp qword ptr [rax + 0x10fffc8e]
0x000000000019685b : jmp qword ptr [rax + 0x20fffc3d]
0x0000000000196853 : jmp qword ptr [rax + 0x20fffc3e]
0x000000000019684b : jmp qword ptr [rax + 0x20fffc3f]
0x0000000000196843 : jmp qword ptr [rax + 0x20fffc40]
0x000000000019683b : jmp qword ptr [rax + 0x20fffc41]
0x0000000000197457 : jmp qword ptr [rax + 0x20fffc89]
0x000000000019744f : jmp qword ptr [rax + 0x20fffc8a]
0x0000000000197447 : jmp qword ptr [rax + 0x20fffc8b]
0x000000000019743f : jmp qword ptr [rax + 0x20fffc8c]
0x0000000000197233 : jmp qword ptr [rax + 0x20fffc8e]
0x000000000019638b : jmp qword ptr [rax + 0x30fffbf5]
0x0000000000195d5f : jmp qword ptr [rax + 0x40fffb1b]
0x00000000001963eb : jmp qword ptr [rax - 0x1f00041b]
0x0000000000187373 : jmp qword ptr [rax - 0x2f000e19]
0x00000000001960f3 : jmp qword ptr [rax - 0x3d]
0x00000000001872db : jmp qword ptr [rax - 0x3f000e23]
0x0000000000033309 : jmp qword ptr [rax]
0x00000000001862ab : jmp qword ptr [rbp - 0x2b00121d]
0x00000000001986fb : jmp qword ptr [rbx + rax*8]
0x0000000000197beb : jmp qword ptr [rbx + rdi*2 - 0x1abc0000]
0x00000000001884af : jmp qword ptr [rbx - 0x33]
0x000000000000254b : jmp qword ptr [rbx]
0x00000000000d2e03 : jmp qword ptr [rcx]
0x000000000018635f : jmp qword ptr [rdi - 0x2b00121b]
0x00000000000f20a8 : jmp qword ptr [rdi]
0x0000000000196de7 : jmp qword ptr [rdx + 0x12fffc61]
0x000000000018602b : jmp qword ptr [rdx - 0x3d]
0x000000000005bc90 : jmp qword ptr [rdx]
0x0000000000039c31 : jmp qword ptr [rsi + 0xf]
0x0000000000197643 : jmp qword ptr [rsi + rdx*2 - 0x561c0000]
0x000000000003420d : jmp qword ptr [rsi - 0x70]
0x000000000000a198 : jmp qword ptr [rsi]
0x000000000017438f : jmp qword ptr [rsp + rcx*8 - 0x33190016]
0x00000000001743a7 : jmp qword ptr [rsp + rcx*8 - 0x332e0016]
0x000000000017438b : jmp qword ptr [rsp + rcx*8 - 0x335b0016]
0x0000000000001b62 : jmp r10
0x000000000012b7ba : jmp r8
0x000000000015080d : jmp r9
0x00000000001872e3 : jmp rax
0x00000000001a2d03 : jmp rbx
0x000000000002c5ba : jmp rcx
0x0000000000033336 : jmp rdi
0x0000000000001b63 : jmp rdx
0x0000000000063342 : jmp rsi
0x0000000000002a55 : jmp rsp
0x00000000001031f8 : jne 0x1031e0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001057c8 : jne 0x105792 ; mov qword ptr [rbp - 0x58], rax ; mov rdx, rax ; jmp 0x105804
0x0000000000105871 : jne 0x10583b ; mov qword ptr [rbp - 0x58], rax ; mov rdx, rax ; jmp 0x1058ae
0x0000000000105ea7 : jne 0x105e9e ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010b5b1 : jne 0x10b5c4 ; jmp 0x10b5de
0x000000000010b68c : jne 0x10b6a1 ; jmp 0x10b6bb
0x000000000011286e : jne 0x1128a7 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011451d : jne 0x114516 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000114595 : jne 0x1145a9 ; cmp qword ptr [rdi], 0 ; je 0x1145b1 ; ret
0x0000000000114608 : jne 0x114617 ; mov eax, 1 ; ret
0x0000000000114638 : jne 0x114644 ; xor eax, eax ; ret
0x0000000000114668 : jne 0x114674 ; xor eax, eax ; ret
0x0000000000114698 : jne 0x1146a4 ; xor eax, eax ; ret
0x00000000001146c8 : jne 0x1146d4 ; xor eax, eax ; ret
0x00000000001146f8 : jne 0x114704 ; xor eax, eax ; ret
0x0000000000114728 : jne 0x114734 ; xor eax, eax ; ret
0x0000000000114758 : jne 0x114764 ; xor eax, eax ; ret
0x0000000000114788 : jne 0x114794 ; xor eax, eax ; ret
0x00000000001147b8 : jne 0x1147c4 ; xor eax, eax ; ret
0x00000000001147e8 : jne 0x1147f4 ; xor eax, eax ; ret
0x0000000000114818 : jne 0x114824 ; xor eax, eax ; ret
0x0000000000114848 : jne 0x114854 ; xor eax, eax ; ret
0x0000000000114878 : jne 0x114884 ; xor eax, eax ; ret
0x00000000001148a8 : jne 0x1148b4 ; xor eax, eax ; ret
0x00000000001148d8 : jne 0x1148e4 ; xor eax, eax ; ret
0x0000000000114908 : jne 0x114914 ; xor eax, eax ; ret
0x0000000000114938 : jne 0x114944 ; xor eax, eax ; ret
0x0000000000114968 : jne 0x114974 ; xor eax, eax ; ret
0x0000000000114998 : jne 0x1149a4 ; xor eax, eax ; ret
0x00000000001149c8 : jne 0x1149d4 ; xor eax, eax ; ret
0x0000000000114a28 : jne 0x114a34 ; xor eax, eax ; ret
0x0000000000114a58 : jne 0x114a64 ; xor eax, eax ; ret
0x0000000000114a88 : jne 0x114a94 ; xor eax, eax ; ret
0x0000000000114ab8 : jne 0x114ac4 ; xor eax, eax ; ret
0x0000000000114ae8 : jne 0x114af4 ; xor eax, eax ; ret
0x0000000000114b18 : jne 0x114b24 ; xor eax, eax ; ret
0x0000000000114b48 : jne 0x114b54 ; xor eax, eax ; ret
0x0000000000114b78 : jne 0x114b84 ; xor eax, eax ; ret
0x0000000000114ba8 : jne 0x114bb4 ; xor eax, eax ; ret
0x0000000000114bf2 : jne 0x114be9 ; pop rdx ; pop r10 ; ret
0x0000000000114ce5 : jne 0x114cf3 ; ret
0x0000000000114f04 : jne 0x114ee3 ; ret
0x0000000000114f3f : jne 0x114f33 ; leave ; ret
0x0000000000115062 : jne 0x115023 ; leave ; ret
0x000000000011563b : jne 0x115616 ; lea rdi, qword ptr [rip - 0x174] ; call rax
0x0000000000115fed : jne 0x115fdd ; mov rax, rdi ; ret
0x00000000001161bd : jne 0x1161ad ; mov rax, r10 ; ret
0x0000000000116284 : jne 0x11622e ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011760a : jne 0x117620 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001178d1 : jne 0x117884 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001202e3 : jne 0x1202d3 ; pop rbx ; ret
0x0000000000123e14 : jne 0x123def ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000126718 : jne 0x12666a ; ret
0x000000000012886c : jne 0x128872 ; ret
0x00000000001288ac : jne 0x1288a0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d91d : jne 0x12d950 ; mov dword ptr [rsi], 0 ; ret
0x000000000012e1f5 : jne 0x12e208 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012e2fd : jne 0x12e297 ; xor eax, eax ; pop rbx ; ret
0x0000000000132698 : jne 0x1326a2 ; ret
0x00000000001385c7 : jne 0x1385b3 ; pop rbx ; ret
0x0000000000138858 : jne 0x138862 ; ret
0x000000000013a153 : jne 0x13a14a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013bb87 : jne 0x13bb92 ; ret
0x000000000013bbc7 : jne 0x13bbd2 ; ret
0x000000000014092b : jne 0x14093d ; jmp 0x140957
0x0000000000142fdb : jne 0x142fbe ; add rsp, 0x48 ; ret
0x0000000000142fbd : jne 0x142ff0 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143085 : jne 0x143098 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001430f8 : jne 0x143116 ; add rsp, 0x38 ; ret
0x0000000000143c08 : jne 0x143c14 ; xor eax, eax ; ret
0x0000000000143c38 : jne 0x143c44 ; xor eax, eax ; ret
0x0000000000143c68 : jne 0x143c74 ; xor eax, eax ; ret
0x0000000000143c98 : jne 0x143ca4 ; xor eax, eax ; ret
0x0000000000143cc8 : jne 0x143cd4 ; xor eax, eax ; ret
0x0000000000143cf8 : jne 0x143d04 ; xor eax, eax ; ret
0x00000000001680c1 : jne 0x168676 ; ret
0x000000000016f25d : jne 0x16f287 ; xor eax, eax ; ret
0x000000000016e851 : jne 0x16f28b ; xor eax, eax ; ret
0x000000000016e879 : jne 0x16f297 ; xor eax, eax ; ret
0x000000000017009d : jne 0x1700c7 ; xor eax, eax ; ret
0x000000000016fe81 : jne 0x1700cb ; xor eax, eax ; ret
0x00000000001700d1 : jne 0x1700da ; xor eax, eax ; ret
0x000000000016fea7 : jne 0x1700de ; xor eax, eax ; ret
0x00000000001701e5 : jne 0x170176 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001701b7 : jne 0x170176 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001701b6 : jne 0x170177 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000171944 : jne 0x171b58 ; xor eax, eax ; ret
0x0000000000171b49 : jne 0x171b69 ; xor eax, eax ; ret
0x00000000001719f1 : jne 0x171b6d ; xor eax, eax ; ret
0x0000000000171b61 : jne 0x171b6e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000172176 : jne 0x172184 ; xor eax, eax ; ret
0x000000000017204d : jne 0x172186 ; ret
0x00000000001730cd : jne 0x1730be ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000173120 : jne 0x173100 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001731c8 : jne 0x1731f0 ; mov rdi, qword ptr [r13] ; call 0x1f4c8
0x000000000017325d : jne 0x17324d ; pop rbx ; ret
0x0000000000173329 : jne 0x1732f7 ; add rsp, 8 ; ret
0x00000000001734a8 : jne 0x1734b3 ; ret
0x0000000000173589 : jne 0x17357c ; pop rbx ; ret
0x000000000018719d : jne 0x18719d ; call rax
0x0000000000187c69 : jne 0x187c60 ; jmp rdx
0x0000000000197a6d : jne 0x197a75 ; add byte ptr [rcx + rdx*8 - 0x17], al ; jmp rsp
0x00000000001996b1 : jne 0x1996a7 ; jmp rsp
0x00000000001bc359 : jne 0x1bc358 ; call rcx
0x0000000000032bff : jne 0x32ba6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033954 : jne 0x33932 ; ret
0x0000000000035168 : jne 0x35173 ; ret
0x000000000000375a : jne 0x3738 ; ret 0x975
0x0000000000039a85 : jne 0x39a9a ; jmp 0x39ab4
0x0000000000039e01 : jne 0x39e16 ; jmp 0x39e30
0x000000000003a4bb : jne 0x3a4c3 ; pop rbx ; ret
0x00000000000460b8 : jne 0x460b6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000047081 : jne 0x47067 ; mov eax, 1 ; ret
0x00000000000470a7 : jne 0x4709c ; xor eax, eax ; ret
0x0000000000047211 : jne 0x471f7 ; mov eax, 1 ; ret
0x0000000000047237 : jne 0x4722c ; xor eax, eax ; ret
0x00000000000474d7 : jne 0x474c6 ; mov rax, rdx ; ret
0x0000000000047b8f : jne 0x47b86 ; mov rax, rdx ; ret
0x0000000000049741 : jne 0x4972d ; mov rax, rsi ; ret
0x00000000000497c5 : jne 0x497a5 ; mov rax, rsi ; ret
0x000000000004df34 : jne 0x4d931 ; jmp 0x4a1b4
0x000000000004df19 : jne 0x4d97f ; jmp 0x4a1b4
0x000000000004defe : jne 0x4d9ae ; jmp 0x4a1b4
0x00000000000607f9 : jne 0x60780 ; ret 0x8308
0x000000000006c121 : jne 0x6c136 ; mov rax, rbx ; pop rbx ; ret
0x0000000000072fe1 : jne 0x72fd3 ; ret
0x0000000000075aec : jne 0x75af3 ; pop rbx ; ret
0x0000000000079210 : jne 0x79226 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b075 : jne 0x7b082 ; ret
0x000000000007bc21 : jne 0x7bc13 ; ret
0x000000000007c981 : jne 0x7c998 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007cd02 : jne 0x7cced ; pop rbx ; ret
0x000000000007cd3c : jne 0x7cd35 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007d5e6 : jne 0x7d5db ; ret
0x000000000007e6bf : jne 0x7e694 ; mov rdi, rbp ; neg rdi ; call qword ptr [r15]
0x000000000007e6d7 : jne 0x7e708 ; xor edi, edi ; call qword ptr [r15]
0x00000000000888bd : jne 0x8885f ; xor eax, eax ; pop rbx ; ret
0x0000000000089761 : jne 0x89753 ; ret
0x00000000000897c1 : jne 0x897ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008980b : jne 0x89803 ; ret
0x0000000000089ca2 : jne 0x89cb4 ; lea rax, qword ptr [rip + 5] ; ret
0x000000000008b893 : jne 0x8b89e ; xor rax, rax ; ret
0x000000000008bb2e : jne 0x8bb40 ; lea rax, qword ptr [rip + 9] ; ret
0x000000000008d7de : jne 0x8d7a4 ; add rsp, 8 ; ret
0x000000000008d801 : jne 0x8d816 ; add rsp, 8 ; ret
0x000000000008ead9 : jne 0x8eb35 ; xor rax, rax ; ret
0x000000000008ea99 : jne 0x8eb59 ; xor rax, rax ; ret
0x000000000008eb88 : jne 0x8eb9b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000008f2be : jne 0x8f2a3 ; ret
0x000000000008f483 : jne 0x8f36f ; mov rax, rdi ; ret
0x000000000008f3d9 : jne 0x8f3c5 ; mov rax, rdi ; ret
0x000000000008f99e : jne 0x8f9b0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008fa01 : jne 0x8fa13 ; lea rax, qword ptr [rip + 6] ; ret
0x0000000000091c8e : jne 0x91ca0 ; lea rax, qword ptr [rip + 0x79] ; ret
0x0000000000091cf1 : jne 0x91d03 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000009436e : jne 0x9435c ; xor eax, eax ; ret
0x00000000000943b3 : jne 0x943c6 ; lea rax, qword ptr [rip + 0xbb94] ; ret
0x0000000000094528 : jne 0x94400 ; ret
0x0000000000094469 : jne 0x94453 ; ret
0x00000000000969f6 : jne 0x969e1 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096aa0 : jne 0x96aaf ; jmp 0x96a69
0x000000000009733b : jne 0x97310 ; mov rax, rdi ; ret
0x0000000000097400 : jne 0x973ca ; xor eax, eax ; ret
0x000000000009e7f4 : jne 0x9e7ed ; jmp 0x9e20e
0x000000000009eb3a : jne 0x9eb33 ; jmp 0x9e660
0x000000000009f076 : jne 0x9f06b ; ret
0x000000000009f0ba : jne 0x9f0ab ; ret
0x000000000009f114 : jne 0x9f0f3 ; ret
0x000000000009f1ba : jne 0x9f1a8 ; cmp r8d, ecx ; je 0x9f1a8 ; ret
0x000000000009f1f9 : jne 0x9f1ec ; xor eax, eax ; ret
0x000000000009f252 : jne 0x9f234 ; xor eax, eax ; ret
0x000000000009f2b2 : jne 0x9f2a5 ; mov qword ptr [rdx], rcx ; ret
0x000000000009f37b : jne 0x9f370 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009f401 : jne 0x9f3e8 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009f62d : jne 0x9f6b8 ; xor eax, eax ; ret
0x000000000009f66a : jne 0x9f6e4 ; xor eax, eax ; ret
0x000000000009ff3c : jne 0x9ff26 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a56ba : jne 0xa5f76 ; ret
0x00000000000a6d5d : jne 0xa7786 ; ret
0x00000000000a92a1 : jne 0xa9292 ; ret
0x00000000000a9351 : jne 0xa9342 ; ret
0x00000000000a94c1 : jne 0xa94b6 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a9611 : jne 0xa9606 ; sub rax, 1 ; ret
0x00000000000a9cf7 : jne 0xa9ceb ; ret
0x00000000000aaac6 : jne 0xaab42 ; ret
0x00000000000aa9ef : jne 0xaab46 ; ret
0x00000000000aa9ce : jne 0xaab48 ; xor eax, eax ; ret
0x00000000000aab78 : jne 0xaab8b ; lea rax, qword ptr [rip + 0xf38f] ; ret
0x00000000000aaf33 : jne 0xaaefe ; nop dword ptr [rax] ; ret
0x00000000000aaf76 : jne 0xaaf69 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ab039 : jne 0xab025 ; sub eax, r8d ; ret
0x00000000000ab40b : jne 0xab466 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab4e3 : jne 0xab4b3 ; ret
0x00000000000ab4cd : jne 0xab4c3 ; ret
0x00000000000ab5a8 : jne 0xab59c ; xor eax, eax ; ret
0x00000000000ab618 : jne 0xab5f9 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000ab728 : jne 0xab73b ; lea rax, qword ptr [rip + 0xe74f] ; ret
0x00000000000ab7d5 : jne 0xab7e2 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ab813 : jne 0xab80b ; ret
0x00000000000ac97b : jne 0xac935 ; mov rax, rdx ; ret
0x00000000000ac9cc : jne 0xac9c3 ; ret
0x00000000000ac9cb : jne 0xac9c4 ; ret
0x00000000000b9f07 : jne 0xb9ed0 ; ret
0x00000000000b9f34 : jne 0xb9f2b ; ret
0x00000000000bbc9e : jne 0xbbc69 ; xor eax, eax ; xor edi, edi ; mov word ptr [rbp - 0x3e], ax ; jmp 0xbbc7f
0x00000000000bea19 : jne 0xbea31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000c78e2 : jne 0xc7893 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000c87a2 : jne 0xc87b6 ; jmp 0xc87d0
0x00000000000cc290 : jne 0xcc25e ; ret
0x00000000000cc2d7 : jne 0xcc262 ; mov eax, 0x7d00 ; ret
0x00000000000cc39d : jne 0xcc3d3 ; ret
0x00000000000cff40 : jne 0xcff24 ; ret
0x00000000000cff78 : jne 0xcff3d ; mov eax, 1 ; ret
0x00000000000cff88 : jne 0xcff53 ; mov eax, 1 ; ret
0x00000000000d004e : jne 0xd000f ; mov eax, 1 ; ret
0x00000000000d0066 : jne 0xd002c ; mov eax, 1 ; ret
0x00000000000d7e05 : jne 0xd7dca ; jmp 0xd7db9
0x00000000000d8846 : jne 0xd87e1 ; mov r12d, 1 ; jmp 0xd881b
0x00000000000efefb : jne 0xefee8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7a5f : jne 0xf7ae9 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000fb86f : jne 0xfb816 ; mov edi, ebp ; call 0xf7b06
0x00000000000fe1f1 : jne 0xfe1c3 ; pop rbx ; ret
0x00000000000fe3b2 : jne 0xfe383 ; pop rbx ; ret
0x00000000000ff048 : jne 0xff009 ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000ff370 : jne 0xff35f ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000000ffefb : jne 0xfff2f ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x000000000016eb0e : jno 0x16eb1d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000186cf9 : jno 0x186ceb ; jmp qword ptr [rax]
0x0000000000186d05 : jno 0x186cf7 ; call rax
0x0000000000186d09 : jno 0x186cfb ; call rax
0x0000000000186d0d : jno 0x186cff ; call rax
0x0000000000186d11 : jno 0x186d03 ; call rax
0x0000000000186d15 : jno 0x186d07 ; call rax
0x0000000000186d19 : jno 0x186d0b ; call rax
0x0000000000186d1d : jno 0x186d0f ; call rax
0x0000000000186d21 : jno 0x186d13 ; call rax
0x0000000000186d25 : jno 0x186d17 ; call rax
0x0000000000186d29 : jno 0x186d1b ; call rax
0x0000000000186d2d : jno 0x186d1f ; call rax
0x0000000000186d31 : jno 0x186d23 ; call rax
0x0000000000186d3d : jno 0x186d2f ; call rax
0x0000000000186d41 : jno 0x186d33 ; call rax
0x0000000000186d45 : jno 0x186d37 ; call rax
0x0000000000186d49 : jno 0x186d3b ; call rax
0x0000000000186d4d : jno 0x186d3f ; call rax
0x0000000000186d51 : jno 0x186d43 ; call rax
0x0000000000186d55 : jno 0x186d47 ; call rax
0x0000000000186d59 : jno 0x186d4b ; call rax
0x0000000000186d5d : jno 0x186d4f ; call rax
0x0000000000186d61 : jno 0x186d53 ; call rax
0x0000000000186d65 : jno 0x186d57 ; call rax
0x0000000000186d69 : jno 0x186d5b ; call rax
0x0000000000186d71 : jno 0x186d63 ; call rax
0x0000000000186d7d : jno 0x186d73 ; inc eax ; je 0x186d77 ; call rax
0x0000000000186d85 : jno 0x186d77 ; call rax
0x0000000000186d89 : jno 0x186d7b ; call rax
0x0000000000186d8d : jno 0x186d7f ; call rax
0x0000000000186d99 : jno 0x186d8b ; call rax
0x0000000000186da5 : jno 0x186d97 ; call rax
0x0000000000186da9 : jno 0x186d9b ; call rax
0x0000000000186dad : jno 0x186d9f ; call rax
0x0000000000186db1 : jno 0x186da3 ; call rax
0x0000000000195f9c : jno 0x195f42 ; std ; jmp qword ptr [rax]
0x0000000000195f98 : jno 0x195f42 ; std ; push qword ptr [rcx - 0x5f] ; std ; jmp qword ptr [rax]
0x0000000000195fcc : jno 0x195f72 ; std ; call qword ptr [rcx]
0x0000000000195fc8 : jno 0x195f72 ; std ; push qword ptr [rcx - 0x5f] ; std ; call qword ptr [rcx]
0x000000000019602c : jno 0x195fd2 ; std ; jmp rdi
0x0000000000196028 : jno 0x195fd2 ; std ; push qword ptr [rcx - 0x5f] ; std ; jmp rdi
0x000000000019606c : jno 0x196012 ; std ; call rax
0x0000000000196068 : jno 0x196012 ; std ; push qword ptr [rcx - 0x5f] ; std ; call rax
0x00000000001960ac : jno 0x196058 ; std ; dec eax ; sar ebx, -1 ; nop ; ret
0x0000000000196b35 : jno 0x196b35 ; call qword ptr [rsi]
0x0000000000196bb9 : jno 0x196bbd ; call qword ptr [rdx + 0x22fffc70]
0x0000000000196c75 : jno 0x196c75 ; jmp rsp
0x0000000000196cf5 : jno 0x196cf5 ; call rax
0x0000000000196cf4 : jno 0x196cf6 ; call rax
0x000000000019a451 : jno 0x19a44b ; jmp rsp
0x000000000019adb1 : jno 0x19adac ; call rsp
0x000000000019d0b9 : jno 0x19d0a5 ; call qword ptr [rax]
0x000000000019d0d1 : jno 0x19d0bd ; jmp qword ptr [rax]
0x00000000001a1af6 : jno 0x1a1b04 ; ret
0x00000000001a1af6 : jno 0x1a1b0a ; ret
0x00000000001a4df1 : jno 0x1a4de2 ; jmp qword ptr [rcx]
0x00000000001a7f41 : jno 0x1a7f34 ; jmp qword ptr [rax]
0x00000000001b1771 : jno 0x1b176a ; jmp qword ptr [rcx]
0x00000000001b1789 : jno 0x1b1782 ; jmp qword ptr [rcx]
0x00000000001b17a1 : jno 0x1b179a ; jmp rbx
0x00000000001bc511 : jno 0x1bc50d ; call qword ptr [rcx]
0x00000000000021cb : jno 0x2218 ; ret 0x1dd4
0x000000000000390f : jno 0x3959 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000047994 : jno 0x479e6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000072641 : jno 0x7264f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007b476 : jno 0x7b4c1 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ab7d3 : jno 0xab7e2 ; jne 0xab7e4 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ab7d9 : jno 0xab7e6 ; ret
0x00000000000ea8e3 : jno 0xea884 ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x00000000001202de : jnp 0x120330 ; test rdi, rdi ; jne 0x1202d8 ; pop rbx ; ret
0x0000000000134693 : jnp 0x1346ff ; call rax
0x00000000001350b3 : jnp 0x13510f ; call rax
0x0000000000183265 : jnp 0x183222 ; ret
0x0000000000197bed : jnp 0x197bf5 ; add byte ptr [rbp - 0x17], al ; call rsp
0x00000000001991c9 : jnp 0x1991bd ; call rsp
0x00000000001b5709 : jnp 0x1b5717 ; ret
0x00000000001b5709 : jnp 0x1b571e ; ret
0x00000000001be8c8 : jnp 0x1be8d0 ; add byte ptr [rax], al ; ret 6
0x000000000003a3db : jnp 0x3a3ee ; mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
0x00000000000460b5 : jnp 0x460c1 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000fc8c8 : jnp 0x481bed1b ; add esp, 0x18 ; ret
0x00000000000ab741 : jnp 0xab782 ; or al, 0 ; ret
0x00000000000cc29c : jnp 0xcc2d2 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000134403 : jns 0x1343b1 ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000018236e : jns 0x182304 ; ret 0xf869
0x000000000018236d : jns 0x182305 ; ret 0xf869
0x000000000018477e : jns 0x1847d5 ; jmp 0x184716
0x00000000001983b1 : jns 0x1983a2 ; call rsp
0x00000000001a4255 : jns 0x1a425d ; add al, ch ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001b18c1 : jns 0x1b18ba ; jmp rdi
0x0000000000001b2d : jns 0x1b38 ; ret
0x0000000000002bc7 : jns 0x2b95 ; clc ; ret
0x0000000000003237 : jns 0x3212 ; ret 0x5a51
0x00000000000038ab : jns 0x38fe ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000008f9a3 : jns 0x8f9a9 ; add byte ptr [rax], al ; ret
0x0000000000091c93 : jns 0x91c99 ; add byte ptr [rax], al ; ret
0x00000000000fdd54 : jns 0xfdd62 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000001373d0 : jns 0xffffffffc496bcb7 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a8d86 : jns 0xffffffffed3a90ec ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a8de8 : jns 0xffffffffed3a954e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a8e08 : jns 0xffffffffed3a966e ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000132073 : jo 0x1320d9 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001329a3 : jo 0x132a09 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000133687 : jo 0x1336c7 ; mov rdi, rcx ; jmp r8
0x0000000000136505 : jo 0x136564 ; ret
0x00000000001833e4 : jo 0x18345e ; mov ebp, 0xfb67d10d ; ret
0x00000000001860a0 : jo 0x1860fb ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001871d4 : jo 0x187160 ; cld ; jmp rax
0x0000000000187370 : jo 0x187360 ; int1 ; jmp qword ptr [rax - 0x2f000e19]
0x000000000018755c : jo 0x18755e ; int1 ; jmp qword ptr [rax]
0x0000000000187d39 : jo 0x187d30 ; call qword ptr [rsi]
0x000000000018b738 : jo 0x18b7a0 ; cli ; call qword ptr [rax]
0x0000000000195dc0 : jo 0x195e14 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000195e2c : jo 0x195e90 ; sti ; dec dword ptr [rdi - 0x76] ; std ; jmp qword ptr [rax]
0x0000000000196204 : jo 0x1961bd ; sti ; inc eax ; mov cl, 0xfb ; call qword ptr [rax]
0x0000000000196424 : jo 0x196410 ; sti ; inc eax ; in al, -5 ; call qword ptr [rax]
0x00000000001964b0 : jo 0x1964ca ; cld ; push qword ptr [rax] ; adc edi, esp ; call qword ptr [rax]
0x000000000019659c : jo 0x1965ad ; cld ; inc eax ; or esp, edi ; call qword ptr [rax]
0x000000000019686c : jo 0x1968ac ; cld ; jmp rsi
0x0000000000196b01 : jo 0x196b01 ; jmp rax
0x0000000000196bbd : jo 0x196bbd ; jmp qword ptr [rdx]
0x0000000000196f28 : jo 0x196f8e ; cld ; jmp rax
0x0000000000196f30 : jo 0x196f95 ; cld ; call qword ptr [rax]
0x0000000000196f70 : jo 0x196fbc ; cld ; call qword ptr [rax + 0x10fffc44]
0x000000000019f331 : jo 0x19f31e ; jmp rsp
0x00000000001a55c0 : jo 0x1a554c ; in eax, dx ; call qword ptr [rsi]
0x00000000001acc90 : jo 0x1acc9e ; ret
0x00000000001ade90 : jo 0x1adeee ; stc ; call qword ptr [rax]
0x00000000001ae570 : jo 0x1ae50c ; hlt ; jmp qword ptr [rcx]
0x00000000001ae810 : jo 0x1ae7b8 ; hlt ; jmp qword ptr [rcx]
0x00000000001af7a0 : jo 0x1af792 ; hlt ; jmp qword ptr [rsi]
0x00000000001b16b1 : jo 0x1b16aa ; jmp qword ptr [rcx]
0x00000000001b16b0 : jo 0x1b16ab ; jmp qword ptr [rcx]
0x00000000001b16c9 : jo 0x1b16c2 ; jmp qword ptr [rcx]
0x00000000001b16e1 : jo 0x1b16da ; jmp qword ptr [rcx]
0x00000000001b16f9 : jo 0x1b16f2 ; jmp qword ptr [rcx]
0x00000000001b1741 : jo 0x1b173a ; jmp qword ptr [rcx]
0x00000000001b1759 : jo 0x1b1752 ; jmp qword ptr [rcx]
0x00000000001b16e0 : jo 0x1b1755 ; cmc ; jmp qword ptr [rcx]
0x00000000001b8101 : jo 0x1b8108 ; ret 0xa01
0x000000000002e523 : jo 0x2e574 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e522 : jo 0x2e575 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000440d6 : jo 0x440e1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007305a : jo 0x73072 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000076f0a : jo 0x76e97 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000076f09 : jo 0x76e98 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000007a7f4 : jo 0x7a845 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000081aa1 : jo 0x81a28 ; ret
0x00000000000ac15b : jo 0xac1ad ; mov edi, esp ; call rbx
0x00000000000add40 : jo 0xadd54 ; xchg eax, esp ; ret
0x00000000000b0579 : jo 0xb058d ; xchg eax, esp ; ret
0x00000000000b2c49 : jo 0xb2c5d ; xchg eax, esp ; ret
0x00000000000fc886 : jo 0xfc8ab ; ret
0x00000000000bec3e : jo 0xffffffff941b1d43 ; ret 0xf980
0x00000000001059b4 : jp 0x1059b3 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000112e85 : jp 0x112edc ; mov rsi, rdx ; call rax
0x00000000001165a2 : jp 0x1165e0 ; dec dword ptr [rax - 0x7f] ; ret
0x000000000012e7fd : jp 0x12e85d ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000131952 : jp 0x13195e ; ret
0x0000000000134722 : jp 0x13472e ; ret
0x000000000013473a : jp 0x134746 ; ret
0x0000000000134f72 : jp 0x134f7e ; ret
0x0000000000134f8a : jp 0x134f96 ; ret
0x0000000000134fba : jp 0x134fc6 ; ret
0x000000000014d2c6 : jp 0x14d2ba ; ret
0x000000000014d329 : jp 0x14d31d ; ret
0x000000000014d2bf : jp 0x14d349 ; jb 0x14d2ac ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d2c4 : jp 0x14d349 ; jp 0x14d2bc ; ret
0x000000000014d7b6 : jp 0x14d7aa ; ret
0x000000000014d819 : jp 0x14d80d ; ret
0x000000000014d7af : jp 0x14d839 ; jb 0x14d79c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d7b4 : jp 0x14d839 ; jp 0x14d7ac ; ret
0x000000000014db59 : jp 0x14db4d ; ret
0x000000000014dbb9 : jp 0x14dbad ; ret
0x000000000014db52 : jp 0x14dbdc ; jb 0x14db3f ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014db57 : jp 0x14dbdc ; jp 0x14db4f ; ret
0x0000000000196ef0 : jp 0x196f55 ; cld ; jmp qword ptr [rax]
0x0000000000198fa9 : jp 0x198f9c ; jmp rsp
0x00000000001a4325 : jp 0x1a432d ; add ch, dh ; mov bh, 0xe7 ; call rdx
0x00000000001a4365 : jp 0x1a436d ; add byte ptr [rax], bl ; in eax, dx ; call rbx
0x00000000001a4395 : jp 0x1a439d ; add al, cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a8181 : jp 0x1a8174 ; call qword ptr [rcx]
0x00000000001b1911 : jp 0x1b190a ; jmp rax
0x00000000001b5710 : jp 0x1b571e ; ret
0x0000000000002549 : jp 0x252d ; jmp qword ptr [rbx]
0x0000000000002548 : jp 0x252e ; jmp qword ptr [rbx]
0x000000000000390e : jp 0x3988 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000074419 : jp 0x7445e ; jmp 0x743e3
0x000000000008f365 : jp 0x8f35f ; ret 0x7401
0x00000000000cc3e4 : jp 0xcc41a ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000ff9a5 : jp 0xff9dc ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000114c43 : jrcxz 0x114c08 ; cmp r11d, 0xa ; je 0x114c54 ; ret
0x0000000000139e0c : jrcxz 0x139e55 ; add edi, 1 ; call r14
0x000000000013c368 : jrcxz 0x13c338 ; and al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013cb18 : jrcxz 0x13cae8 ; and al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015a4aa : jrcxz 0x15a4a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a4a9 : jrcxz 0x15a4a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cf7a : jrcxz 0x15cf75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cf79 : jrcxz 0x15cf76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa9a : jrcxz 0x15fa95 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa99 : jrcxz 0x15fa96 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001821c5 : jrcxz 0x18221f ; ret
0x00000000001862ad : jrcxz 0x18629e ; call rsp
0x0000000000187301 : jrcxz 0x1872f6 ; call rax
0x0000000000187309 : jrcxz 0x1872fe ; call qword ptr [rax]
0x0000000000187305 : jrcxz 0x1872fe ; push rax ; jrcxz 0x187302 ; call qword ptr [rax]
0x0000000000196425 : jrcxz 0x196428 ; inc eax ; in al, -5 ; call qword ptr [rax]
0x000000000019b565 : jrcxz 0x19b56e ; add byte ptr [rcx + rdx*4 - 8], al ; call rsp
0x00000000001af3e1 : jrcxz 0x1af3d9 ; jmp qword ptr [rcx]
0x00000000000974eb : jrcxz 0x9754b ; pop rbp ; ret
0x00000000000efefc : jrcxz 0xeff4d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f1a3f : jrcxz 0xf19d1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000104783 : js 0x104784 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000104822 : js 0x104823 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000104821 : js 0x104824 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000109fa0 : js 0x109f2c ; loopne 0x109fb3 ; movzx eax, ax ; ret
0x000000000010a0e0 : js 0x10a069 ; loopne 0x10a0e9 ; ret
0x000000000010a180 : js 0x10a10c ; loopne 0x10a18d ; movzx eax, ax ; ret
0x000000000010a490 : js 0x10a41c ; loopne 0x10a49f ; movzx eax, ax ; ret
0x000000000010a9b1 : js 0x10a93d ; loopne 0x10a9c4 ; movzx eax, ax ; ret
0x000000000010aad1 : js 0x10aa5a ; loopne 0x10aada ; ret
0x000000000010ab61 : js 0x10aaed ; loopne 0x10ab6e ; movzx eax, ax ; ret
0x000000000010ae31 : js 0x10adbd ; loopne 0x10ae40 ; movzx eax, ax ; ret
0x000000000011451b : js 0x11452d ; jne 0x114518 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000119124 : js 0x119139 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000001191a4 : js 0x1191b7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000133161 : js 0x1331a9 ; xor esi, esi ; mov rdi, r12 ; call 0x1f449
0x0000000000140493 : js 0x1404a8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a5d98 : js 0x1a5d75 ; in eax, dx ; call rdi
0x00000000001ae698 : js 0x1ae6ee ; stc ; call qword ptr [rax]
0x00000000001af4b8 : js 0x1af4a1 ; hlt ; jmp qword ptr [rcx]
0x00000000001aff88 : js 0x1affa6 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d38 : js 0x1b0d9f ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f58 : js 0x1b0fc1 ; cmc ; jmp qword ptr [rcx]
0x00000000001b1318 : js 0x1b1386 ; cmc ; jmp qword ptr [rcx]
0x0000000000026311 : js 0x2631b ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8545
0x000000000002e181 : js 0x2e10d ; loopne 0x2e194 ; movzx eax, ax ; ret
0x000000000002e1c1 : js 0x2e14d ; loopne 0x2e1ce ; movzx eax, ax ; ret
0x000000000002e261 : js 0x2e1ed ; loopne 0x2e270 ; movzx eax, ax ; ret
0x000000000002e341 : js 0x2e2ca ; loopne 0x2e34a ; ret
0x000000000002e3ba : js 0x2e343 ; loopne 0x2e3c3 ; ret
0x000000000002e3ca : js 0x2e356 ; loopne 0x2e3dd ; movzx eax, ax ; ret
0x000000000002e40a : js 0x2e396 ; loopne 0x2e417 ; movzx eax, ax ; ret
0x000000000002e4aa : js 0x2e436 ; loopne 0x2e4b9 ; movzx eax, ax ; ret
0x000000000002e533 : js 0x2e584 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e532 : js 0x2e585 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f69 : js 0x2f1f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007322a : js 0x73240 ; call 0x1f4c4
0x0000000000076f0d : js 0x76f1b ; ret
0x0000000000085ab8 : js 0x85ac3 ; ret
0x00000000000884d4 : js 0x8854b ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cc527 : js 0xcc533 ; ret
0x00000000000e3c01 : js 0xe3c14 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e42b7 : js 0xe42ca ; add al, 0x75 ; mov ah, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000f3298 : js 0xf322a ; and al, 8 ; call 0x1f4c7
0x00000000000f61dc : js 0xf622e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f6b19 : js 0xf6b6b ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000fd038 : js 0xfd069 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff2d2 : js 0xff2e5 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000a8d28 : js 0xffffffffed3a8f8e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a8d56 : js 0xffffffffed3a91bc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8da8 : js 0xffffffffed3a960e ; mov byte ptr [rdi + 9], ch ; ret
0x000000000002b575 : lahf ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000125d16 : lahf ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cbbdb84], cl ; ret
0x00000000001a6885 : lahf ; add byte ptr [rax], al ; and sil, bpl ; jmp qword ptr [rdx]
0x00000000001a686d : lahf ; add byte ptr [rax], al ; ror dl, 1 ; cld ; call qword ptr [rdx]
0x000000000019aa7d : lahf ; add dword ptr [rax], eax ; or al, 0xf7 ; call rsp
0x0000000000189561 : lahf ; cmc ; call qword ptr [rsi - 0x2c000a61]
0x0000000000189565 : lahf ; cmc ; call rbx
0x0000000000188d15 : lahf ; hlt ; jmp qword ptr [rdi]
0x0000000000188d49 : lahf ; hlt ; lcall ptr [rdi + rbx*4] ; hlt ; jmp qword ptr [rdi]
0x00000000001848a3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000fb870 : lahf ; mov edi, ebp ; call 0xf7b05
0x0000000000116285 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014af1d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000032c00 : lahf ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102f70 : lahf ; ret
0x0000000000074b4e : lahf ; ret 0x3841
0x0000000000102f76 : lahf ; ret 0x3845
0x00000000000d457a : lahf ; ret 0x82eb
0x00000000000523c5 : lahf ; ret 0x8341
0x000000000010305d : lahf ; ret 0x8545
0x00000000001820fd : lahf ; ret 0x871e
0x0000000000101b83 : lahf ; ret 0xe883
0x00000000000a9a49 : lahf ; ret 0xea81
0x00000000000521c3 : lahf ; ret 0xf641
0x000000000014b5ad : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001886df : lcall ptr [rax + 0x20fff440] ; hlt ; jmp qword ptr [rax]
0x0000000000102057 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x000000000018b733 : lcall ptr [rax + 0x63] ; cli ; push qword ptr [rax + 0x63] ; cli ; call qword ptr [rax]
0x000000000019b9fb : lcall ptr [rax + rcx + 0x6c440002] ; stc ; call rsp
0x000000000019bfb3 : lcall ptr [rax + rsi + 0x2ba40002] ; cli ; call rsp
0x0000000000186cf3 : lcall ptr [rax - 0x6700118f] ; jno 0x186cf1 ; jmp qword ptr [rax]
0x0000000000132109 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011d875 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000071f55 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x000000000001fc2e : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000b50a3 : lcall ptr [rbx + 0x41] ; pop rsi ; ret
0x00000000000c65e4 : lcall ptr [rbx + 0x48] ; lea eax, dword ptr [rax + rdx*8] ; ret
0x0000000000074a44 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000036ab7 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000039a22 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000071820 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000712ea : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000019952b : lcall ptr [rcx + 0x1a240001] ; call rsp
0x0000000000188d4b : lcall ptr [rdi + rbx*4] ; hlt ; jmp qword ptr [rdi]
0x0000000000187c7b : lcall ptr [rdi - 0x7d] ; jmp rsp
0x0000000000186153 : lcall ptr [rdi] ; push rdi ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000198813 : lcall ptr [rdx + rcx*8 + 0x9140000] ; out dx, al ; call rsp
0x000000000010ff4d : lcall ptr [rdx - 0x7ab70009] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000187877 : lcall ptr [rdx] ; jmp rsp
0x0000000000187d37 : lcall ptr [rdx] ; jo 0x187d32 ; call qword ptr [rsi]
0x0000000000187d36 : lcall ptr [rdx] ; jo 0x187d33 ; call qword ptr [rsi]
0x0000000000186373 : lcall ptr [rdx] ; salc ; in eax, dx ; call rsp
0x0000000000187873 : lcall ptr [rsi] ; and dh, dl ; lcall ptr [rdx] ; jmp rsp
0x00000000001862a3 : lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x00000000001862b7 : lcall ptr [rsp + rbp*8] ; in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x000000000015ab36 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a906 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000007419f : lea eax, dword ptr [r8 - 1] ; ret
0x00000000001245bc : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; pop rbp ; ret
0x00000000000b9ed3 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008eb04 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb14 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009f6a4 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008eae4 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c65e7 : lea eax, dword ptr [rax + rdx*8] ; ret
0x000000000006015b : lea eax, dword ptr [rax - 0x16000002] ; ret 0xffd3
0x00000000000741a0 : lea eax, dword ptr [rax - 1] ; ret
0x00000000001a5635 : lea eax, dword ptr [rax] ; add al, ch ; xchg ebp, ebp ; call qword ptr [rdx]
0x00000000001a566d : lea eax, dword ptr [rax] ; add al, dh ; xchg ebp, ebp ; call qword ptr [rdx]
0x00000000001a55bd : lea eax, dword ptr [rax] ; add byte ptr [rax - 0x79], dh ; in eax, dx ; call qword ptr [rsi]
0x0000000000124740 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000012e2db : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000a9870 : lea eax, dword ptr [rbx + 1] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d02b2 : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000d01a2 : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000009faf9 : lea eax, dword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000ab8a8 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000001245bd : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; pop rbp ; ret
0x00000000000a9ba2 : lea eax, dword ptr [rcx + rcx] ; pop rbx ; div esi ; mov eax, eax ; ret
0x000000000008d5bd : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000a94c4 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000000a65ec : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a6601 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a661f : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a663f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a6662 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a6681 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a66a1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a66c1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a66e4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a6709 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a6727 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a6747 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a6763 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a6783 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a67a3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a67c3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a7613 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a7879 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a653d : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a655d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a657f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a659f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a65bf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a65d9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000009eff4 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000009f008 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000009f013 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000009f027 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000009f037 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000009f047 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a64eb : lea eax, dword ptr [rdi + 6] ; ret
0x000000000009efe7 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a650a : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000123880 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a651f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008eb39 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb49 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea33 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000096757 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000149eba : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000124a60 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000008d4b9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000ab2fe : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ab461 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000ab481 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000ab471 : lea eax, dword ptr [rdi - 8] ; ret
0x00000000000a6473 : lea eax, dword ptr [rdi] ; ret
0x000000000016a91d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000016a93d : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000016a95f : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000016a97f : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000016a99f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000016a82f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000016a857 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000016a86d : lea eax, dword ptr [rdx + 2] ; ret
0x000000000016a885 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000016a89b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000016a8ad : lea eax, dword ptr [rdx + 5] ; ret
0x000000000016a8cb : lea eax, dword ptr [rdx + 6] ; ret
0x000000000016a7d7 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000016a8dd : lea eax, dword ptr [rdx + 8] ; ret
0x000000000016a8fd : lea eax, dword ptr [rdx + 9] ; ret
0x000000000007418e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a9b1c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002dec5 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000016a845 : lea eax, dword ptr [rdx] ; ret
0x000000000002d3a9 : lea eax, dword ptr [rip + 0x15eddf] ; ret
0x000000000008bae5 : lea eax, dword ptr [rip + 0x162a5] ; ret
0x0000000000089855 : lea eax, dword ptr [rip + 0x16915] ; ret
0x0000000000020b41 : lea eax, dword ptr [rip + 0x16b15c] ; ret
0x0000000000020b51 : lea eax, dword ptr [rip + 0x16d2b5] ; ret
0x000000000008eb8b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000012b9d9 : lea eax, dword ptr [rip + 0x29d8e1] ; pop rbx ; ret
0x000000000012b9a1 : lea eax, dword ptr [rip + 0x29d919] ; pop rbx ; ret
0x000000000012b8e2 : lea eax, dword ptr [rip + 0x29d9d8] ; pop rbx ; ret
0x0000000000101fcb : lea eax, dword ptr [rip + 0x2c558f] ; pop rbp ; pop r12 ; ret
0x00000000000fe41e : lea eax, dword ptr [rip + 0x2c8e54] ; ret
0x00000000000fe256 : lea eax, dword ptr [rip + 0x2c901c] ; ret
0x000000000006c0e4 : lea eax, dword ptr [rip + 0x35a806] ; pop rbx ; pop rbp ; ret
0x0000000000115d98 : lea eax, dword ptr [rip + 0x37942] ; ret
0x0000000000115e68 : lea eax, dword ptr [rip + 0x37c12] ; ret
0x00000000000210cb : lea eax, dword ptr [rip + 0x3a872f] ; ret
0x0000000000115e92 : lea eax, dword ptr [rip + 0x5c318] ; ret
0x000000000008f9a1 : lea eax, dword ptr [rip + 0x79] ; ret
0x00000000000943b6 : lea eax, dword ptr [rip + 0xbb94] ; ret
0x00000000000943ca : lea eax, dword ptr [rip + 0xbc420] ; ret
0x000000000008da62 : lea eax, dword ptr [rip + 0xbc648] ; ret
0x000000000008d6e2 : lea eax, dword ptr [rip + 0xbc898] ; ret
0x000000000008f348 : lea eax, dword ptr [rip + 0xbe742] ; ret
0x000000000008b242 : lea eax, dword ptr [rip + 0xbebf8] ; ret
0x00000000000aab83 : lea eax, dword ptr [rip + 0xc2a77] ; ret
0x00000000000ab73f : lea eax, dword ptr [rip + 0xc3b7b] ; ret
0x00000000000ab747 : lea eax, dword ptr [rip + 0xc6433] ; ret
0x000000000008d3c5 : lea eax, dword ptr [rip + 0xd9255] ; ret
0x000000000008f835 : lea eax, dword ptr [rip + 0xd9965] ; ret
0x000000000008b135 : lea eax, dword ptr [rip + 0xd9d35] ; ret
0x000000000008f955 : lea eax, dword ptr [rip + 0xdb055] ; ret
0x000000000008eb9f : lea eax, dword ptr [rip + 0xdf0db] ; ret
0x000000000008eba7 : lea eax, dword ptr [rip + 0xe1863] ; ret
0x000000000008f1b2 : lea eax, dword ptr [rip + 0xe3008] ; ret
0x0000000000089a42 : lea eax, dword ptr [rip + 0xe66a8] ; ret
0x00000000000ab72b : lea eax, dword ptr [rip + 0xe74f] ; ret
0x00000000000aab7b : lea eax, dword ptr [rip + 0xf38f] ; ret
0x0000000000089ca5 : lea eax, dword ptr [rip + 5] ; ret
0x000000000008fa04 : lea eax, dword ptr [rip + 6] ; ret
0x000000000008bb31 : lea eax, dword ptr [rip + 9] ; ret
0x00000000000958eb : lea eax, dword ptr [rip - 0x511] ; ret
0x000000000012489e : lea eax, dword ptr [rsi + 8] ; ret
0x00000000001a78d5 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb7ca : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000011cbc4 : lea ebp, dword ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011fd0d : lea ebp, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000460d1 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000001829b1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000aba83 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000abbae : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000abfde : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000001bf828 : lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000150870 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000000a4d2e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000055755 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r15 ; call qword ptr [r11 + rax*8]
0x000000000010a6d8 : lea ecx, dword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000168126 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168679 ; ret
0x0000000000168424 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168679 ; ret
0x0000000000168444 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168679 ; ret
0x0000000000168464 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168679 ; ret
0x0000000000168486 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168679 ; ret
0x00000000001684a6 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168679 ; ret
0x00000000001684c6 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168679 ; ret
0x000000000016831c : lea ecx, dword ptr [rdx + 1] ; jne 0x168679 ; ret
0x000000000016833e : lea ecx, dword ptr [rdx + 2] ; jne 0x168679 ; ret
0x0000000000168364 : lea ecx, dword ptr [rdx + 3] ; jne 0x168679 ; ret
0x000000000016837c : lea ecx, dword ptr [rdx + 4] ; jne 0x168679 ; ret
0x0000000000073571 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000071996 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000001683a2 : lea ecx, dword ptr [rdx + 5] ; jne 0x168679 ; ret
0x00000000001683c4 : lea ecx, dword ptr [rdx + 6] ; jne 0x168679 ; ret
0x00000000001683e2 : lea ecx, dword ptr [rdx + 7] ; jne 0x168679 ; ret
0x00000000001680be : lea ecx, dword ptr [rdx + 8] ; jne 0x168679 ; ret
0x0000000000168404 : lea ecx, dword ptr [rdx + 9] ; jne 0x168679 ; ret
0x00000000000473a0 : lea ecx, dword ptr [rdx] ; jmp 0x473f6
0x0000000000048f90 : lea ecx, dword ptr [rdx] ; jmp 0x48fe6
0x00000000000bec93 : lea ecx, dword ptr [rip + 0xc8f5b] ; add rax, rcx ; jmp rax
0x0000000000136599 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000012cad8 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001363aa : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9e9 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000abf39 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000abba9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000aba7e : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000137712 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c82c : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf7c : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000b9cb2 : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ac42a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000001374d3 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ac158 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x000000000013246e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001350b2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000134692 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x00000000001318b5 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000038e6d : lea edi, dword ptr [rbx + rsi] ; call rax
0x000000000008f3d6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8f3c8 ; mov rax, rdi ; ret
0x0000000000094466 : lea edi, dword ptr [rdi + 0x10] ; jne 0x94456 ; ret
0x00000000000a589d : lea edi, dword ptr [rdi + 0x10] ; jne 0xa5f79 ; ret
0x00000000000a6f81 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa7789 ; ret
0x00000000000a58c0 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa5f79 ; ret
0x00000000000a6fa4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa7789 ; ret
0x00000000000a58e5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa5f79 ; ret
0x00000000000a6fc9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa7789 ; ret
0x00000000000a5903 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa5f79 ; ret
0x00000000000a6ff7 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa7789 ; ret
0x00000000000a5923 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa5f79 ; ret
0x00000000000a7027 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa7789 ; ret
0x00000000000a5946 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa5f79 ; ret
0x00000000000a705a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa7789 ; ret
0x00000000000a5965 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa5f79 ; ret
0x00000000000a7089 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa7789 ; ret
0x00000000000a5985 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa5f79 ; ret
0x00000000000a70b9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa7789 ; ret
0x00000000000a59a5 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa5f79 ; ret
0x00000000000a70e9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa7789 ; ret
0x00000000000a59c8 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa5f79 ; ret
0x00000000000a711c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa7789 ; ret
0x00000000000a59fd : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa5f79 ; ret
0x00000000000a7151 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa7789 ; ret
0x00000000000a5a2b : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa5f79 ; ret
0x00000000000a717f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa7789 ; ret
0x00000000000a5a5b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa5f79 ; ret
0x00000000000a71af : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa7789 ; ret
0x00000000000a5a87 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa5f79 ; ret
0x00000000000a71db : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa7789 ; ret
0x00000000000a5ab7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa5f79 ; ret
0x00000000000a720b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa7789 ; ret
0x00000000000a5ae7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa5f79 ; ret
0x00000000000a723b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa7789 ; ret
0x00000000000a5b17 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa5f79 ; ret
0x00000000000a726b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa7789 ; ret
0x00000000000a57e3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa5f79 ; ret
0x00000000000a6e87 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa7789 ; ret
0x00000000000a5801 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa5f79 ; ret
0x00000000000a6eb5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa7789 ; ret
0x00000000000a5821 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa5f79 ; ret
0x00000000000a6ed5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa7789 ; ret
0x00000000000a5843 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa5f79 ; ret
0x00000000000a6ef7 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa7789 ; ret
0x00000000000a5863 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa5f79 ; ret
0x00000000000a6f27 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa7789 ; ret
0x00000000000a5883 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa5f79 ; ret
0x00000000000a6f57 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa7789 ; ret
0x00000000000a56b7 : lea edi, dword ptr [rdi + 1] ; jne 0xa5f79 ; ret
0x00000000000a6d5a : lea edi, dword ptr [rdi + 1] ; jne 0xa7789 ; ret
0x00000000000a56db : lea edi, dword ptr [rdi + 2] ; jne 0xa5f79 ; ret
0x00000000000a6d7f : lea edi, dword ptr [rdi + 2] ; jne 0xa7789 ; ret
0x00000000000a56fe : lea edi, dword ptr [rdi + 3] ; jne 0xa5f79 ; ret
0x00000000000a6da2 : lea edi, dword ptr [rdi + 3] ; jne 0xa7789 ; ret
0x00000000000a5719 : lea edi, dword ptr [rdi + 4] ; jne 0xa5f79 ; ret
0x00000000000a6dbd : lea edi, dword ptr [rdi + 4] ; jne 0xa7789 ; ret
0x00000000000a573c : lea edi, dword ptr [rdi + 5] ; jne 0xa5f79 ; ret
0x00000000000a6de0 : lea edi, dword ptr [rdi + 5] ; jne 0xa7789 ; ret
0x00000000000a5761 : lea edi, dword ptr [rdi + 6] ; jne 0xa5f79 ; ret
0x00000000000a6e05 : lea edi, dword ptr [rdi + 6] ; jne 0xa7789 ; ret
0x00000000000a577f : lea edi, dword ptr [rdi + 7] ; jne 0xa5f79 ; ret
0x00000000000a6e23 : lea edi, dword ptr [rdi + 7] ; jne 0xa7789 ; ret
0x00000000000a579b : lea edi, dword ptr [rdi + 8] ; jne 0xa5f79 ; ret
0x00000000000a6e3f : lea edi, dword ptr [rdi + 8] ; jne 0xa7789 ; ret
0x00000000000a57be : lea edi, dword ptr [rdi + 9] ; jne 0xa5f79 ; ret
0x00000000000a6e62 : lea edi, dword ptr [rdi + 9] ; jne 0xa7789 ; ret
0x0000000000120c81 : lea edi, dword ptr [rip + 0x2a7f95] ; call rax
0x0000000000120412 : lea edi, dword ptr [rip + 0x2a87a8] ; call rax
0x000000000011563e : lea edi, dword ptr [rip - 0x174] ; call rax
0x00000000000366f9 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x38d98a], edx ; ret
0x000000000006b7f1 : lea edx, dword ptr [rax + 8] ; mov qword ptr [rbp - 0x78], rdx ; jmp 0x67afd
0x0000000000150944 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000009f391 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000d58ce : lea edx, dword ptr [rcx*4 - 4] ; add rdx, r8 ; jmp 0xd58f2
0x00000000000c65e2 : lea edx, dword ptr [rdi + rdi*8] ; pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000010a917 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000007431d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000089d36 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000150d38 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000012dde1 : lea edx, dword ptr [rip + 0x295d99] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000136a21 : lea edx, dword ptr [rip + 0x3619] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000734b1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000133686 : lea esi, dword ptr [rax + 0x38] ; mov rdi, rcx ; jmp r8
0x00000000001057c7 : lea esi, dword ptr [rbp - 0x40] ; mov qword ptr [rbp - 0x58], rax ; mov rdx, rax ; jmp 0x105805
0x0000000000105870 : lea esi, dword ptr [rbp - 0x40] ; mov qword ptr [rbp - 0x58], rax ; mov rdx, rax ; jmp 0x1058af
0x0000000000072640 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eba : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000004411f : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000007062a : lea esi, dword ptr [rip + 0x20] ; call rax
0x000000000007cc4a : lea esi, dword ptr [rip - 0x1640] ; call rax
0x000000000007d04a : lea esi, dword ptr [rip - 0x1a40] ; call rax
0x000000000007d4ea : lea esi, dword ptr [rip - 0x1ee0] ; call rax
0x00000000000708e2 : lea esi, dword ptr [rip - 0x298] ; call rax
0x000000000007b91a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007bb8a : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013a91d : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6d5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013acca : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013a25d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000395f2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006e541 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000011027b : lea esp, dword ptr [rbx + rcx] ; jmp 0x110290
0x00000000000c5fc7 : lea esp, dword ptr [rsp + rbp*4] ; call 0xab779
0x0000000000089d35 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000011027a : lea r12, qword ptr [rbx + r9] ; jmp 0x110291
0x0000000000038e6c : lea r15, qword ptr [rbx + r14] ; call rax
0x000000000015086f : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000004739f : lea r9, qword ptr [rdx] ; jmp 0x473f7
0x0000000000048f8f : lea r9, qword ptr [rdx] ; jmp 0x48fe7
0x0000000000136598 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x000000000012cad7 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000001363a9 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c9e8 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000abf38 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000abba8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000aba7d : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000137711 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c82b : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf7b : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000b9cb1 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ac429 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000001374d2 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ac157 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000cc4e1 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008eb03 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb13 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f6a3 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008eae3 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c65e6 : lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000012e2da : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000d02b1 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000d01a1 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000009faf8 : lea rax, qword ptr [rbx - 1] ; pop rbx ; ret
0x00000000000ab8a7 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008d5bc : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000a94c3 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a65eb : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a6600 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a661e : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a663e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a6661 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a6680 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a66a0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a66c0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a66e3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a6708 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6726 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6746 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a6762 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a6782 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a67a2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a67c2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a7612 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a7878 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a653c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a655c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a657e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a659e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a65be : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a65d8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009eff3 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009f007 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009f012 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009f026 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009f036 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009f046 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a64ea : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009efe6 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a6509 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a651e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008eb38 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb48 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea32 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000096756 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000149eb9 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000124a5f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000008d4b8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ab2fd : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab460 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ab480 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ab470 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a6472 : lea rax, qword ptr [rdi] ; ret
0x000000000016a91c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a93c : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016a95e : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016a97e : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a99e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016a82e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000016a856 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000016a86c : lea rax, qword ptr [rdx + 2] ; ret
0x000000000016a884 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a89a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000016a8ac : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016a8ca : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016a7d6 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016a8dc : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016a8fc : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002dec4 : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000016a844 : lea rax, qword ptr [rdx] ; ret
0x000000000002d3a8 : lea rax, qword ptr [rip + 0x15eddf] ; ret
0x000000000008bae4 : lea rax, qword ptr [rip + 0x162a5] ; ret
0x0000000000089854 : lea rax, qword ptr [rip + 0x16915] ; ret
0x0000000000020b40 : lea rax, qword ptr [rip + 0x16b15c] ; ret
0x0000000000020b50 : lea rax, qword ptr [rip + 0x16d2b5] ; ret
0x000000000008eb8a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000012b9d8 : lea rax, qword ptr [rip + 0x29d8e1] ; pop rbx ; ret
0x000000000012b9a0 : lea rax, qword ptr [rip + 0x29d919] ; pop rbx ; ret
0x000000000012b8e1 : lea rax, qword ptr [rip + 0x29d9d8] ; pop rbx ; ret
0x00000000000fe41d : lea rax, qword ptr [rip + 0x2c8e54] ; ret
0x00000000000fe255 : lea rax, qword ptr [rip + 0x2c901c] ; ret
0x000000000006c0e3 : lea rax, qword ptr [rip + 0x35a806] ; pop rbx ; pop rbp ; ret
0x0000000000115d97 : lea rax, qword ptr [rip + 0x37942] ; ret
0x0000000000115e67 : lea rax, qword ptr [rip + 0x37c12] ; ret
0x00000000000210ca : lea rax, qword ptr [rip + 0x3a872f] ; ret
0x0000000000115e91 : lea rax, qword ptr [rip + 0x5c318] ; ret
0x000000000008f9a0 : lea rax, qword ptr [rip + 0x79] ; ret
0x00000000000943b5 : lea rax, qword ptr [rip + 0xbb94] ; ret
0x00000000000943c9 : lea rax, qword ptr [rip + 0xbc420] ; ret
0x000000000008da61 : lea rax, qword ptr [rip + 0xbc648] ; ret
0x000000000008d6e1 : lea rax, qword ptr [rip + 0xbc898] ; ret
0x000000000008f347 : lea rax, qword ptr [rip + 0xbe742] ; ret
0x000000000008b241 : lea rax, qword ptr [rip + 0xbebf8] ; ret
0x00000000000aab82 : lea rax, qword ptr [rip + 0xc2a77] ; ret
0x00000000000ab73e : lea rax, qword ptr [rip + 0xc3b7b] ; ret
0x00000000000ab746 : lea rax, qword ptr [rip + 0xc6433] ; ret
0x000000000008d3c4 : lea rax, qword ptr [rip + 0xd9255] ; ret
0x000000000008f834 : lea rax, qword ptr [rip + 0xd9965] ; ret
0x000000000008b134 : lea rax, qword ptr [rip + 0xd9d35] ; ret
0x000000000008f954 : lea rax, qword ptr [rip + 0xdb055] ; ret
0x000000000008eb9e : lea rax, qword ptr [rip + 0xdf0db] ; ret
0x000000000008eba6 : lea rax, qword ptr [rip + 0xe1863] ; ret
0x000000000008f1b1 : lea rax, qword ptr [rip + 0xe3008] ; ret
0x0000000000089a41 : lea rax, qword ptr [rip + 0xe66a8] ; ret
0x00000000000ab72a : lea rax, qword ptr [rip + 0xe74f] ; ret
0x00000000000aab7a : lea rax, qword ptr [rip + 0xf38f] ; ret
0x0000000000089ca4 : lea rax, qword ptr [rip + 5] ; ret
0x000000000008fa03 : lea rax, qword ptr [rip + 6] ; ret
0x000000000008bb30 : lea rax, qword ptr [rip + 9] ; ret
0x00000000000958ea : lea rax, qword ptr [rip - 0x511] ; ret
0x00000000000ab439 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x00000000000460d0 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a4d2d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000aba82 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000abbad : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000abfdd : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000010a6d7 : lea rcx, qword ptr [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000071995 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000013246d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001350b1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000134691 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x00000000001318b4 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008f3d5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8f3c9 ; mov rax, rdi ; ret
0x0000000000094465 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x94457 ; ret
0x0000000000120c80 : lea rdi, qword ptr [rip + 0x2a7f95] ; call rax
0x0000000000120411 : lea rdi, qword ptr [rip + 0x2a87a8] ; call rax
0x000000000011563d : lea rdi, qword ptr [rip - 0x174] ; call rax
0x0000000000150943 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000c65e1 : lea rdx, qword ptr [rdi + rdi*8] ; pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x000000000010a916 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000150d37 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x0000000000133685 : lea rsi, qword ptr [rax + 0x38] ; mov rdi, rcx ; jmp r8
0x000000000004411e : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x0000000000070629 : lea rsi, qword ptr [rip + 0x20] ; call rax
0x000000000007cc49 : lea rsi, qword ptr [rip - 0x1640] ; call rax
0x000000000007d049 : lea rsi, qword ptr [rip - 0x1a40] ; call rax
0x000000000007d4e9 : lea rsi, qword ptr [rip - 0x1ee0] ; call rax
0x00000000000708e1 : lea rsi, qword ptr [rip - 0x298] ; call rax
0x000000000007b919 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007bb89 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013a91c : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6d4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013acc9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013a25c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000395f1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000001987ed : leave ; add byte ptr [rax], al ; add al, 6 ; out dx, al ; jmp rsp
0x000000000019b1ed : leave ; add dword ptr [rax], eax ; adc al, 0xb ; clc ; jmp rsp
0x000000000002a125 : leave ; call r14
0x00000000001883e9 : leave ; call rbx
0x000000000019b651 : leave ; clc ; call rsp
0x0000000000002bd0 : leave ; clc ; ret
0x000000000008d786 : leave ; cmove rax, rdx ; ret
0x0000000000149ef1 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000102b9b : leave ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102ba9 ; call rbx
0x0000000000102afa : leave ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102b8d : leave ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102b9b ; call rbx
0x000000000002bbfd : leave ; je 0x2bc05 ; call rcx
0x000000000006c879 : leave ; je 0x6c884 ; ret
0x00000000000973ac : leave ; je 0x973f5 ; xor eax, eax ; ret
0x00000000001996e1 : leave ; jmp rsp
0x0000000000126717 : leave ; jne 0x12666b ; ret
0x000000000009733a : leave ; jne 0x97311 ; mov rax, rdi ; ret
0x000000000009f0b9 : leave ; jne 0x9f0ac ; ret
0x000000000009f1f8 : leave ; jne 0x9f1ed ; xor eax, eax ; ret
0x00000000000a92a0 : leave ; jne 0xa9293 ; ret
0x00000000000a9350 : leave ; jne 0xa9343 ; ret
0x00000000000a9610 : leave ; jne 0xa9607 ; sub rax, 1 ; ret
0x00000000000ab4cc : leave ; jne 0xab4c4 ; ret
0x00000000000ac97a : leave ; jne 0xac936 ; mov rax, rdx ; ret
0x00000000000cc29b : leave ; jnp 0xcc2d3 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000149eb8 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a4811 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000348e1 : leave ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9cf4 : leave ; mov dword ptr [rdx], ecx ; jne 0xa9cee ; ret
0x000000000009efbf : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009ef1f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000002eb81 : leave ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000418d3 : leave ; ret
0x000000000010b73b : leave ; ret 0x2b
0x00000000001960e1 : leave ; sti ; call qword ptr [rax]
0x00000000001961a5 : leave ; sti ; call rax
0x000000000013d533 : leave ; sub byte ptr [rax], al ; test eax, eax ; je 0x13d549 ; xor eax, eax ; ret
0x00000000000abf35 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000bbc54 : les r9d, ptr [r8 + 1] ; ret
0x0000000000196daf : ljmp ptr [rax + 0x6852fffc] ; cld ; call rdx
0x000000000019b8d3 : ljmp ptr [rax + rax + 0x44d40002] ; stc ; jmp rsp
0x0000000000188837 : ljmp ptr [rax*2 + 0x4522fff4] ; hlt ; call qword ptr [rsi]
0x000000000019c313 : ljmp ptr [rbp + rax*2 - 0x6f3bfffe] ; cli ; jmp rsp
0x0000000000198893 : ljmp ptr [rbp + rcx*8 + 0x14040000] ; out dx, al ; call rsp
0x0000000000195f27 : ljmp ptr [rbx + 0x4bfffd92] ; xchg eax, ebx ; std ; call rax
0x000000000018615f : ljmp ptr [rbx + 0x57] ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x000000000019b563 : ljmp ptr [rbx + 1] ; add byte ptr [rcx + rdx*4 - 8], al ; call rsp
0x0000000000199a63 : ljmp ptr [rbx + rax*2 + 1] ; add ah, dh ; pop rsp ; call rsp
0x000000000019c513 : ljmp ptr [rcx + rbp*2 + 1] ; add ah, dh ; ret 0xfffa
0x0000000000189ad5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00000000001860df : ljmp ptr [rdi + 0x62ffed52] ; ret
0x00000000001969ef : ljmp ptr [rdx + 0x50fffc3a] ; cld ; call rax
0x000000000018889b : ljmp ptr [rdx] ; hlt ; jmp qword ptr [rax]
0x0000000000185cab : ljmp ptr [rdx] ; out -1, eax ; call rdx
0x00000000001894bf : ljmp ptr [rdx] ; xor ebp, 0xf5812aff ; jmp qword ptr [rax]
0x000000000018950b : ljmp ptr [rdx] ; xor ebp, 0xf5812aff ; jmp rsi
0x00000000000e7204 : ljmp ptr [rip + 0x36740000] ; xor eax, eax ; ret
0x000000000018869b : ljmp ptr [rip + 0x40fff3cd] ; hlt ; jmp rax
0x000000000019bf43 : ljmp ptr [rsp + rbp + 0x18840002] ; cli ; call rsp
0x0000000000186dbb : ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000186dcf : ljmp ptr [rsp + rsi*2] ; out dx, al ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x000000000016e05e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ab8f5 : lock add byte ptr [rax], al ; sbb byte ptr [rcx], bl ; call qword ptr [rax]
0x000000000007ffec : lock add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000fc32f : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000013c375 : lock dec dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rax + 0x29], cl ; ret
0x000000000019da54 : lodsb al, byte ptr [rsi] ; adc dword ptr [rax], eax ; add byte ptr [rax + 0x53], ch ; std ; jmp qword ptr [rdi]
0x0000000000144fd0 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001983dd : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add al, 0x7d ; in eax, dx ; jmp rsp
0x00000000001715f0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a74dd : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; nop ; or edx, edi ; call qword ptr [rax]
0x00000000001a750d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; xor byte ptr [rbx - 6], al ; call qword ptr [rax]
0x000000000019b8d4 : lodsb al, byte ptr [rsi] ; add byte ptr [rdx], al ; add ah, dl ; stc ; jmp rsp
0x00000000001b3054 : lodsb al, byte ptr [rsi] ; add dword ptr [eax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b0f54 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], r8d ; js 0x1b0fc5 ; cmc ; jmp qword ptr [rcx]
0x00000000001aff54 : lodsb al, byte ptr [rsi] ; add dword ptr ss:[rax], eax ; sbb rbp, rsi ; jmp qword ptr [rcx]
0x00000000001b1754 : lodsb al, byte ptr [rsi] ; add qword ptr [rax], r8 ; call 0x221b0cd4
0x0000000000043e19 : lodsb al, byte ptr [rsi] ; and al, 0x60 ; sbb eax, dword ptr [rax] ; add cl, ch ; ret 0xfff8
0x0000000000143393 : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000c5fc9 : lodsb al, byte ptr [rsi] ; call 0xab777
0x000000000019b614 : lodsb al, byte ptr [rsi] ; call 0xffffffffc36db620
0x00000000001b0654 : lodsb al, byte ptr [rsi] ; cmp eax, 0x42880001 ; cmc ; jmp rax
0x00000000001a4254 : lodsb al, byte ptr [rsi] ; jns 0x1a425e ; add al, ch ; in eax, dx ; jmp qword ptr [rdi]
0x000000000007bfa4 : lodsb al, byte ptr [rsi] ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001455f4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018503d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a68a6 : lodsb al, byte ptr [rsi] ; ret
0x00000000001ae554 : lodsb al, byte ptr [rsi] ; sbb al, 1 ; add byte ptr [rax - 0x69], bl ; hlt ; jmp qword ptr [rcx]
0x000000000019e254 : lodsb al, byte ptr [rsi] ; sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; add ch, cl ; call qword ptr [rbx]
0x000000000019c751 : lodsb al, byte ptr [rsi] ; std ; call rsp
0x00000000001961f9 : lodsb al, byte ptr [rsi] ; sti ; call rax
0x0000000000079230 : lodsb al, byte ptr [rsi] ; xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001a750c : lodsb al, byte ptr fs:[rsi] ; add byte ptr [rax], al ; xor byte ptr [rbx - 6], al ; call qword ptr [rax]
0x00000000000454dc : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000045553 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a760d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; nop ; shr esi, cl ; jmp qword ptr [rsi]
0x0000000000025373 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000018809d : lodsd eax, dword ptr [rsi] ; call rax
0x0000000000188221 : lodsd eax, dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000000ab8f9 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x0000000000149160 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000047b02 : lodsd eax, dword ptr [rsi] ; ret
0x00000000000e319f : lodsd eax, dword ptr [rsi] ; ret 0xfff3
0x00000000001961fd : lodsd eax, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x00000000001a760c : lodsd eax, dword ptr fs:[rsi] ; add byte ptr [rax], al ; nop ; shr esi, cl ; jmp qword ptr [rsi]
0x000000000013044c : loop 0x1304d6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000136e46 : loop 0x136dd8 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015a41a : loop 0x15a415 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a419 : loop 0x15a416 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ceea : loop 0x15cee5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015cee9 : loop 0x15cee6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa0a : loop 0x15fa05 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015fa09 : loop 0x15fa06 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000181478 : loop 0x18149f ; jmp 0x18147e
0x000000000018147c : loop 0x1814a3 ; jmp 0x181482
0x0000000000181480 : loop 0x1814a7 ; jmp 0x181486
0x0000000000181484 : loop 0x1814ab ; jmp 0x18148a
0x0000000000181488 : loop 0x1814af ; jmp 0x18148e
0x000000000018148c : loop 0x1814b3 ; jmp 0x181492
0x0000000000181490 : loop 0x1814b7 ; jmp 0x181496
0x0000000000181494 : loop 0x1814bb ; jmp 0x18149a
0x0000000000181498 : loop 0x1814bf ; jmp 0x18149e
0x00000000001853da : loop 0x18542f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001888b8 : loop 0x188900 ; hlt ; call rsi
0x00000000001891c8 : loop 0x189229 ; cmc ; call qword ptr [rax]
0x00000000001aab45 : loop 0x1aab4d ; add byte ptr [rax], bh ; fdivr st(1), st(0) ; call rdi
0x00000000001af331 : loop 0x1af329 ; jmp qword ptr [rbx]
0x00000000001af391 : loop 0x1af389 ; jmp qword ptr [rcx]
0x00000000000025c9 : loop 0x25a3 ; ret 0x23cb
0x000000000003a479 : loop 0x3a4a3 ; mov rax, rcx ; or rax, rdx ; ret
0x000000000006d142 : loop 0x6d0d4 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000076dd4 : loop 0x76ddb ; mov eax, edx ; ret
0x0000000000076ed4 : loop 0x76edb ; mov eax, edx ; ret
0x0000000000087fd4 : loop 0x88026 ; mov edi, edi ; call rax
0x000000000009ff3d : loop 0x9ff75 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a598a : loop 0xa5995 ; add byte ptr [rax], al ; ret
0x00000000000a9b05 : loop 0xa9b1f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ac428 : loop 0xac47f ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000bc0e6 : loop 0xbc0ae ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000bc0f7 : loop 0xbc124 ; ret 0x428d
0x00000000000e418c : loop 0xe4198 ; xor esi, esi ; call 0x8f208
0x00000000000f3bf1 : loop 0xf3c55 ; sub eax, 0x840f0200 ; ret 1
0x000000000012b9db : loope 0x12b9ba ; sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000013187e : loope 0x131813 ; ret
0x000000000015a38a : loope 0x15a385 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015a389 : loope 0x15a386 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ce5a : loope 0x15ce55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ce59 : loope 0x15ce56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f97a : loope 0x15f975 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015f979 : loope 0x15f976 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016848b : loope 0x168492 ; add byte ptr [rax], al ; ret
0x000000000017031b : loope 0x170325 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001861c9 : loope 0x1861ba ; call qword ptr [rsi]
0x00000000001862ed : loope 0x1862de ; call rsp
0x000000000018a109 : loope 0x18a113 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000047997 : loope 0x479e9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000479c8 : loope 0x47a1b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000047a3d : loope 0x47a90 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000725bb : loope 0x725cf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72566
0x0000000000076cd1 : loope 0x76ca6 ; mov dword ptr [rdi], ecx ; ret
0x0000000000089463 : loope 0x89418 ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000009486b : loope 0x9487d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094adb : loope 0x94aed ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a9199 : loope 0xa9208 ; nop dword ptr [rax + rax] ; ret
0x00000000000a9b47 : loope 0xa9b08 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a9c5e : loope 0xa9c55 ; ret
0x00000000000aadfe : loope 0xaae13 ; je 0xaae24 ; ret
0x00000000000c736d : loope 0xc72fa ; ret 0xf631
0x00000000000e42e0 : loope 0xe42e5 ; add esi, esi ; ret
0x00000000000e59e4 : loope 0xe59e9 ; add esi, esi ; ret 0xf04
0x00000000000f9af2 : loope 0xf9afa ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000105c06 : loopne 0x105c6c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000109f83 : loopne 0x109f8c ; nop dword ptr [rax] ; ret
0x0000000000109fa2 : loopne 0x109fb1 ; movzx eax, ax ; ret
0x000000000010a023 : loopne 0x10a02c ; nop dword ptr [rax] ; ret
0x000000000010a0c3 : loopne 0x10a0cc ; nop dword ptr [rax] ; ret
0x000000000010a0e2 : loopne 0x10a0e7 ; ret
0x000000000010a163 : loopne 0x10a16c ; nop dword ptr [rax] ; ret
0x000000000010a182 : loopne 0x10a18b ; movzx eax, ax ; ret
0x000000000010a203 : loopne 0x10a20c ; nop dword ptr [rax] ; ret
0x000000000010a293 : loopne 0x10a29c ; nop dword ptr [rax] ; ret
0x000000000010a333 : loopne 0x10a33c ; nop dword ptr [rax] ; ret
0x000000000010a3d3 : loopne 0x10a3dc ; nop dword ptr [rax] ; ret
0x000000000010a473 : loopne 0x10a47c ; nop dword ptr [rax] ; ret
0x000000000010a492 : loopne 0x10a49d ; movzx eax, ax ; ret
0x000000000010a513 : loopne 0x10a51c ; nop dword ptr [rax] ; ret
0x000000000010a5ae : loopne 0x10a5b4 ; ret
0x000000000010a653 : loopne 0x10a65c ; nop dword ptr [rax] ; ret
0x000000000010a83a : loopne 0x10a844 ; nop dword ptr [rax] ; ret
0x000000000010a9b3 : loopne 0x10a9c2 ; movzx eax, ax ; ret
0x000000000010aad3 : loopne 0x10aad8 ; ret
0x000000000010ab63 : loopne 0x10ab6c ; movzx eax, ax ; ret
0x000000000010ae33 : loopne 0x10ae3e ; movzx eax, ax ; ret
0x000000000010af32 : loopne 0x10af3c ; nop dword ptr [rax] ; ret
0x000000000010b18a : loopne 0x10b194 ; nop dword ptr [rax] ; ret
0x000000000011457b : loopne 0x114580 ; ret
0x0000000000114ca8 : loopne 0x114cbd ; cmp eax, 4 ; je 0x114cb7 ; ret
0x0000000000114e81 : loopne 0x114e94 ; pop rbp ; pop r12 ; ret
0x000000000011ab58 : loopne 0x11ab44 ; ret 0xf0
0x0000000000123884 : loopne 0x123883 ; add eax, 0x10 ; ret
0x0000000000124028 : loopne 0x12408e ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001240d1 : loopne 0x124137 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000124a2b : loopne 0x124a38 ; cdqe ; shr rax, 4 ; ret
0x0000000000137a17 : loopne 0x137a20 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013bdd1 : loopne 0x13be41 ; nop dword ptr [rax + rax] ; ret
0x0000000000142e71 : loopne 0x142e77 ; add byte ptr [rax], al ; jmp rax
0x0000000000142ea2 : loopne 0x142ea8 ; add byte ptr [rax], al ; jmp rax
0x000000000014d2c2 : loopne 0x14d28f ; jp 0x14d34b ; jp 0x14d2be ; ret
0x000000000014d7b2 : loopne 0x14d77f ; jp 0x14d83b ; jp 0x14d7ae ; ret
0x000000000014db55 : loopne 0x14db22 ; jp 0x14dbde ; jp 0x14db51 ; ret
0x0000000000150d91 : loopne 0x150da8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150d90 : loopne 0x150da9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150ee1 : loopne 0x150ef8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150ee0 : loopne 0x150ef9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151031 : loopne 0x151048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151030 : loopne 0x151049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151181 : loopne 0x151198 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151180 : loopne 0x151199 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001512d1 : loopne 0x1512e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001512d0 : loopne 0x1512e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151421 : loopne 0x151438 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151420 : loopne 0x151439 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151571 : loopne 0x151588 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151570 : loopne 0x151589 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001516bf : loopne 0x1516d6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001516be : loopne 0x1516d7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151811 : loopne 0x151828 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151810 : loopne 0x151829 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151961 : loopne 0x151978 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151960 : loopne 0x151979 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ab1 : loopne 0x151ac8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ab0 : loopne 0x151ac9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151c01 : loopne 0x151c18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151c00 : loopne 0x151c19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d51 : loopne 0x151d68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151d50 : loopne 0x151d69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ea1 : loopne 0x151eb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ea0 : loopne 0x151eb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ff1 : loopne 0x152008 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ff0 : loopne 0x152009 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153761 : loopne 0x153778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153760 : loopne 0x153779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001538b1 : loopne 0x1538c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001538b0 : loopne 0x1538c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153a01 : loopne 0x153a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153a00 : loopne 0x153a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153b51 : loopne 0x153b68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153b50 : loopne 0x153b69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ca1 : loopne 0x153cb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ca0 : loopne 0x153cb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153df1 : loopne 0x153e08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153df0 : loopne 0x153e09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f41 : loopne 0x153f58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153f40 : loopne 0x153f59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015408f : loopne 0x1540a6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000015408e : loopne 0x1540a7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541e1 : loopne 0x1541f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001541e0 : loopne 0x1541f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154331 : loopne 0x154348 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154330 : loopne 0x154349 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154481 : loopne 0x154498 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154480 : loopne 0x154499 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545d1 : loopne 0x1545e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001545d0 : loopne 0x1545e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154721 : loopne 0x154738 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154720 : loopne 0x154739 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154871 : loopne 0x154888 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154870 : loopne 0x154889 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001549c1 : loopne 0x1549d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001549c0 : loopne 0x1549d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156131 : loopne 0x156148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156130 : loopne 0x156149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156281 : loopne 0x156298 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156280 : loopne 0x156299 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001563d1 : loopne 0x1563e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001563d0 : loopne 0x1563e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156521 : loopne 0x156538 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156520 : loopne 0x156539 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156671 : loopne 0x156688 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156670 : loopne 0x156689 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001567c1 : loopne 0x1567d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001567c0 : loopne 0x1567d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156911 : loopne 0x156928 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156910 : loopne 0x156929 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a5f : loopne 0x156a76 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156a5e : loopne 0x156a77 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156bb1 : loopne 0x156bc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156bb0 : loopne 0x156bc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156d01 : loopne 0x156d18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156d00 : loopne 0x156d19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e51 : loopne 0x156e68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156e50 : loopne 0x156e69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156fa1 : loopne 0x156fb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156fa0 : loopne 0x156fb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570f1 : loopne 0x157108 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001570f0 : loopne 0x157109 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157241 : loopne 0x157258 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157240 : loopne 0x157259 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157391 : loopne 0x1573a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157390 : loopne 0x1573a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000172335 : loopne 0x172386 ; sub eax, edx ; vzeroupper ; ret
0x0000000000172334 : loopne 0x172387 ; sub eax, edx ; vzeroupper ; ret
0x00000000001829b4 : loopne 0x182994 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001872e4 : loopne 0x1872ca ; int1 ; inc dword ptr [rax] ; fdivrp st(1) ; jmp qword ptr [rax]
0x0000000000187364 : loopne 0x18734f ; int1 ; call qword ptr [rax]
0x0000000000187550 : loopne 0x187551 ; int1 ; call qword ptr [rax]
0x00000000001875a8 : loopne 0x1875af ; int1 ; inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x00000000001875c8 : loopne 0x1875d0 ; int1 ; inc dword ptr [rax] ; add dl, dh ; jmp qword ptr [rax]
0x00000000001886a4 : loopne 0x1886e8 ; hlt ; jmp rax
0x00000000001886a8 : loopne 0x1886f0 ; hlt ; jmp qword ptr [rax + 0x10fff43f]
0x0000000000188aec : loopne 0x188b36 ; hlt ; call rax
0x0000000000188b20 : loopne 0x188b6a ; hlt ; jmp rsi
0x0000000000195d10 : loopne 0x195d13 ; cli ; call rax
0x0000000000195e64 : loopne 0x195df3 ; std ; call rax
0x0000000000196364 : loopne 0x19635a ; sti ; jmp rax
0x0000000000196368 : loopne 0x196360 ; sti ; jmp rax
0x000000000019637c : loopne 0x19636e ; sti ; call rax
0x000000000019641d : loopne 0x19641c ; jmp qword ptr [rax]
0x00000000001964a4 : loopne 0x1964c3 ; cld ; jmp rax
0x00000000001964a8 : loopne 0x1964c9 ; cld ; jmp rax
0x0000000000196f2c : loopne 0x196f95 ; cld ; push qword ptr [rax + 0x60] ; cld ; call qword ptr [rax]
0x0000000000197230 : loopne 0x1971bf ; cld ; jmp qword ptr [rax + 0x20fffc8e]
0x0000000000198c05 : loopne 0x198c0d ; add byte ptr [rax + rbp*2 - 0x12], ah ; call rsp
0x00000000001ad490 : loopne 0x1ad46a ; jmp qword ptr [rcx]
0x00000000001ade70 : loopne 0x1addf8 ; hlt ; call qword ptr [rax]
0x00000000001ae250 : loopne 0x1ae1e4 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae510 : loopne 0x1ae4ab ; hlt ; jmp qword ptr [rcx]
0x00000000001aec30 : loopne 0x1aec01 ; hlt ; jmp rbx
0x00000000001af060 : loopne 0x1af03f ; hlt ; jmp qword ptr [rcx]
0x000000000002e12e : loopne 0x2e14a ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002e183 : loopne 0x2e192 ; movzx eax, ax ; ret
0x000000000002e1c3 : loopne 0x2e1cc ; movzx eax, ax ; ret
0x000000000002e263 : loopne 0x2e26e ; movzx eax, ax ; ret
0x000000000002e343 : loopne 0x2e348 ; ret
0x000000000002e3bc : loopne 0x2e3c1 ; ret
0x000000000002e3cc : loopne 0x2e3db ; movzx eax, ax ; ret
0x000000000002e40c : loopne 0x2e415 ; movzx eax, ax ; ret
0x000000000002e393 : loopne 0x2e416 ; ret
0x000000000002e4ac : loopne 0x2e4b7 ; movzx eax, ax ; ret
0x0000000000034ca5 : loopne 0x34cb1 ; ret
0x0000000000035ed4 : loopne 0x35f24 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000044a65 : loopne 0x44a8a ; or eax, edx ; ret
0x000000000004747d : loopne 0x47486 ; sub eax, 1 ; ret
0x000000000005ea3c : loopne 0x5ea29 ; ret 0xfffe
0x000000000005ea3b : loopne 0x5ea2a ; ret 0xfffe
0x000000000006d873 : loopne 0x6d8d5 ; pop rbp ; pop r12 ; ret
0x000000000006d8d7 : loopne 0x6d939 ; pop rbp ; pop r12 ; ret
0x000000000006df4f : loopne 0x6dfb1 ; pop rbp ; pop r12 ; ret
0x000000000006dfc7 : loopne 0x6e029 ; pop rbp ; pop r12 ; ret
0x000000000006f1cf : loopne 0x6f1d5 ; add byte ptr [rax], al ; jmp rax
0x000000000006f1fb : loopne 0x6f201 ; add byte ptr [rax], al ; call rax
0x000000000006f23d : loopne 0x6f243 ; add byte ptr [rax], al ; call rax
0x000000000006f27f : loopne 0x6f285 ; add byte ptr [rax], al ; jmp rax
0x000000000007347e : loopne 0x73417 ; mov eax, 0xffffffff ; ret
0x0000000000078fb6 : loopne 0x78fbb ; ret
0x0000000000078fc6 : loopne 0x78fcb ; ret
0x0000000000079fe9 : loopne 0x7a050 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007a097 : loopne 0x7a0fe ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007d195 : loopne 0x7d1f9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f2bf : loopne 0x8f2b6 ; ret
0x00000000000969f7 : loopne 0x96a4d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000969fa : loopne 0x96a5c ; pop rbp ; pop r12 ; ret
0x00000000000a5a8c : loopne 0xa5a96 ; add byte ptr [rax], al ; ret
0x00000000000a9b3d : loopne 0xa9b57 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000c77cc : loopne 0xc7802 ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000cbfa0 : loopne 0xcc006 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d5931 : loopne 0xd593a ; add eax, 8 ; ret
0x00000000000d5985 : loopne 0xd598b ; ret
0x00000000000d769d : loopne 0xd770e ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000131917 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001a7ce5 : mov ah, 0 ; add byte ptr [rax], cl ; clc ; out dx, al ; call rcx
0x00000000001984cd : mov ah, 0 ; add byte ptr [rcx - 0x13], al ; jmp rsp
0x00000000001823ca : mov ah, 0x13 ; ret
0x00000000001988f8 : mov ah, 0x1a ; out dx, al ; jmp rsp
0x0000000000032575 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019be0c : mov ah, 0x25 ; add al, byte ptr [rax] ; and al, 4 ; cli ; jmp rsp
0x00000000001af05c : mov ah, 0x27 ; add dword ptr [rax], eax ; loopne 0x1af043 ; hlt ; jmp qword ptr [rcx]
0x000000000019b378 : mov ah, 0x33 ; clc ; call rsp
0x00000000001967a0 : mov ah, 0x46 ; cld ; inc dword ptr [rsi + rax*2 - 4] ; call rsp
0x00000000001b105c : mov ah, 0x47 ; add dword ptr [rax], eax ; mov al, 0x65 ; cmc ; jmp qword ptr [rcx]
0x00000000001982f8 : mov ah, 0x51 ; in eax, dx ; call rsp
0x00000000001a265c : mov ah, 0x5d ; add byte ptr [rax], al ; rcr ch, 0xec ; jmp qword ptr [rbx]
0x00000000000b8c08 : mov ah, 0x68 ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x0000000000196c8c : mov ah, 0x6e ; cld ; inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x00000000000e42bb : mov ah, 0x8b ; pop rax ; or bh, dh ; ret
0x0000000000199dc8 : mov ah, 0x8c ; cmc ; call rsp
0x000000000019a68c : mov ah, 0x8f ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sal dh, 1 ; jmp rsp
0x000000000018bbd0 : mov ah, 0x93 ; cli ; dec esp ; xchg eax, ebx ; cli ; jmp rsp
0x0000000000197184 : mov ah, 0x95 ; cld ; inc dword ptr [rbp + rdx*4 - 4] ; call rsp
0x000000000019824c : mov ah, 0xa1 ; add byte ptr [rax], al ; in al, -0x28 ; jmp 0x19825a
0x0000000000182870 : mov ah, 0xa5 ; ret
0x000000000019bb98 : mov ah, 0xa8 ; stc ; jmp rsp
0x00000000001983dc : mov ah, 0xac ; add byte ptr [rax], al ; add al, 0x7d ; in eax, dx ; jmp rsp
0x00000000001ad45c : mov ah, 0xb ; add dword ptr [rax], eax ; mov al, 0xd5 ; jmp qword ptr [rcx]
0x0000000000198644 : mov ah, 0xbd ; add byte ptr [rax], al ; xor al, 0xcb ; in eax, dx ; call rsp
0x00000000001985f8 : mov ah, 0xbd ; in eax, dx ; jmp rsp
0x000000000019c4f8 : mov ah, 0xc2 ; cli ; jmp rsp
0x00000000001884ac : mov ah, 0xce ; jmp qword ptr [rbx - 0x33]
0x000000000019b0d0 : mov ah, 0xf2 ; idiv edi ; ret
0x0000000000188229 : mov ah, 0xf3 ; dec ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rcx]
0x00000000001b5a39 : mov ah, 0xf6 ; call rdi
0x00000000001b9201 : mov ah, 0xf7 ; call qword ptr [rbx]
0x00000000001b9171 : mov ah, 0xf7 ; jmp qword ptr [rax]
0x000000000019c461 : mov ah, 0xfa ; jmp rsp
0x0000000000196251 : mov ah, 0xfb ; jmp qword ptr [rax]
0x0000000000187239 : mov ah, 0xfd ; jmp rax
0x000000000019b924 : mov ah, 2 ; add al, byte ptr [rax] ; je 0x19b981 ; stc ; jmp rsp
0x000000000002492f : mov ah, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000001a7828 : mov ah, ah ; out dx, al ; jmp qword ptr [rsi]
0x0000000000197461 : mov ah, bh ; call qword ptr [rax]
0x0000000000197421 : mov ah, bh ; jmp qword ptr [rax]
0x00000000001821c4 : mov ah, bl ; push rsi ; ret
0x00000000000ec0b6 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000187608 : mov al, 0 ; inc eax ; add dl, dh ; call rax
0x000000000012e18c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e144 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000bbc8a : mov al, 0x30 ; add byte ptr [rax + 1], cl ; ret
0x0000000000196a60 : mov al, 0x3c ; cld ; jmp qword ptr [rax]
0x00000000001267cd : mov al, 0x41 ; mov byte ptr [rbx], 0 ; ret
0x0000000000134f29 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cc60e : mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000131909 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000013bdc8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000196804 : mov al, 0x49 ; cld ; inc dword ptr [rax + 0x49] ; cld ; call rax
0x000000000019cf80 : mov al, 0x5d ; std ; jmp qword ptr [rdx]
0x00000000001b1060 : mov al, 0x65 ; cmc ; jmp qword ptr [rcx]
0x0000000000196b18 : mov al, 0x6d ; cld ; inc dword ptr [rax + 0x6d] ; cld ; call rax
0x0000000000186500 : mov al, 0x6d ; out dx, al ; call rax
0x0000000000186d70 : mov al, 0x71 ; out dx, al ; call rax
0x000000000018719c : mov al, 0x75 ; cld ; call rax
0x00000000001b1910 : mov al, 0x7a ; cmc ; jmp rax
0x000000000018711c : mov al, 0x7d ; int1 ; inc eax ; jge 0x18711b ; call rax
0x00000000001871c4 : mov al, 0x81 ; cld ; jmp qword ptr [rax]
0x0000000000197420 : mov al, 0x88 ; cld ; jmp qword ptr [rax]
0x00000000001abd90 : mov al, 0x8a ; call rdi
0x0000000000197438 : mov al, 0x8d ; cld ; jmp qword ptr [rax]
0x0000000000195f54 : mov al, 0x8f ; std ; inc dword ptr [rax - 0x70] ; std ; call rax
0x0000000000197228 : mov al, 0x91 ; cld ; inc dword ptr [rax - 0x6f] ; cld ; jmp rax
0x0000000000197010 : mov al, 0x94 ; cld ; inc dword ptr [rax - 0x6c] ; cld ; call rax
0x00000000001ae4e0 : mov al, 0x96 ; hlt ; jmp qword ptr [rcx]
0x00000000001ac030 : mov al, 0x9c ; jmp qword ptr [rdi]
0x00000000001ae650 : mov al, 0x9e ; hlt ; jmp qword ptr [rcx]
0x00000000000f9d88 : mov al, 0xa ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001aa6a0 : mov al, 0xcb ; int1 ; call qword ptr [rbx]
0x00000000001ad460 : mov al, 0xd5 ; jmp qword ptr [rcx]
0x00000000001ad570 : mov al, 0xd7 ; call qword ptr [rdi]
0x00000000001af030 : mov al, 0xda ; hlt ; jmp qword ptr [rcx]
0x00000000001872b0 : mov al, 0xdc ; int1 ; inc eax ; fdivr st(1), st(0) ; call rax
0x00000000001af390 : mov al, 0xe2 ; hlt ; jmp qword ptr [rcx]
0x0000000000187300 : mov al, 0xe3 ; int1 ; call rax
0x0000000000187320 : mov al, 0xe4 ; int1 ; call rax
0x0000000000187340 : mov al, 0xe5 ; int1 ; call rax
0x0000000000187360 : mov al, 0xe6 ; int1 ; jmp rax
0x0000000000187380 : mov al, 0xe7 ; int1 ; inc eax ; out -0xf, eax ; call rax
0x000000000019fec9 : mov al, 0xe9 ; call qword ptr [rsi]
0x00000000001873e8 : mov al, 0xe9 ; int1 ; call rax
0x000000000019fe09 : mov al, 0xe9 ; jmp qword ptr [rdx]
0x0000000000184676 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000000fdf43 : mov al, 0xf3 ; ret
0x00000000001b24e9 : mov al, 0xf5 ; call rdi
0x0000000000195d2c : mov al, 0xf6 ; cli ; jmp qword ptr [rax]
0x00000000001af9a0 : mov al, 0xf8 ; hlt ; jmp qword ptr [rcx]
0x00000000001874e8 : mov al, 0xf8 ; int1 ; call rax
0x00000000000e4192 : mov al, 0xfa ; call rcx
0x0000000000187520 : mov al, 0xfa ; int1 ; call rax
0x0000000000196205 : mov al, 0xfb ; inc eax ; mov cl, 0xfb ; call qword ptr [rax]
0x000000000018754c : mov al, 0xfc ; int1 ; jmp rax
0x000000000018757c : mov al, 0xfd ; int1 ; inc eax ; std ; int1 ; call rax
0x00000000001a5a41 : mov al, 1 ; add edi, dword ptr [rdi + 0x380e0a01] ; ret
0x000000000013b4bf : mov al, 1 ; ret
0x00000000000a5abc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000001ab5a0 : mov al, 5 ; jmp qword ptr [rcx]
0x0000000000195d6c : mov al, 6 ; sti ; jmp rax
0x00000000000a56bc : mov al, 8 ; add byte ptr [rax], al ; ret
0x000000000007d7b6 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbp, qword ptr [rbx + 8] ; jmp 0x7d78c
0x000000000010a919 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x00000000000a1beb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a1c19 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a1c9d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016a840 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a1bc5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000102e32 : mov al, dh ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000cc28c : mov ax, 0xfde8 ; jne 0xcc262 ; ret
0x00000000000a1bd5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000015b151 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000c72c7 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x73], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000002a9d2 : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000002a57e : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1276
0x00000000001701b8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000000bbba4 : mov bh, 0x4d ; ret 0xc06b
0x00000000000bb806 : mov bh, 0x7d ; ret 0xb70f
0x0000000000002bcc : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001836a4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002e186 : mov bh, 0xc0 ; ret
0x000000000011917c : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000001a4329 : mov bh, 0xe7 ; call rdx
0x0000000000003754 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x373e ; ret 0x975
0x0000000000108583 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000109f9e : mov bh, 4 ; js 0x109f2e ; loopne 0x109fb5 ; movzx eax, ax ; ret
0x000000000010a0de : mov bh, 4 ; js 0x10a06b ; loopne 0x10a0eb ; ret
0x000000000010a17e : mov bh, 4 ; js 0x10a10e ; loopne 0x10a18f ; movzx eax, ax ; ret
0x000000000010a48e : mov bh, 4 ; js 0x10a41e ; loopne 0x10a4a1 ; movzx eax, ax ; ret
0x000000000010a9af : mov bh, 4 ; js 0x10a93f ; loopne 0x10a9c6 ; movzx eax, ax ; ret
0x000000000010aacf : mov bh, 4 ; js 0x10aa5c ; loopne 0x10aadc ; ret
0x000000000010ab5f : mov bh, 4 ; js 0x10aaef ; loopne 0x10ab70 ; movzx eax, ax ; ret
0x000000000010ae2f : mov bh, 4 ; js 0x10adbf ; loopne 0x10ae42 ; movzx eax, ax ; ret
0x000000000002e17f : mov bh, 4 ; js 0x2e10f ; loopne 0x2e196 ; movzx eax, ax ; ret
0x000000000002e1bf : mov bh, 4 ; js 0x2e14f ; loopne 0x2e1d0 ; movzx eax, ax ; ret
0x000000000002e25f : mov bh, 4 ; js 0x2e1ef ; loopne 0x2e272 ; movzx eax, ax ; ret
0x000000000002e33f : mov bh, 4 ; js 0x2e2cc ; loopne 0x2e34c ; ret
0x000000000002e3b8 : mov bh, 4 ; js 0x2e345 ; loopne 0x2e3c5 ; ret
0x000000000002e3c8 : mov bh, 4 ; js 0x2e358 ; loopne 0x2e3df ; movzx eax, ax ; ret
0x000000000002e408 : mov bh, 4 ; js 0x2e398 ; loopne 0x2e419 ; movzx eax, ax ; ret
0x000000000002e4a8 : mov bh, 4 ; js 0x2e438 ; loopne 0x2e4bb ; movzx eax, ax ; ret
0x00000000000c1605 : mov bh, 5 ; ret
0x0000000000184db3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000fc8f5 : mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000f61f1 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000197259 : mov bh, ah ; call qword ptr [rax + 0x10fffc89]
0x0000000000197255 : mov bh, ah ; call qword ptr [rax]
0x0000000000197455 : mov bh, ah ; jmp qword ptr [rax + 0x20fffc89]
0x0000000000197451 : mov bh, ah ; jmp qword ptr [rax]
0x00000000001972d5 : mov bh, ah ; jmp rdx
0x00000000000ffe2d : mov bh, bh ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x000000000007ea2a : mov bh, byte ptr [rdi + 0x34] ; add byte ptr [rax - 0x77], cl ; ret 0x1fe9
0x0000000000195e41 : mov bh, ch ; call qword ptr [rax]
0x0000000000195e65 : mov bh, ch ; call rax
0x0000000000195e31 : mov bh, ch ; jmp qword ptr [rax]
0x0000000000195e61 : mov bh, ch ; jmp rax
0x0000000000171aae : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000ac97c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000000e3fac : mov bl, 0x48 ; mov esi, dword ptr [rbx + 8] ; mov byte ptr [rsi + rcx], al ; jmp 0xe3f81
0x0000000000140139 : mov bl, 0x53 ; sub byte ptr [rax], al ; call qword ptr [rax]
0x000000000006fd47 : mov bl, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x5e8b
0x0000000000184783 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000095155 : mov bl, 0xf ; test dword ptr [rax + rax - 0x76b80000], esi ; ret 0xf748
0x0000000000003aad : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000019624d : mov bl, 0xfb ; call rax
0x00000000000366fe : mov bl, cl ; cmp byte ptr [rax], al ; ret
0x00000000001267ce : mov byte ptr [r11], 0 ; ret
0x0000000000078aa4 : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000001431a9 : mov byte ptr [r8], r8b ; add byte ptr [rax], al ; add al, ch ; in al, dx ; ret 0xffed
0x00000000000e9f67 : mov byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000124a02 : mov byte ptr [rax + 3], ch ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007e142 : mov byte ptr [rax + rax], dh ; add dword ptr [rbx - 0xd], ebx ; ret
0x0000000000083748 : mov byte ptr [rax + rbx], cl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000044b39 : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000078aa5 : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x000000000012355f : mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000001b16f8 : mov byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000013db71 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret
0x000000000019876d : mov byte ptr [rax], 0 ; hlt ; imul ch ; call rsp
0x000000000010e2b6 : mov byte ptr [rax], 0x20 ; jmp 0x10e281
0x00000000001048be : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001431aa : mov byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; in al, dx ; ret 0xffed
0x00000000000357d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000036916 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000003573d : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011f154 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000078fe6 : mov byte ptr [rax], bh ; movzx eax, dil ; ret
0x00000000001afec8 : mov byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000a4812 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000078fe5 : mov byte ptr [rax], dil ; movzx eax, dil ; ret
0x0000000000123bc1 : mov byte ptr [rbp + 0x11], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da389 : mov byte ptr [rbx + 0x3b], 0x34 ; mov dl, 0x7f ; fdivr dword ptr [rcx] ; ret 0xc189
0x000000000018b714 : mov byte ptr [rbx - 6], ah ; jmp rax
0x00000000000fdd56 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000001267cf : mov byte ptr [rbx], 0 ; ret
0x0000000000002f66 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000168503 : mov byte ptr [rcx + 2], dl ; ret
0x000000000009fc49 : mov byte ptr [rcx + 3], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000168522 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000168563 : mov byte ptr [rcx + 8], dl ; ret
0x000000000009efc3 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002c5b6 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x000000000019ecf8 : mov byte ptr [rcx - 0x17], ah ; call qword ptr [rcx]
0x000000000019c9d8 : mov byte ptr [rcx - 0x18], al ; call qword ptr [rax]
0x000000000012fdd3 : mov byte ptr [rcx - 0x7d], cl ; ret 0x4820
0x000000000009f394 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000009f2c0 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000032c1f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000047232 : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x47231 ; xor eax, eax ; ret
0x00000000000e9f68 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a7338 : mov byte ptr [rcx], al ; ret
0x00000000000d8e66 : mov byte ptr [rcx], bh ; ret 0xc57f
0x00000000001684e0 : mov byte ptr [rcx], dl ; ret
0x00000000000a8e8a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a742b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a5c4b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a8e9b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a65e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a4f78 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8ea0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a8ec2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a8ee0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a8f00 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a665e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a4fce : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a74b1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a5ca1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a8f21 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8f26 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8f42 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a8f62 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a8f82 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a7533 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a5d23 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a8fa3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a66e0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5050 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a8fa8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a8fca : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a8fe8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9008 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9024 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9044 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9064 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9084 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a5e25 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a90a5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a90aa : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a90fa : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a8dd0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a8dee : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a8e0e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a8e30 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a8e50 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a8e70 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a8d06 : mov byte ptr [rdi + 1], ch ; ret
0x00000000001244c2 : mov byte ptr [rdi + 1], dh ; ret
0x00000000001244c1 : mov byte ptr [rdi + 1], sil ; ret
0x000000000009f003 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ef73 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009fb4b : mov byte ptr [rdi + 2], al ; je 0x9fb01 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a8d18 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a6496 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a4e96 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a72b9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5b69 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a8d29 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a8d2e : mov byte ptr [rdi + 3], ch ; ret
0x000000000009f022 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ef92 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a8d46 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a64b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a4eb2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a72e7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a5b87 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a8d57 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8d5c : mov byte ptr [rdi + 5], ch ; ret
0x000000000009efa9 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a8d6e : mov byte ptr [rdi + 6], ch ; ret
0x0000000000130452 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a8d8c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d4320 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d42e1 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d4350 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d4377 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d43c0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d43ad : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d4310 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d42f0 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a8d98 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a4ef3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a7339 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a5bc9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a8da9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a8dae : mov byte ptr [rdi + 9], ch ; ret
0x000000000009fac0 : mov byte ptr [rdi + rcx], 0xb6 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001246de : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000009ef06 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x00000000001523bb : mov byte ptr [rdi - 1], dl ; ret
0x0000000000196658 : mov byte ptr [rdi - 4], 0xff ; push rsi ; cld ; jmp rsi
0x000000000009ef50 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d4340 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x0000000000115feb : mov byte ptr [rdi], al ; jne 0x115fdf ; mov rax, rdi ; ret
0x00000000001161bb : mov byte ptr [rdi], al ; jne 0x1161af ; mov rax, r10 ; ret
0x00000000000d4399 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a8cf2 : mov byte ptr [rdi], ch ; ret
0x000000000014d3cc : mov byte ptr [rdi], cl ; ret
0x000000000009eea1 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a6470 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a4e70 : mov byte ptr [rdi], dh ; ret
0x00000000000a7292 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5b42 : mov byte ptr [rdi], dl ; ret
0x00000000000a8d02 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a499a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016a869 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a1bee : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016a897 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a1c1c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a4930 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a1ca0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000186d38 : mov byte ptr [rdx - 0x12], dh ; call rax
0x0000000000186db8 : mov byte ptr [rdx - 0x12], dh ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x00000000001b0658 : mov byte ptr [rdx - 0xb], al ; jmp rax
0x000000000011d828 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105a11 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b7cf4 : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x000000000016a842 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a1bc7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000020fbf : mov byte ptr [rdx], bh ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x000000000001fc63 : mov byte ptr [rdx], bh ; cmovne eax, edx ; ret
0x00000000000727da : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x00000000001036f4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000727d9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x000000000002d358 : mov byte ptr [rip + 0x3988bf], dl ; ret
0x0000000000002460 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x00000000000830dd : mov byte ptr [rsi + rbx], cl ; pop rbx ; ret
0x00000000000e3fb1 : mov byte ptr [rsi + rcx], al ; jmp 0xe3f7c
0x0000000000095934 : mov byte ptr [rsi + rdx + 1], al ; jg 0x95927 ; ret
0x00000000000ff372 : mov byte ptr [rsi - 1], 0 ; ret
0x00000000000497c3 : mov byte ptr [rsi], al ; jne 0x497a7 ; mov rax, rsi ; ret
0x0000000000060e80 : mov byte ptr [rsi], bh ; ret
0x000000000004973f : mov byte ptr [rsi], dl ; jne 0x4972f ; mov rax, rsi ; ret
0x00000000000e319a : mov byte ptr [rsp + 8], dl ; call 0x1f456
0x00000000000d9f14 : mov byte ptr [rsp + rax*2], 0x39 ; ret 0x637d
0x00000000000d9f77 : mov byte ptr [rsp + rax*2], 0x39 ; ret 0x9d7c
0x00000000000b7d74 : mov ch, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001821c2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000183503 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000018489f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000018524a : mov ch, 0xab ; ret
0x0000000000003753 : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x373f ; ret 0x975
0x000000000018826d : mov ch, 0xf3 ; call qword ptr [rcx]
0x0000000000188269 : mov ch, 0xf3 ; dec dword ptr [rcx - 0x4b] ; call qword ptr [rcx]
0x000000000000a190 : mov ch, 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000016ebd6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008ea9b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000010905e : mov cl, 0x15 ; pop rsp ; mov dl, 0x2b ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x0000000000003b60 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000c87a7 : mov cl, 0x35 ; ret
0x00000000000dd07e : mov cl, 0x39 ; ret 0xc189
0x0000000000114efb : mov cl, 0x3d ; xchg dword ptr [rbp + 0x2b], ecx ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000000c1fdf : mov cl, 0x48 ; add ecx, esi ; jmp rcx
0x00000000000330cd : mov cl, 0x48 ; add edx, ecx ; jmp rdx
0x0000000000002bcd : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x0000000000195ea0 : mov cl, 0x91 ; std ; inc dword ptr [rcx - 0x6e] ; std ; jmp rcx
0x0000000000142920 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000019ffb9 : mov cl, 0xe9 ; call qword ptr [rax]
0x000000000019ffd1 : mov cl, 0xe9 ; call qword ptr [rdx]
0x000000000019b5e9 : mov cl, 0xf8 ; call rsp
0x0000000000196209 : mov cl, 0xfb ; call qword ptr [rax]
0x000000000010a6da : mov cl, 3 ; add al, 0xa ; ret
0x000000000002d102 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000002ebc4 : mov cl, byte ptr [rax + 1] ; ret 0xe2ff
0x000000000013e13b : mov cl, byte ptr [rbp + 0x39] ; ret
0x0000000000078ac7 : mov cl, byte ptr [rbp + 0x63] ; ret 0xd231
0x0000000000091c25 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009ef23 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000089d34 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000184672 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000014d3ca : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000006ae6f : mov cl, ch ; ret
0x00000000000aadfb : mov cl, dl ; and cl, 0xf ; je 0xaae27 ; ret
0x000000000018492c : mov cs, edi ; ret 0x8b36
0x00000000000da40f : mov cs, word ptr [rax + 0x63] ; ret 0xda39
0x000000000014aa2e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000a4e90 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001a7f3d : mov dh, 0 ; add al, dh ; jno 0x1a7f38 ; jmp qword ptr [rax]
0x000000000007b2f6 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bfa9 : mov dh, 0 ; pop rbx ; ret
0x0000000000079013 : mov dh, 0 ; ret
0x000000000015b1c1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008ec84 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033950 : mov dh, 0x17 ; test dl, dl ; jne 0x33936 ; ret
0x00000000000d72bc : mov dh, 0x1c ; adc byte ptr [rax - 0x7d], cl ; ret 0x4501
0x00000000000d7e55 : mov dh, 0x1c ; add eax, dword ptr [rcx - 0xa] ; ret
0x000000000010da07 : mov dh, 0x41 ; add dword ptr [rcx - 0x7d], ecx ; ret 0xeb08
0x00000000000db036 : mov dh, 0x41 ; cmp eax, esi ; jge 0xdb017 ; mov edx, eax ; jmp 0xdb020
0x00000000000cdb68 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000cd497 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000455d3 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005589c : mov dh, 0x45 ; or al, 0x89 ; ret 0xeac0
0x000000000009c8b6 : mov dh, 0x45 ; ret
0x000000000009c8a4 : mov dh, 0x45 ; ret 0x8349
0x000000000006dc1f : mov dh, 0x46 ; add ch, cl ; ret
0x000000000006d633 : mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000009fac3 : mov dh, 0x46 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000171681 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171671 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171641 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171661 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171651 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000025dd4 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002616d : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000d0281 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000196634 : mov dh, 0x4b ; cld ; inc dword ptr [rsi + 0x4b] ; cld ; call rsi
0x0000000000140736 : mov dh, 0x4d ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000183662 : mov dh, 0x4e ; ret 0x474c
0x00000000001247ad : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009a669 : mov dh, 0x55 ; ret
0x000000000009ad23 : mov dh, 0x55 ; ret 0x8348
0x000000000009a657 : mov dh, 0x55 ; ret 0x8349
0x0000000000171685 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000171675 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000171645 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000171655 : mov dh, 0x56 ; sub eax, edx ; ret
0x00000000000ff049 : mov dh, 0x5b ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000033f59 : mov dh, 0x5d ; add cl, byte ptr [rbp - 0x77] ; in eax, -0x17 ; ret 0xfffd
0x00000000000f3191 : mov dh, 0x65 ; mov qword ptr [rsp + 0x10], rcx ; call 0x1f459
0x0000000000196b60 : mov dh, 0x6c ; cld ; inc dword ptr [rsi + 0x6c] ; cld ; call rsi
0x00000000000e309c : mov dh, 0x70 ; xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x0000000000197058 : mov dh, 0x93 ; cld ; inc dword ptr [rsi - 0x6d] ; cld ; call rsi
0x00000000000c187a : mov dh, 0x9c ; and al, 0x81 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000089515 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x000000000012e6c8 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013af3c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e26d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ead4f : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000b9ed1 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cc4df : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003508d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000e0306 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006d735 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d2a0d : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000006d600 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000bfd2b : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c75d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006c72a : mov dh, 0xc0 ; neg eax ; ret
0x0000000000133016 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000012f55b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000102661 : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000035d7a : mov dh, 0xc0 ; ret
0x00000000000a9a98 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000a9ac0 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007b479 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c203e : mov dh, 0xc6 ; movsxd r8, dword ptr [rdi + r8*4] ; add rdi, r8 ; jmp rdi
0x000000000011916e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000000727de : mov dh, 0xc7 ; ret
0x00000000001848a4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000008ecaa : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000e3408 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008b0e1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016dcb4 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000001985a9 : mov dh, 0xed ; call rsp
0x00000000000d7693 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x000000000018709d : mov dh, 0xf0 ; call qword ptr [rax - 0x1f000f48]
0x00000000000c1fda : mov dh, 0xf0 ; movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x00000000000ab9c2 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000003332d : mov dh, 0xff ; movsxd rdi, dword ptr [r8 + rdi*4] ; add rdi, r8 ; jmp rdi
0x0000000000060f1e : mov dh, 2 ; jmp 0x5d1c7
0x000000000007b301 : mov dh, 2 ; ret
0x0000000000098919 : mov dh, 4 ; sbb byte ptr [rcx + 0x38], al ; ret 0xd374
0x00000000000d595c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016dcb1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ec81 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b0e4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000006f0f8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000a9c5c : mov dh, byte ptr [rcx - 0xd] ; ret
0x000000000019a521 : mov dh, dh ; call rsp
0x00000000001abd91 : mov dh, dl ; call rdi
0x0000000000195e40 : mov dil, r13b ; call qword ptr [rax]
0x0000000000003a58 : mov dl, 0x1e ; ret
0x0000000000109061 : mov dl, 0x2b ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001966d8 : mov dl, 0x47 ; cld ; inc dword ptr [rdx + 0x47] ; cld ; call rdx
0x00000000001737fd : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000196bc4 : mov dl, 0x6f ; cld ; inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x00000000000da38d : mov dl, 0x7f ; fdivr dword ptr [rcx] ; ret 0xc189
0x000000000002dec7 : mov dl, 0x8b ; add al, 7 ; ret
0x00000000001970bc : mov dl, 0x96 ; cld ; inc dword ptr [rdx - 0x6a] ; cld ; call rdx
0x00000000000cc515 : mov dl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000366d2 : mov dl, 0xd9 ; cmp byte ptr [rax], al ; ret
0x0000000000188051 : mov dl, 0xf3 ; jmp rax
0x00000000001b90e1 : mov dl, 0xf7 ; jmp qword ptr [rax]
0x000000000019adad : mov dl, 1 ; add ah, al ; jno 0x19adb0 ; call rsp
0x0000000000124164 : mov dl, 2 ; cmove eax, edx ; ret
0x00000000000a5b63 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a5b82 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a5bc3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000152440 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a7290 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a5b40 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a8d00 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000106ee2 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000cbaf7 : mov dword ptr [0x2d0], esi ; ret
0x000000000009e666 : mov dword ptr [r10], ebx ; jmp 0x9ea5c
0x00000000000e3287 : mov dword ptr [r15 + 0x38], eax ; jmp 0xe3255
0x00000000000fc884 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000fc87f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000124850 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000003aaa3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x00000000001247b4 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000115330 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000ab7d7 : mov dword ptr [r9 + 8], esi ; ret
0x0000000000073019 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000073059 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074009 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000788d9 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000fc885 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000fc880 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000007301d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000003a3de : mov dword ptr [rax + 0x40], edx ; call qword ptr [rbx]
0x00000000000740a7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x00000000000ea87c : mov dword ptr [rax + 0x74], ebx ; call 0x1f4c9
0x000000000006c88b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007c83a : mov dword ptr [rax + 8], 0 ; ret
0x000000000006c82b : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x000000000008f2e2 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x00000000000632d2 : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000001889c0 : mov dword ptr [rax - 0xc], ecx ; call qword ptr [rsi]
0x00000000001889b0 : mov dword ptr [rax - 0xc], ecx ; call rsi
0x00000000001888f4 : mov dword ptr [rax - 0xc], ecx ; jmp qword ptr [rax]
0x000000000013bc4d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fd478 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x000000000006ff5f : mov dword ptr [rax], 0x16 ; mov rax, rdx ; ret
0x00000000001026a8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000ba430 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x00000000000830f0 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x00000000000835a8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000fcfd4 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x0000000000132c40 : mov dword ptr [rax], 2 ; call 0x12ef48
0x00000000000c6d78 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000000219c8 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000aaab3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000eab94 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000001245ba : mov dword ptr [rax], ebx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; pop rbp ; ret
0x0000000000073575 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007199a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000003f77c : mov dword ptr [rax], edi ; jmp 0x3f3d0
0x000000000004224b : mov dword ptr [rax], edi ; jmp 0x41e9f
0x00000000000ff2b1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000124851 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000084486 : mov dword ptr [rax], edi ; ret
0x0000000000106da3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ab811 : mov dword ptr [rax], edx ; jne 0xab80d ; ret
0x000000000003aaa4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000fc89a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000734b5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000001247b5 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002de33 : mov dword ptr [rax], edx ; ret
0x0000000000074321 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000eab93 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000007f99f : mov dword ptr [rbp + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5f11 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123155 : mov dword ptr [rbp + 8], eax ; mov rdi, rax ; call 0x8f368
0x0000000000185e94 : mov dword ptr [rbp + rbp*8 - 1], ecx ; scasd eax, dword ptr [rdi] ; push rsp ; in eax, dx ; call qword ptr [rcx]
0x0000000000055d5b : mov dword ptr [rbp - 0x1178], ecx ; jmp rax
0x0000000000067062 : mov dword ptr [rbp - 0x138], eax ; jmp 0x6329d
0x000000000013f648 : mov dword ptr [rbp - 0x180], eax ; call 0xfb8b8
0x0000000000061a4b : mov dword ptr [rbp - 0x1f0], esi ; jmp 0x61a1c
0x00000000000bbca5 : mov dword ptr [rbp - 0x3e], eax ; jmp 0xbbc78
0x00000000001057cb : mov dword ptr [rbp - 0x58], eax ; mov rdx, rax ; jmp 0x105801
0x0000000000105874 : mov dword ptr [rbp - 0x58], eax ; mov rdx, rax ; jmp 0x1058ab
0x000000000004aa47 : mov dword ptr [rbp - 0x5b8], ecx ; jmp rax
0x00000000001141c6 : mov dword ptr [rbp - 0x70], eax ; call rcx
0x00000000001431a8 : mov dword ptr [rbp - 0x78], 0 ; call 0x1f4a9
0x000000000006b7f5 : mov dword ptr [rbp - 0x78], edx ; jmp 0x67af9
0x00000000001144a0 : mov dword ptr [rbp - 0x80], eax ; call r8
0x0000000000113843 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000113a53 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000113af4 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113b60 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000ed46c : mov dword ptr [rbp - 0xa8], edx ; call 0x129738
0x00000000000ed46b : mov dword ptr [rbp - 0xa8], r10d ; call 0x129739
0x000000000014164d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000071d53 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071d52 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ae7e : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000000c6e69 : mov dword ptr [rbx + 0x10], eax ; mov r8, rbp ; xor edx, edx ; jmp 0xc6e3e
0x00000000000794e7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000142f46 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000799f9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010e814 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013b8d5 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000142efe : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010e844 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078015 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007be73 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000897e0 : mov dword ptr [rbx + 0x20], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b929 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e712b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000078905 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x0000000000089349 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x0000000000089348 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003508f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fc351 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000893fe : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007bedb : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000741ea : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a7f2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000730a8 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000073ec8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000793d7 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002ae97 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010e7e4 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035c68 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007c0fd : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000102692 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000013bae0 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007c200 : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000143171 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001378e2 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000010265b : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x00000000001365f0 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000007400c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000089346 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000007be76 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000893fb : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000006f318 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131934 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x0000000000094ce5 : mov dword ptr [rcx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000134788 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x00000000001346e5 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x00000000001347b5 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002077d : mov dword ptr [rcx + 0x968], eax ; ret
0x00000000000ab112 : mov dword ptr [rcx + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000168542 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000aaf30 : mov dword ptr [rcx + 4], eax ; jne 0xaaf01 ; nop dword ptr [rax] ; ret
0x0000000000168533 : mov dword ptr [rcx + 4], edx ; ret
0x00000000001685a4 : mov dword ptr [rcx + 5], edx ; ret
0x00000000001685b4 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000168583 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168574 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000ab7d8 : mov dword ptr [rcx + 8], esi ; ret
0x000000000004a8b3 : mov dword ptr [rcx + rax*4], edi ; call qword ptr [r10 + rax*8 - 0x40]
0x000000000009eed6 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000471e7 : mov dword ptr [rcx + rdx*8], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000032745 : mov dword ptr [rcx], 0x58f84e8 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000cff3c : mov dword ptr [rcx], 0xdf75d284 ; ret
0x00000000000355aa : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000072647 : mov dword ptr [rcx], eax ; ret
0x0000000000076a74 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000124854 : mov dword ptr [rcx], ecx ; ret
0x00000000000724a1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000124828 : mov dword ptr [rcx], edi ; ret
0x000000000008e7f7 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x0000000000168501 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168520 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168561 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168540 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168581 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168591 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001685a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x00000000001685b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685c1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685d1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168530 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168571 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x00000000001247b8 : mov dword ptr [rcx], edx ; ret
0x00000000000f6b1b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f6b52 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000124939 : mov dword ptr [rdi + 0x10], eax ; xor eax, eax ; ret
0x00000000000a65fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a744d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a663b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a748b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a66bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a750d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a4fcb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5c9e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a504d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000047b4f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8ebd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a8efb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a8f7d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a5d20 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5090 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a50b0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5071 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000f6b40 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x00000000000a6723 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7573 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a5093 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a8fe3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013b520 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007be03 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000078ca7 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a6705 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7555 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a6743 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7593 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a5075 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a8fc5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9003 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000e3284 : mov dword ptr [rdi + 0x18], edx ; mov dword ptr [r15 + 0x38], eax ; jmp 0xe3258
0x000000000013b5b2 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013b4b9 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000013b4e6 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000010e2b3 : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10e284
0x000000000013b4bc : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000134f9c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013b661 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000e3288 : mov dword ptr [rdi + 0x38], eax ; jmp 0xe3254
0x0000000000094bd9 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000134f54 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x0000000000020ad6 : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007be33 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007f57b : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000035e99 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000f61de : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000001238af : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a667d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a74cd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a4fed : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a8f3d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a661b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a746b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a669d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a74ed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a4fab : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8edb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a8f5d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b005 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae48 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0e8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015af95 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015add8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b123 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a64e7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a7317 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000015af25 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ad68 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4ed7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a8d87 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009efe3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ef43 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007f57e : mov dword ptr [rdi + 4], eax ; ret
0x000000000003b11d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009f033 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a72f9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000015acf8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009ef33 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a4ec9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a8d69 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f6230 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009efe2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ef42 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a657b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a73bb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015ac88 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f3b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a8e2b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a659b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a73db : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015ac18 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f4b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a8e4b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a6539 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7379 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a65bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a73fb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015aba8 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f19 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a8de9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a8e6b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff2e8 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000ab8f5 : mov dword ptr [rdi + 8], eax ; je 0xab8b0 ; mov rax, rbx ; pop rbx ; ret
0x000000000007be07 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000047ad4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000a735b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a6559 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7399 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a651b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000047304 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003aa84 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007900f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003aa75 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a8dcb : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a8e09 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fc4c2 : mov dword ptr [rdi + 8], esi ; ret
0x00000000000362c2 : mov dword ptr [rdi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x000000000014d3c3 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000008f2e9 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008f2f2 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x0000000000152105 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152143 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000047a3f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000015248c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a658 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015266c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a5d8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015285c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a558 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a2d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a4c9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152c2d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a439 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152e2d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a3a9 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a5e60 : mov dword ptr [rdi - 1], edx ; ret
0x000000000015280d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000152625 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000152809 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009ee8f : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000152be9 : mov dword ptr [rdi - 4], ecx ; ret
0x00000000001522bf : mov dword ptr [rdi - 4], edx ; ret
0x000000000009eeeb : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000152be6 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ee75 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000152de6 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ef09 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000152fe6 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000479ca : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000152147 : mov dword ptr [rdi - 8], edx ; ret
0x00000000001522bc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001523b8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152304 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a6d8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a590 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000005d422 : mov dword ptr [rdi], eax ; jmp 0x5bbda
0x00000000000ff2d5 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004965b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x0000000000094a17 : mov dword ptr [rdi], eax ; pop rbx ; ret
0x00000000000479c4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000047ace : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000363ab : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000540e6 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009eeb2 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009f010 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a64b5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a6507 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6494 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a4e94 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a72b7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5b67 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009ef90 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a72e5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a5b85 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a7337 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a5bc7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a64e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a7315 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a4ed5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009ef40 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a6537 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7377 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a4f17 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6557 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a7397 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a4f27 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008f2e7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000001722b9 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a4f38 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a4f48 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a4f58 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f2ef : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009ef80 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009ef30 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a4ec6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a4f08 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001722c6 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000001f90d : mov dword ptr [rdi], ecx ; ret
0x0000000000034ef9 : mov dword ptr [rdi], edx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a6484 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a72a4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a64a2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a72d2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a64f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7324 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5e80 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a5ec1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5ee1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5ef1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5f01 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5f11 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e90 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5ed1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000034c14 : mov dword ptr [rdi], edx ; ret
0x00000000000a8d14 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a8d42 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a8d94 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009eff1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009ef71 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000014d3ab : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004909d : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x000000000014d38e : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009ef61 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000014d3c0 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000490c3 : mov dword ptr [rdi], esi ; ret
0x00000000000f6211 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x000000000013505c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006f0f7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x0000000000079545 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000007249e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000072644 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000012e820 : mov dword ptr [rdx + 0x20], esi ; ret
0x00000000000241f4 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x00000000000241f7 : mov dword ptr [rdx + 0x54], eax ; ret
0x000000000012e7fc : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e800 : mov dword ptr [rdx + 0x68], ecx ; ret
0x00000000001319d0 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000134f3c : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000016a8c7 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a1c5c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016a8a9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a1c3e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016a95b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016a8d9 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000166589 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016a97b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016a8f9 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000166599 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016a919 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016a99b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a1ce0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000016a939 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016a82b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a1cc2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000131951 : mov dword ptr [rdx + 8], edi ; ret
0x000000000006f9ae : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x000000000016a854 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000016a882 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016a7d4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000106e6a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003529a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004916f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c8851 : mov dword ptr [rdx], eax ; mov eax, esi ; pop rbx ; ret
0x00000000000fd1d2 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a1bd9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c8092 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002e60d : mov dword ptr [rdx], eax ; ret
0x000000000007772f : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000009e667 : mov dword ptr [rdx], ebx ; jmp 0x9ea5b
0x00000000000a9cf5 : mov dword ptr [rdx], ecx ; jne 0xa9ced ; ret
0x0000000000073396 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000ea8e7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000490a4 : mov dword ptr [rdx], ecx ; ret
0x00000000000e6e5b : mov dword ptr [rdx], edi ; ret
0x00000000000c86a3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c876d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000013194e : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000094f0f : mov dword ptr [rdx], esp ; mov rax, r10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8850 : mov dword ptr [rdx], r8d ; mov eax, esi ; pop rbx ; ret
0x00000000001155d8 : mov dword ptr [rip + 0x2b2f42], eax ; pop rbp ; ret
0x0000000000109010 : mov dword ptr [rip + 0x2bb2aa], ebx ; pop rbx ; ret
0x000000000010157a : mov dword ptr [rip + 0x2c2cf0], edi ; ret
0x00000000000fe5e5 : mov dword ptr [rip + 0x2c72d5], eax ; mov rdx, rax ; jmp 0xfe587
0x0000000000036713 : mov dword ptr [rip + 0x38d96f], eax ; mov eax, edx ; ret
0x00000000000366fc : mov dword ptr [rip + 0x38d98a], edx ; ret
0x000000000002061d : mov dword ptr [rip + 0x3a3c15], eax ; pop rbp ; pop r12 ; ret
0x000000000001f56e : mov dword ptr [rip + 0x3a6494], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000211ea : mov dword ptr [rip + 0x3a8610], ebx ; pop rbx ; ret
0x00000000000211e9 : mov dword ptr [rip + 0x3a8610], r11d ; pop rbx ; ret
0x0000000000020e71 : mov dword ptr [rip + 0x3a8989], ebx ; pop rbx ; ret
0x0000000000020e70 : mov dword ptr [rip + 0x3a8989], r11d ; pop rbx ; ret
0x00000000000e8b44 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003b046 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003a9ef : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003a9f3 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000fc332 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000fb736 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000f614f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003b090 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003b0d7 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000aaf78 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e8b27 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000012d901 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e8b40 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000b9f31 : mov dword ptr [rsi + rcx], edx ; jne 0xb9f2e ; ret
0x0000000000047050 : mov dword ptr [rsi + rdx*8], eax ; xor eax, eax ; pop rbx ; ret
0x00000000001722c9 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000001722bb : mov dword ptr [rsi - 4], ecx ; ret
0x000000000012d91f : mov dword ptr [rsi], 0 ; ret
0x000000000009ee73 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000012d990 : mov dword ptr [rsi], 0xa ; ret
0x000000000012d980 : mov dword ptr [rsi], 0xb ; ret
0x000000000012d9d0 : mov dword ptr [rsi], 0xc ; ret
0x00000000000ad40e : mov dword ptr [rsi], 1 ; xor ebx, ebx ; mov edx, eax ; jmp 0xad3c9
0x00000000000afc6e : mov dword ptr [rsi], 1 ; xor ebx, ebx ; mov edx, eax ; jmp 0xafc29
0x00000000000b232e : mov dword ptr [rsi], 1 ; xor ebx, ebx ; mov edx, eax ; jmp 0xb22e9
0x000000000012d9c0 : mov dword ptr [rsi], 8 ; ret
0x0000000000078cab : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001238b3 : mov dword ptr [rsi], edi ; ret
0x00000000001190c9 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003aaa6 : mov dword ptr [rsi], edx ; ret
0x0000000000034d65 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000000f3194 : mov dword ptr [rsp + 0x10], ecx ; call 0x1f456
0x00000000000e3555 : mov dword ptr [rsp + 0x10], esi ; mov rdx, rax ; jmp 0xe34f8
0x000000000012c827 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x00000000001092f9 : mov dword ptr [rsp + 0x20], eax ; call 0x35526
0x000000000008293b : mov dword ptr [rsp + 0x30], eax ; call rdx
0x0000000000082ebf : mov dword ptr [rsp + 0x30], edx ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000331ad : mov dword ptr [rsp + 0x38], ecx ; call 0x1f466
0x00000000000331ac : mov dword ptr [rsp + 0x38], r9d ; call 0x1f467
0x00000000000ba8c8 : mov dword ptr [rsp + 0x40], eax ; mov rsi, r13 ; call r12
0x00000000000bb024 : mov dword ptr [rsp + 0x98], ebx ; call r12
0x00000000000baca9 : mov dword ptr [rsp + 0x98], esi ; call r12
0x00000000000baf69 : mov dword ptr [rsp + 0xa8], ebp ; call r15
0x00000000000f3299 : mov dword ptr [rsp + 8], eax ; call 0x1f4c6
0x00000000000893b0 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102e16 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013ab85 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b9ec : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x00000000000731f7 : mov dword ptr [rsp + 8], edx ; mov rdi, r12 ; call 0x1f469
0x0000000000082a6d : mov dword ptr [rsp + 8], esi ; call rax
0x000000000013fb3e : mov dword ptr [rsp + 8], esi ; mov rsi, rdx ; call 0x13bdb9
0x0000000000034e35 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000049246 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035005 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000089718 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x000000000012a62c : mov dword ptr [rsp], ecx ; call r12
0x00000000000cbaf6 : mov dword ptr fs:[0x2d0], esi ; ret
0x00000000000fd477 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000001026a7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000ba42f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x00000000000835a7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c6d77 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x00000000000219c7 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000ff2b0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000fc899 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000eab92 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000001226a0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000355a9 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006f9ad : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000035299 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c86a2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c876c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000c884f : mov dword ptr fs:[rdx], r8d ; mov eax, esi ; pop rbx ; ret
0x000000000014d3aa : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152620 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a4e80 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fba16 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000001085c6 : mov eax, 0 ; cmovae rax, rsi ; ret
0x0000000000097425 : mov eax, 0 ; cmovne rax, rdi ; ret
0x000000000012bf94 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a9b72 : mov eax, 0x10 ; pop rbx ; ret
0x000000000012417a : mov eax, 0x100 ; ret
0x0000000000124174 : mov eax, 0x101 ; ret
0x0000000000124180 : mov eax, 0x102 ; ret
0x000000000012416e : mov eax, 0x104 ; ret
0x00000000000fcebd : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000f6b33 : mov eax, 0x16 ; jbe 0xf6b48 ; ret
0x00000000000875a2 : mov eax, 0x16 ; je 0x875b8 ; ret
0x00000000000f6205 : mov eax, 0x16 ; je 0xf6218 ; ret
0x00000000000f6b68 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000000cc3f2 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000a9b6b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000cc3d0 : mov eax, 0x20 ; ret
0x000000000007320a : mov eax, 0x24548b48 ; or byte ptr [rax + 1], cl ; ret
0x00000000000a9b64 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000dd07b : mov eax, 0x39b17f04 ; ret 0xc189
0x00000000000dd058 : mov eax, 0x39d47f04 ; ret 0xc189
0x00000000000a9b5d : mov eax, 0x40 ; pop rbx ; ret
0x00000000000cc420 : mov eax, 0x40 ; ret
0x00000000001827bb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008f7aa : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x00000000000f7100 : mov eax, 0x5f ; syscall ; ret
0x00000000000a9b56 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000cbb10 : mov eax, 0x66 ; syscall ; ret
0x00000000000cbb30 : mov eax, 0x68 ; syscall ; ret
0x00000000000cbb20 : mov eax, 0x6b ; syscall ; ret
0x00000000000cbb40 : mov eax, 0x6c ; syscall ; ret
0x00000000000cbb00 : mov eax, 0x6e ; syscall ; ret
0x00000000000cbd70 : mov eax, 0x6f ; syscall ; ret
0x00000000001a817d : mov eax, 0x7a000000 ; out dx, eax ; call qword ptr [rcx]
0x00000000000cc2d9 : mov eax, 0x7d00 ; ret
0x00000000000cc308 : mov eax, 0x7e ; ret
0x00000000000cc2aa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000cc25b : mov eax, 0x7f ; ret
0x00000000000a9b4f : mov eax, 0x80 ; pop rbx ; ret
0x0000000000132d2c : mov eax, 0x89002966 ; ret
0x00000000000f5f24 : mov eax, 0x89fffffe ; ret 0xcb8
0x0000000000075df1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000188035 : mov eax, 0xa30afff3 ; jmp qword ptr [rax]
0x0000000000131a5f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018bc24 : mov eax, 0xbcfffb02 ; sti ; jmp qword ptr [rdx]
0x00000000000e3df0 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3dba : mov eax, 0xc ; ret
0x0000000000033c73 : mov eax, 0xc031fffe ; pop rbx ; ret
0x00000000000cc28d : mov eax, 0xc975fde8 ; ret
0x00000000001190b8 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000114c12 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000137a16 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001072d0 : mov eax, 0xe4 ; syscall ; ret
0x000000000005e295 : mov eax, 0xe8fffffd ; ret 0x310
0x0000000000069485 : mov eax, 0xe8fffffe ; ret 0x422
0x00000000000cc2ff : mov eax, 0xfa ; ret
0x00000000000cc320 : mov eax, 0xfc17 ; ret
0x00000000000cc310 : mov eax, 0xfffa ; ret
0x000000000009ec32 : mov eax, 0xffffff6 ; mov dh, 0x55 ; ret 0x8348
0x00000000000ca774 : mov eax, 0xfffffff2 ; ret
0x00000000001153a1 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x000000000008b3f2 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x000000000001f5b2 : mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f58d
0x000000000001f8f9 : mov eax, 0xffffffff ; cmovge eax, edx ; jmp 0x1f90d
0x0000000000074451 : mov eax, 0xffffffff ; ja 0x74468 ; ret
0x00000000001244d0 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x0000000000071f51 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x00000000000b509f : mov eax, 0xffffffff ; pop rbx ; pop r14 ; ret
0x0000000000039a1e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007181c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033c9e : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003521f : mov eax, 0xffffffff ; ret
0x00000000000fdf8f : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000172180 : mov eax, 1 ; jg 0x172199 ; neg eax ; ret
0x00000000000aab40 : mov eax, 1 ; jg 0xaab52 ; neg eax ; ret
0x00000000001700d6 : mov eax, 1 ; jl 0x1700e9 ; neg eax ; ret
0x000000000013bb82 : mov eax, 1 ; jne 0x13bb97 ; ret
0x000000000013bbc2 : mov eax, 1 ; jne 0x13bbd7 ; ret
0x00000000000cc522 : mov eax, 1 ; js 0xcc538 ; ret
0x000000000004909f : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x00000000000490bd : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000071f3d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x0000000000073f8b : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e5c0 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000105ab5 : mov eax, 1 ; pop rbx ; ret
0x0000000000047083 : mov eax, 1 ; ret
0x00000000000aae61 : mov eax, 2 ; ret
0x0000000000115326 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000aae71 : mov eax, 3 ; ret
0x0000000000122a03 : mov eax, 3 ; syscall ; ret
0x000000000010600f : mov eax, 4 ; pop rbx ; pop rbp ; ret
0x00000000000aae81 : mov eax, 4 ; ret
0x00000000000f036c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000aae91 : mov eax, 5 ; ret
0x00000000000aaea1 : mov eax, 6 ; ret
0x0000000000112afc : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000aaeb1 : mov eax, 7 ; ret
0x00000000000a9b48 : mov eax, 8 ; pop rbx ; ret
0x00000000000f6027 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033c16 : mov eax, dword ptr [r10 + r8*4] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x0000000000142f58 : mov eax, dword ptr [rax + 0x100] ; jmp rax
0x00000000001096d0 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000733cc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000109480 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000012b7b7 : mov eax, dword ptr [rax + 0x18] ; jmp r8
0x000000000007bf0c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000128867 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128877 ; ret
0x00000000000fd548 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfd55b ; ret
0x0000000000073632 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007347a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000114520 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000514fd : mov eax, dword ptr [rax + 0x38] ; mov rdx, r15 ; mov rdi, rbx ; call rax
0x0000000000109e47 : mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000105c1c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007c3e8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000134634 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002e556 : mov eax, dword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2] ; and eax, esi ; ret
0x0000000000070c5f : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000070f21 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x000000000002e386 : mov eax, dword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000763b4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000134ed4 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002e366 : mov eax, dword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003a516 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002d3de : mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000105ed1 : mov eax, dword ptr [rax + 0xc0] ; ret
0x0000000000142e6f : mov eax, dword ptr [rax + 0xe0] ; jmp rax
0x000000000013a165 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000105eaa : mov eax, dword ptr [rax + 8] ; ret
0x000000000011505c : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x115029 ; leave ; ret
0x000000000008975b : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x89759 ; ret
0x000000000002b70f : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x2b721 ; call rax
0x000000000002e369 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002de83 : mov eax, dword ptr [rax + rdi*8] ; ret
0x000000000000ef78 : mov eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x38
0x000000000013a15a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002d3dc : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002e383 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e363 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002de80 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + rdi*8] ; ret
0x000000000002e33c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a513 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000128af9 : mov eax, dword ptr [rax] ; ret
0x000000000007edf0 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7ee00 ; call rax
0x0000000000085806 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x85816 ; call rax
0x00000000000d1c84 : mov eax, dword ptr [rbp - 0x28d8] ; xor edx, edx ; jmp 0xd1c59
0x000000000010327c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000c785b : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000022aee : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000078901 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000001fcf5 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e7a1 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000cacc8 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xcacda ; call rax
0x000000000011449d : mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001378aa : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1378c0 ; pop rbx ; ret
0x0000000000137916 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1378d4 ; pop rbx ; ret
0x00000000000a1c59 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166586 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166596 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a1cdd : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a1cfd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000014653a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000147e12 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000016a880 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x00000000001319e0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a1c05 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016a7d1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001664a1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016a851 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a1bd6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000007429f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007d600 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007d628 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000114ce0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x114cf8 ; ret
0x000000000013b8f3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013b471 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d8fe : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000c7201 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000aaac0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xaab48 ; ret
0x00000000000aaad5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xaab48 ; ret
0x000000000012d977 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013b870 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000078941 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000aaae0 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xaab48 ; ret
0x00000000000aaafb : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xaab48 ; ret
0x00000000000aab10 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xaab48 ; ret
0x00000000000aab25 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xaab48 ; ret
0x00000000000aab30 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xaab48 ; ret
0x000000000012d9af : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000078831 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000763b1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d5990 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007d8d1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000076f08 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x76f20 ; ret
0x00000000000f6220 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fc470 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013a919 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6d1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b239 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013b249 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013a161 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013a156 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000138079 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a241 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c4d7 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ab4dd : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xab4b9 ; ret
0x000000000002dec8 : mov eax, dword ptr [rdi + rax] ; ret
0x00000000000da8c0 : mov eax, dword ptr [rdi + rdi*2] ; fadd qword ptr [rcx + 0x39] ; ret 0x8941
0x00000000000788a0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000078870 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000134fc0 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007d5f1 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000114cf5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c7310 : mov eax, dword ptr [rdi] ; ret
0x0000000000078fb0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000078fc0 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000132694 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1326a6 ; ret
0x0000000000132693 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1326a7 ; ret
0x0000000000138854 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x138866 ; ret
0x0000000000138853 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x138867 ; ret
0x00000000000ab5a4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xab5a0 ; xor eax, eax ; ret
0x00000000000cae65 : mov eax, dword ptr [rdx + 0x18] ; test rax, rax ; je 0xcae7b ; call rax
0x0000000000033c17 : mov eax, dword ptr [rdx + rax*4] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000002e2f7 : mov eax, dword ptr [rdx + rax*4] ; ret
0x00000000000a9c57 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xa9c49 ; ret
0x0000000000091c26 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000011f972 : mov eax, dword ptr [rdx + rax*8 + 4] ; ret
0x000000000012dde8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000010a5a8 : mov eax, dword ptr [rdx + rax] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002d3a1 : mov eax, dword ptr [rdx + rdi*8] ; ret
0x0000000000075a80 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e6e58 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000073577 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007199c : mov eax, dword ptr [rdx] ; ret
0x000000000007d5e1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7d5e0 ; ret
0x00000000001406c1 : mov eax, dword ptr [rip + 0x2823b9] ; jmp rax
0x0000000000140670 : mov eax, dword ptr [rip + 0x282402] ; pop rbp ; pop r12 ; jmp rax
0x0000000000140610 : mov eax, dword ptr [rip + 0x28245a] ; pop rbp ; pop r12 ; jmp rax
0x0000000000140734 : mov eax, dword ptr [rip + 0x284db6] ; call qword ptr [rax]
0x0000000000140137 : mov eax, dword ptr [rip + 0x2853b3] ; call qword ptr [rax]
0x0000000000121469 : mov eax, dword ptr [rip + 0x2a4541] ; ret
0x0000000000109e41 : mov eax, dword ptr [rip + 0x2ba019] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008447f : mov eax, dword ptr [rip + 0x33fa4b] ; mov qword ptr [rax], rdi ; ret
0x0000000000082c22 : mov eax, dword ptr [rip + 0x341190] ; xor edi, edi ; call qword ptr [rax]
0x0000000000082915 : mov eax, dword ptr [rip + 0x34149d] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007d8b1 : mov eax, dword ptr [rip + 0x347d49] ; ret
0x00000000000366d0 : mov eax, dword ptr [rip + 0x38d9b2] ; ret
0x00000000000366c0 : mov eax, dword ptr [rip + 0x38d9c6] ; ret
0x000000000002de2c : mov eax, dword ptr [rip + 0x395fa6] ; mov qword ptr [rax], rdx ; ret
0x000000000002a491 : mov eax, dword ptr [rip + 0x39b5a1] ; ret
0x0000000000022201 : mov eax, dword ptr [rip + 0x3a7641] ; ret
0x00000000000221f1 : mov eax, dword ptr [rip + 0x3a7661] ; ret
0x000000000002e521 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e531 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000124935 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdi + 0x10], rax ; xor eax, eax ; ret
0x000000000002d3bd : mov eax, dword ptr [rsi + rax*8] ; ret
0x00000000000734b7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000c7c01 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000020a3a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000013d956 : mov eax, dword ptr [rsp + 0x18] ; jmp 0x13d924
0x00000000000f05c7 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0609
0x00000000000266a4 : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000024aaa : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038e68 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003566b : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fc8c9 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014311e : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000b8c64 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ade9 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000c74c8 : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000000fdf40 : mov eax, dword ptr [rsp - 0x50] ; ret
0x0000000000132da8 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000109ea3 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000109f04 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000120977 : mov eax, dword ptr [rsp] ; call rax
0x00000000000aced1 : mov eax, eax ; jmp 0xaccc9
0x00000000001246dc : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000021851 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000fc63d : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000051f30 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000c6eb4 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084e73 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039f0f : mov eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004f75a : mov eax, eax ; ret
0x000000000007a15a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000960c3 : mov eax, ebp ; jmp 0x95f23
0x000000000006fb8c : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000070409 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000703dc : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e7c3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f372 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000c6e6d : mov eax, ebp ; xor edx, edx ; jmp 0xc6e3a
0x0000000000047443 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001373d1 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094df7 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c79d5 : mov eax, ebx ; call rax
0x0000000000105a0f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002afe6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036833 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032462 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003a89f : mov eax, ebx ; pop rbx ; ret
0x000000000010205a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000047307 : mov eax, ecx ; adc eax, eax ; ret
0x000000000010e762 : mov eax, ecx ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a47c : mov eax, ecx ; or rax, rdx ; ret
0x0000000000087bdd : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002eb10 : mov eax, ecx ; pop rbp ; pop r12 ; ret
0x000000000005a2d1 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033c2f : mov eax, ecx ; pop rbx ; ret
0x0000000000033c39 : mov eax, ecx ; ret
0x0000000000044a62 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000116061 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002e390 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000119126 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000119100 : mov eax, edi ; bswap eax ; ret
0x000000000004960e : mov eax, edi ; cmovae rax, rsi ; ret
0x000000000003a491 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000009efa7 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000219bb : mov eax, edi ; neg eax ; ret
0x00000000000ab61b : mov eax, edi ; nop dword ptr [rax] ; ret
0x000000000010a920 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x00000000000ff04c : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000000219ce : mov eax, edi ; ret
0x0000000000119110 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003a422 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000118dca : mov eax, edi ; sar rax, 6 ; ret
0x00000000001191a6 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000ba578 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fde47 : mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000083262 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bea1c : mov eax, edx ; add rsp, 8 ; ret
0x00000000001106cc : mov eax, edx ; cmove eax, ecx ; ret
0x00000000000978d6 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x000000000006f94a : mov eax, edx ; je 0x6f99d ; pop rbx ; ret
0x000000000007848a : mov eax, edx ; je 0x784dd ; pop rbx ; ret
0x00000000000cbacb : mov eax, edx ; jle 0xcbadd ; ret
0x000000000003d983 : mov eax, edx ; mov edx, eax ; jmp 0x3d94e
0x00000000000e7005 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f4da : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000053eea : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036784 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003691a : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000480e5 : mov eax, edx ; pop rbx ; ret
0x0000000000120712 : mov eax, edx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000022045 : mov eax, edx ; ret
0x0000000000034d31 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000c8095 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000830db : mov eax, esi ; mov byte ptr [rsi + rbx], cl ; pop rbx ; ret
0x0000000000035147 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006cbb3 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000116a9e : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070dfe : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ca5b : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006cd84 : mov eax, esi ; pop rbx ; ret
0x0000000000049744 : mov eax, esi ; ret
0x000000000017234b : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000007d194 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d872 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d193 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000072bb2 : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f0205 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001246db : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000fc63c : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000051f2f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000fc705 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004f759 : mov eax, r8d ; ret
0x000000000013fd97 : mov eax, r9d ; ret
0x00000000001a85ad : mov ebp, 0x19d00000 ; cli ; jmp qword ptr [rdi]
0x00000000001a85c5 : mov ebp, 0x1ae80000 ; cli ; call qword ptr [rdi]
0x00000000000fe659 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009f691 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f6a1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f681 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000be27f : mov ebp, 0x48ffffcf ; add esp, 0x18 ; ret
0x000000000003bd83 : mov ebp, 0x4cfe894c ; mov edi, edi ; call 0x47fd9
0x00000000001280f5 : mov ebp, 0x89480029 ; ret 0x1be
0x000000000013bc33 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000019c815 : mov ebp, 0xc0740001 ; std ; jmp rsp
0x00000000001812fd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000198645 : mov ebp, 0xcb340000 ; in eax, dx ; call rsp
0x000000000009f701 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f6e1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f6c1 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000009f7b2 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008d428 : mov ebp, 0xf80148c0 ; ret
0x000000000008d6ac : mov ebp, 0xf80148c6 ; ret
0x00000000001833e6 : mov ebp, 0xfb67d10d ; ret
0x000000000005545e : mov ebp, 0xffffef7b ; add byte ptr [rcx - 0x77], cl ; ret 0x3775
0x000000000004b3d8 : mov ebp, 0xfffffa94 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xbd83
0x000000000004d816 : mov ebp, 0xfffffa98 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xbd83
0x000000000004a0de : mov ebp, 0xfffffb4b ; add byte ptr [rcx - 0x77], cl ; ret 0x3775
0x00000000000cdd00 : mov ebp, 0xfffffbd0 ; call r14
0x00000000000cf2b4 : mov ebp, 0xfffffe28 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x000000000012561b : mov ebp, 0xffffff3c ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x000000000012e680 : mov ebp, cs ; cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000007d7bb : mov ebp, dword ptr [rbx + 8] ; jmp 0x7d787
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000102907 : mov ebp, eax ; call rax
0x0000000000066177 : mov ebp, eax ; jmp 0x66140
0x0000000000137bd9 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x137bed
0x0000000000067032 : mov ebp, eax ; xor edx, edx ; jmp 0x6329b
0x000000000003514d : mov ebp, ecx ; nop ; jmp rdx
0x00000000000dee47 : mov ebp, edi ; add rax, rdx ; jmp rax
0x000000000006f3e4 : mov ebp, edi ; push rbx ; mov rbx, rsi ; call 0x8b6d8
0x00000000000adb8b : mov ebp, edi ; setne dl ; jmp 0xadba4
0x00000000000b03ac : mov ebp, edi ; setne dl ; jmp 0xb03c4
0x00000000000b2a84 : mov ebp, edi ; setne dl ; jmp 0xb2a9c
0x00000000001036cf : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000007e6ad : mov ebp, edx ; call qword ptr [r15]
0x000000000012a72d : mov ebp, esp ; call r15
0x00000000001154c4 : mov ebp, esp ; pop rbp ; ret
0x000000000019b3ac : mov ebp, ss ; add dword ptr [rax], eax ; xor al, 0x3d ; clc ; call rsp
0x00000000001738da : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x00000000001a83cd : mov ebx, 0x83f00000 ; sti ; call qword ptr [rax]
0x0000000000061cdd : mov ebx, 0x89000000 ; ret 0x8b48
0x00000000000d4573 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001a83fd : mov ebx, 0xa5100000 ; sti ; call qword ptr [rax]
0x0000000000114c44 : mov ebx, 0xafb8341 ; je 0x114c53 ; ret
0x00000000001985f5 : mov ebx, 0xbdb40000 ; in eax, dx ; jmp rsp
0x00000000001812fb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000001318b6 : mov ebx, 0xc8 ; call rax
0x000000000019c55d : mov ebx, 0xc8040001 ; cli ; jmp rsp
0x0000000000066f2d : mov ebx, 2 ; jmp 0x631e7
0x0000000000088890 : mov ebx, 2 ; jmp 0x88860
0x00000000000e9e41 : mov ebx, dword ptr [rax] ; cli ; dec dword ptr [rax + 1] ; ret
0x000000000017324f : mov ebx, dword ptr [rdi + 0x10] ; call 0x1f4c5
0x0000000000173299 : mov ebx, dword ptr [rdi] ; call 0x1f4c4
0x000000000002ae45 : mov ebx, dword ptr [rdi] ; je 0x2ae59 ; test esi, esi ; je 0x2ae59 ; pop rbx ; ret
0x00000000000b5d23 : mov ebx, dword ptr [rsp + 0x44] ; jmp 0xb5cf1
0x000000000012d536 : mov ebx, dword ptr [rsp + 8] ; call rbx
0x000000000011d96e : mov ebx, eax ; call 0x129c24
0x00000000001036d6 : mov ebx, eax ; call rax
0x000000000012e2fb : mov ebx, eax ; jne 0x12e299 ; xor eax, eax ; pop rbx ; ret
0x00000000000fcc1f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000371a7 : mov ebx, eax ; mov rdi, r12 ; call r15
0x000000000002cbf6 : mov ebx, edi ; test rax, rax ; je 0x2cc06 ; call rax
0x000000000006f3e8 : mov ebx, esi ; call 0x8b6d4
0x0000000000187d79 : mov ebx, esi ; inc edx ; outsb dx, byte ptr [rsi] ; jmp rsp
0x00000000000dee44 : mov ebx, esi ; mov rbp, rdi ; add rax, rdx ; jmp rax
0x00000000001a9c34 : mov ebx, ss ; add byte ptr [rax], al ; call 0x121a8d4d
0x000000000019b374 : mov ebx, ss ; add dword ptr [rax], eax ; mov ah, 0x33 ; clc ; call rsp
0x00000000000090d9 : mov ecx, 0x13 ; add byte ptr [rax], al ; ret
0x00000000001a8235 : mov ecx, 0x7d180000 ; out dx, eax ; call qword ptr [rdi]
0x00000000000d76e3 : mov ecx, 0x83000005 ; ret 0x3902
0x0000000000138564 : mov ecx, 0x83640028 ; cmp byte ptr [rax], bl ; je 0x138579 ; ret
0x00000000001985a5 : mov ecx, 0xb6340000 ; in eax, dx ; call rsp
0x00000000001812f9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000003154 : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000019b1ec : mov ecx, cs ; add dword ptr [rax], eax ; adc al, 0xb ; clc ; jmp rsp
0x000000000002bbf8 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2bc0a ; call rcx
0x00000000000f4704 : mov ecx, dword ptr [rax] ; jmp 0xf468a
0x0000000000135270 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x000000000013b5c0 : mov ecx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp ecx, edx ; jae 0x13b5d9 ; ret
0x000000000013b600 : mov ecx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp ecx, edx ; jae 0x13b619 ; ret
0x0000000000046be6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000015086e : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000007638b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000000ba3fc : mov ecx, dword ptr [rdx + rax*8] ; jmp 0xba3b6
0x0000000000091c23 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000ab4c9 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xab4c7 ; ret
0x0000000000046f66 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000152be3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152de3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fe3 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a4eb0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a4ef1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015b003 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015af93 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015af23 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015ae45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015add5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ad65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015acf5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ac85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ac15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015aba5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b0e5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a4e91 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000131da2 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000001374ce : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000131bad : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x0000000000061f2b : mov ecx, eax ; jmp 0x61d7c
0x0000000000061ec2 : mov ecx, eax ; jmp 0x61dc1
0x0000000000032bfd : mov ecx, eax ; jne 0x32ba8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012d958 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000009f2d6 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012ab51 : mov ecx, ebp ; call rbx
0x000000000011d969 : mov ecx, ebp ; mov rdi, r12 ; mov ebx, eax ; call 0x129c29
0x00000000000766d0 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call r12
0x00000000000ac54a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000002c5b1 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009efbe : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000ac2a5 : mov ecx, edi ; call rbx
0x000000000009f2c4 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x00000000000c4024 : mov ecx, edi ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000ff36e : mov ecx, edx ; jne 0xff361 ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000014d4c1 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014d4c4 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007c6f7 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000c4088 : mov ecx, esi ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000001ab234 : mov ecx, gs ; add byte ptr [rax], al ; test al, 0xf7 ; int1 ; jmp qword ptr [rcx]
0x0000000000109220 : mov edi, 0x1b ; call 0x35527
0x000000000010ea84 : mov edi, 0x2000004 ; call rax
0x0000000000105940 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000001a5a44 : mov edi, 0x380e0a01 ; ret
0x00000000000e3163 : mov edi, 0x3c8 ; call 0x1f467
0x0000000000186098 : mov edi, 0x62ffed61 ; ret
0x00000000000c9934 : mov edi, 0x8948002f ; ret 0x8d48
0x0000000000034f22 : mov edi, 0x89f02444 ; ret 0xe281
0x00000000000dd077 : mov edi, 0xb8743b45 ; add al, 0x7f ; mov cl, 0x39 ; ret 0xc189
0x000000000006f1fa : mov edi, 0xe0 ; call rax
0x000000000006f1ce : mov edi, 0xe0 ; jmp rax
0x0000000000073229 : mov edi, dword ptr [rax + 0x10] ; call 0x1f4c5
0x00000000000b9cb7 : mov edi, dword ptr [rax] ; call r14
0x0000000000102e13 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000001731ba : mov edi, dword ptr [rbp + 0x20] ; call 0x1f4c5
0x00000000000cdcff : mov edi, dword ptr [rbp - 0x430] ; call r14
0x00000000000c78e5 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000000ebda7 : mov edi, dword ptr [rbp - 0x78] ; call r14
0x00000000001731cb : mov edi, dword ptr [rbp] ; call 0x1f4c5
0x00000000000ab9c5 : mov edi, dword ptr [rbp] ; call r12
0x0000000000038ded : mov edi, dword ptr [rbp] ; call r14
0x0000000000102a6a : mov edi, dword ptr [rbp] ; call rbx
0x00000000001202dd : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x1202d9 ; pop rbx ; ret
0x000000000006326d : mov edi, dword ptr [rbx] ; call 0x1f4c4
0x0000000000132691 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x1326a9 ; ret
0x0000000000138851 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x138869 ; ret
0x0000000000046bea : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006f1f9 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006f1cd : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000102a18 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000074418 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x743e4
0x0000000000112e84 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001836a6 : mov edi, dword ptr [rdx] ; ret
0x00000000001029d7 : mov edi, dword ptr [rsi] ; call rbx
0x000000000013327c : mov edi, dword ptr [rsi] ; test rdi, rdi ; je 0x133291 ; call 0x1f4c9
0x00000000000baed5 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x0000000000102ef7 : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000c7bfc : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000025488 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024793 : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000024579 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000024aa5 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000025cd0 : mov edi, dword ptr [rsp + 0x28] ; call r15
0x0000000000025a81 : mov edi, dword ptr [rsp + 0x28] ; call rbx
0x0000000000024f35 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000024fe9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000262d1 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x000000000002669f : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000027418 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000de42e : mov edi, dword ptr [rsp + 0x50] ; call 0xda726
0x00000000000baac1 : mov edi, dword ptr [rsp + 0x68] ; call r15
0x000000000012d552 : mov edi, dword ptr [rsp + 0x68] ; call rax
0x0000000000102e60 : mov edi, dword ptr [rsp] ; call rbx
0x0000000000133251 : mov edi, eax ; call 0x1f464
0x0000000000123159 : mov edi, eax ; call 0x8f364
0x00000000000f810d : mov edi, eax ; call 0x943f4
0x00000000001364a4 : mov edi, eax ; call qword ptr [r10]
0x00000000000ed535 : mov edi, eax ; call r14
0x0000000000136596 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00000000001363a7 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000004973d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x49731 ; mov rax, rsi ; ret
0x00000000001723bc : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000062bd9 : mov edi, ebp ; call 0x1f4c8
0x00000000000ed792 : mov edi, ebp ; call 0x89a54
0x00000000000fb871 : mov edi, ebp ; call 0xf7b04
0x000000000012e39e : mov edi, ebp ; call qword ptr [rbx]
0x00000000001204be : mov edi, ebp ; call r12
0x000000000003902c : mov edi, ebp ; call r14
0x00000000000371e7 : mov edi, ebp ; call r15
0x000000000006d835 : mov edi, ebp ; call r8
0x0000000000085e91 : mov edi, ebp ; call rax
0x00000000000ac42f : mov edi, ebp ; call rbx
0x0000000000085236 : mov edi, ebp ; call rcx
0x000000000012de78 : mov edi, ebp ; call rdx
0x000000000012cad5 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013ab65 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000022aeb : mov edi, ebp ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000131d9f : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131baa : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012ab4e : mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000037754 : mov edi, ebp ; mov rdx, rbp ; call r15
0x000000000007e6c2 : mov edi, ebp ; neg rdi ; call qword ptr [r15]
0x0000000000119035 : mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000832a2 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d77d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000082a45 : mov edi, ebx ; call qword ptr [r15]
0x000000000008291c : mov edi, ebx ; call qword ptr [rax]
0x000000000002a447 : mov edi, ebx ; call r12
0x0000000000022399 : mov edi, ebx ; call r14
0x0000000000051504 : mov edi, ebx ; call rax
0x00000000001730cb : mov edi, ebx ; jne 0x1730c0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a629 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a72a : mov edi, ebx ; mov r13, rsp ; call r15
0x0000000000142a1b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000088276 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007362e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000073476 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000139fc0 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000000861d4 : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000173258 : mov edi, ebx ; test rdi, rdi ; jne 0x173252 ; pop rbx ; ret
0x000000000013368a : mov edi, ecx ; jmp r8
0x00000000000893f8 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x000000000012b7b4 : mov edi, ecx ; mov r8, qword ptr [rax + 0x18] ; jmp r8
0x000000000013326b : mov edi, edi ; call 0x1f4c4
0x000000000003bd88 : mov edi, edi ; call 0x47fd4
0x0000000000057152 : mov edi, edi ; call 0x733a4
0x0000000000138080 : mov edi, edi ; call qword ptr [rax]
0x0000000000139f1e : mov edi, edi ; call r14
0x0000000000087fd6 : mov edi, edi ; call rax
0x0000000000103764 : mov edi, edi ; call rbx
0x000000000006af2d : mov edi, edi ; dec dword ptr [rax - 0x7d] ; ror byte ptr [rax], 0xeb ; ret
0x000000000013770f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000000c74c5 : mov edi, edi ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000010aacc : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000766d3 : mov edi, edi ; xor r8d, r8d ; call r12
0x000000000018b745 : mov edi, edx ; inc dword ptr [rax] ; mov edi, edx ; jmp qword ptr [rax]
0x000000000018b749 : mov edi, edx ; jmp qword ptr [rax]
0x0000000000114cf8 : mov edi, edx ; jmp rax
0x00000000000497c1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x497a9 ; mov rax, rsi ; ret
0x0000000000133297 : mov edi, esi ; call 0x1f4c4
0x000000000012d2c8 : mov edi, esi ; call rax
0x0000000000103744 : mov edi, esi ; call rbx
0x000000000012c9e6 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000103279 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000111c81 : mov edi, esp ; call 0x10df54
0x0000000000112319 : mov edi, esp ; call 0x10e524
0x0000000000133166 : mov edi, esp ; call 0x1f444
0x00000000000731fc : mov edi, esp ; call 0x1f464
0x0000000000197251 : mov edi, esp ; call qword ptr [rax + 0x10fffc8a]
0x000000000013accf : mov edi, esp ; call qword ptr [rax]
0x00000000000371aa : mov edi, esp ; call r15
0x000000000002f390 : mov edi, esp ; call rax
0x00000000000ac15d : mov edi, esp ; call rbx
0x000000000013a031 : mov edi, esp ; call rdx
0x000000000019744d : mov edi, esp ; jmp qword ptr [rax + 0x20fffc8a]
0x0000000000197449 : mov edi, esp ; jmp qword ptr [rax]
0x00000000001972cd : mov edi, esp ; jmp rdx
0x000000000011d96c : mov edi, esp ; mov ebx, eax ; call 0x129c26
0x00000000000ac2a2 : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000120974 : mov edi, esp ; mov rax, qword ptr [rsp] ; call rax
0x000000000013526d : mov edi, esp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x0000000000088e16 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000000ca73c : mov edx, 0 ; cmove rax, rdx ; ret
0x000000000001fc64 : mov edx, 0 ; cmovne eax, edx ; ret
0x000000000012412a : mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000012410c : mov edx, 0x107 ; cmove eax, edx ; ret
0x0000000000079546 : mov edx, 0x130 ; pop rbx ; ret
0x00000000000686f8 : mov edx, 0x83000000 ; ret 0x8308
0x00000000000e686e : mov edx, 0x83388840 ; ret 0x4801
0x0000000000182b5e : mov edx, 0xcac982a4 ; call 0xffffffffaedac9de
0x00000000000242b7 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000010cba8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000003a4df : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000013abb3 : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013ab67 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001127ce : mov edx, 5 ; xor edi, edi ; call 0x2ea89
0x0000000000022040 : mov edx, 8 ; mov eax, edx ; ret
0x00000000000788d5 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000ac9c8 : mov edx, dword ptr [rax] ; cmp edx, esi ; jne 0xac9c7 ; ret
0x0000000000073398 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020a37 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000113af1 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113840 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000114046 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000075652 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001183cf : mov edx, dword ptr [rbx] ; jmp 0x118398
0x0000000000147e0f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000014653d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000114f3a : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0x114f38 ; leave ; ret
0x00000000000caee5 : mov edx, dword ptr [rdi + 0x10] ; test rdx, rdx ; je 0xcaefb ; call rdx
0x0000000000172f63 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x172f7a ; call rdx
0x00000000000768ea : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000114cf1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000360b6 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000002e324 : mov edx, dword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000002e2f4 : mov edx, dword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x0000000000089805 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x89809 ; ret
0x0000000000172e50 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x172e62 ; call rdx
0x00000000001142be : mov edx, dword ptr [rsi + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000a4ed2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a4ec3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a4f13 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b9f01 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xb9ed6 ; ret
0x00000000000a4f23 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000152621 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001529e0 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152271 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a64a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a72d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a4ea0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a8d40 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a64f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7321 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a4ee1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a6481 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a72a1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a4e81 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000003c7f0 : mov edx, dword ptr [rsp + 0x18] ; add rax, rax ; sub rdx, rax ; jmp 0x3c828
0x000000000003f6f5 : mov edx, dword ptr [rsp + 0x18] ; add rax, rax ; sub rdx, rax ; jmp 0x3f730
0x000000000010e97e : mov edx, dword ptr [rsp + 0x18] ; call rax
0x000000000010ea80 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x00000000000421c5 : mov edx, dword ptr [rsp + 0x20] ; add rax, rax ; sub rdx, rax ; jmp 0x42200
0x0000000000112709 : mov edx, dword ptr [rsp + 0x38] ; jmp 0x1126d7
0x0000000000084c11 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x00000000001057cf : mov edx, eax ; jmp 0x1057fd
0x0000000000105878 : mov edx, eax ; jmp 0x1058a7
0x0000000000134447 : mov edx, eax ; jmp 0x13440b
0x000000000003d985 : mov edx, eax ; jmp 0x3d94c
0x000000000004d220 : mov edx, eax ; jmp 0x4d240
0x000000000004d3fa : mov edx, eax ; jmp 0x4d41a
0x00000000000698c1 : mov edx, eax ; jmp 0x6986a
0x000000000007241a : mov edx, eax ; jmp 0x723c0
0x00000000000725bf : mov edx, eax ; jmp 0x72562
0x0000000000072758 : mov edx, eax ; jmp 0x726f9
0x0000000000077013 : mov edx, eax ; jmp 0x76fb7
0x0000000000077983 : mov edx, eax ; jmp 0x77927
0x000000000007919b : mov edx, eax ; jmp 0x79138
0x00000000000ad3f7 : mov edx, eax ; jmp 0xad3c1
0x00000000000afc57 : mov edx, eax ; jmp 0xafc21
0x00000000000b2317 : mov edx, eax ; jmp 0xb22e1
0x00000000000ce472 : mov edx, eax ; jmp 0xce411
0x00000000000db03c : mov edx, eax ; jmp 0xdb01a
0x00000000000e30e8 : mov edx, eax ; jmp 0xe3083
0x00000000000e355a : mov edx, eax ; jmp 0xe34f3
0x00000000000f05cc : mov edx, eax ; jmp 0xf0604
0x00000000000fe5ec : mov edx, eax ; jmp 0xfe580
0x00000000000714cb : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000143436 : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000037757 : mov edx, ebp ; call r15
0x0000000000113a57 : mov edx, ebp ; call rax
0x000000000005bc12 : mov edx, ebp ; jmp 0x5bbbc
0x00000000000371e1 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000012f48b : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088ab7 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088e19 : mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000000371fc : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000113b64 : mov edx, ebx ; call rax
0x0000000000173587 : mov edx, ebx ; jne 0x17357e ; pop rbx ; ret
0x000000000012f375 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088279 : mov edx, edi ; call rax
0x000000000019c2b1 : mov edx, edi ; jmp rsp
0x0000000000051501 : mov edx, edi ; mov rdi, rbx ; call rax
0x000000000011d63f : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000addfa : mov edx, edx ; add rax, rax ; sub rdx, rax ; jmp 0xade2a
0x00000000000b0634 : mov edx, edx ; add rax, rax ; sub rdx, rax ; jmp 0xb0662
0x00000000000b2d04 : mov edx, edx ; add rax, rax ; sub rdx, rax ; jmp 0xb2d32
0x0000000000113af8 : mov edx, esi ; call rax
0x000000000006353e : mov edx, esi ; mov rsi, qword ptr [rip + 0x360a19] ; call rax
0x0000000000113847 : mov edx, esp ; call rax
0x0000000000087fd3 : mov edx, esp ; mov rdi, r15 ; call rax
0x0000000000069e62 : mov es, word ptr [rax + rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000012cef5 : mov es, word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d1d73 : mov es, word ptr [rip - 0x7cfffffc] ; ret 0x4201
0x0000000000103c46 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000000a70ee : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000ab39e : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000241f1 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000196970 : mov esi, 0x64fffc3a ; cld ; jmp rsp
0x000000000009f1f5 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x000000000004f753 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000128ce2 : mov esi, 0x83480143 ; ret
0x00000000000454a9 : mov esi, 0x83480152 ; ret
0x000000000005f136 : mov esi, 0x8348ffff ; ret 0xeb08
0x000000000009f10e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000000f2239 : mov esi, 0x89010344 ; ret 0xe883
0x0000000000119b0c : mov esi, 0x8948002a ; ret 0x8b48
0x0000000000111996 : mov esi, 0x89482404 ; ret 0xe883
0x0000000000087bb5 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000087539 : mov esi, 0x8948ffff ; ret 0x3d83
0x000000000008d7df : mov esi, 0x8c48348 ; ret
0x000000000009f24d : mov esi, 0xc0844507 ; jne 0x9f239 ; xor eax, eax ; ret
0x00000000001812fe : mov esi, 0xc2c1c0bf ; ret
0x000000000010e790 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f0b5 : mov esi, 0xc984070c ; jne 0x9f0b0 ; ret
0x000000000009f145 : mov esi, 0xca390714 ; je 0x9f148 ; ret
0x000000000019868d : mov esi, 0xcf640000 ; in eax, dx ; jmp rsp
0x000000000009f071 : mov esi, 0xd2840714 ; jne 0x9f070 ; ret
0x00000000001730be : mov esi, 0xe800252b ; stc ; ret
0x00000000000a9a44 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000002bd5 : mov esi, 0xf8cbeb8f ; ret
0x000000000011d736 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000103786 : mov esi, 1 ; call rbx
0x0000000000103973 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000010383f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000001037b7 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x000000000006d82f : mov esi, 1 ; mov rdi, rbp ; call r8
0x0000000000103bfd : mov esi, 1 ; mov rdi, rbp ; call rbx
0x0000000000102951 : mov esi, 2 ; jmp rax
0x0000000000103bf1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000103964 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000103830 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000001037a8 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000010296b : mov esi, 3 ; jmp rax
0x000000000010416c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000001041c3 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000104243 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104343 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x00000000000c78e1 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000e3fae : mov esi, dword ptr [rbx + 8] ; mov byte ptr [rsi + rcx], al ; jmp 0xe3f7f
0x0000000000038dea : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063541 : mov esi, dword ptr [rip + 0x360a19] ; call rax
0x000000000005a8d7 : mov esi, dword ptr [rip + 0x369683] ; call rax
0x000000000005a363 : mov esi, dword ptr [rip + 0x369bf7] ; call rax
0x00000000000551cf : mov esi, dword ptr [rip + 0x36ed8b] ; call rax
0x000000000004f2db : mov esi, dword ptr [rip + 0x374c7f] ; call rax
0x0000000000049e7f : mov esi, dword ptr [rip + 0x37a0db] ; call rax
0x0000000000046f6a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000db034 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xdb019 ; mov edx, eax ; jmp 0xdb022
0x000000000014d3a9 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012c048 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000381fe : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000085231 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rcx
0x0000000000025a7c : mov esi, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000024fe4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000084941 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x00000000000262cc : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000001204b9 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000096a9a : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x96ab5 ; jmp 0x96a6f
0x000000000011dfb7 : mov esi, eax ; jmp 0x11df80
0x000000000014291f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000077ea2 : mov esi, ebp ; call 0x49c29
0x00000000000ba8cd : mov esi, ebp ; call r12
0x0000000000088e1c : mov esi, ebp ; call rax
0x00000000000baed2 : mov esi, ebp ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x00000000000874b1 : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000141dda : mov esi, ebp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000de42b : mov esi, ebx ; mov rdi, qword ptr [rsp + 0x50] ; call 0xda729
0x00000000000371ff : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000013807d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000139f1b : mov esi, ebx ; mov rdi, r15 ; call r14
0x000000000013b68e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x0000000000039029 : mov esi, edi ; mov rdi, r13 ; call r14
0x000000000003bd85 : mov esi, edi ; mov rdi, r15 ; call 0x47fd7
0x000000000013240a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000013fb43 : mov esi, edx ; call 0x13bdb4
0x0000000000112e88 : mov esi, edx ; call rax
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000087b55 : mov esi, esi ; call rax
0x0000000000088aba : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000037751 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000013b7b8 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000085e8e : mov esi, esi ; mov rdi, rbp ; call rax
0x0000000000134f24 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000cc609 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000131904 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000013a245 : mov esi, esp ; call qword ptr [rax]
0x00000000000ebda4 : mov esi, esp ; mov rdi, qword ptr [rbp - 0x78] ; call r14
0x00000000000371bb : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000371e4 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000088cc1 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012ab4b : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012e7a5 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087dc3 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000012a727 : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000861d1 : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000e65f1 : mov esp, 0x12024 ; add byte ptr [rcx], al ; ret 0xc083
0x00000000001998f4 : mov esp, 0x1400013c ; xor al, 0xf3 ; call rsp
0x000000000019b64c : mov esp, 0x140001e9 ; leave ; clc ; call rsp
0x00000000001a4364 : mov esp, 0x1800007a ; in eax, dx ; call rbx
0x00000000000a5435 : mov esp, 0x1d8d4cd2 ; ret 0xe1e
0x000000000017384a : mov esp, 0x1f0fffea ; add bl, dh ; ret
0x000000000019b8fc : mov esp, 0x24000201 ; stc ; call rsp
0x0000000000197e04 : mov esp, 0x34000086 ; xor edx, ebp ; call rsp
0x00000000001985a4 : mov esp, 0x340000b9 ; mov dh, 0xed ; call rsp
0x00000000001991c4 : mov esp, 0x34000109 ; jnp 0x1991c2 ; call rsp
0x0000000000199ebc : mov esp, 0x34000169 ; cmc ; cmc ; call rsp
0x000000000019b43c : mov esp, 0x340001da ; push rsi ; clc ; jmp rsp
0x000000000008f7e7 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000138331 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x00000000000f742a : mov esp, 0x441f0f ; add dh, dh ; ret 0x7540
0x000000000008eae1 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb11 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb01 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001b2f64 : mov esp, 0x48000166 ; sbb dh, dh ; jmp qword ptr [rsi]
0x0000000000197b0c : mov esp, 0x64000077 ; fldl2t ; call rsp
0x0000000000198b8c : mov esp, 0x640000de ; movsxd rbp, esi ; call rsp
0x000000000019c5f4 : mov esp, 0x640000ff ; or ebx, edi ; call rsp
0x000000000019aae4 : mov esp, 0x640001a1 ; adc dh, bh ; call rsp
0x0000000000187c64 : mov esp, 0x76fff383 ; jne 0x187c65 ; jmp rdx
0x0000000000101108 : mov esp, 0x890008d0 ; ret 0x8948
0x0000000000100b08 : mov esp, 0x890008d6 ; ret 0x8948
0x0000000000085c2c : mov esp, 0x8948ffff ; ret 0x3d83
0x0000000000110e40 : mov esp, 0x8b000794 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000e0b44 : mov esp, 0x9024 ; add byte ptr [rax + 0x63], cl ; ret 0xf748
0x000000000019bbdc : mov esp, 0x94000215 ; scasd eax, dword ptr [rdi] ; stc ; call rsp
0x000000000019c74c : mov esp, 0xa4000110 ; lodsb al, byte ptr [rsi] ; std ; call rsp
0x00000000000d93bb : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000001982f4 : mov esp, 0xb40000a6 ; push rcx ; in eax, dx ; call rsp
0x000000000019a9a4 : mov esp, 0xb400019c ; add al, 0xf7 ; call rsp
0x0000000000196229 : mov esp, 0xbd90fffb ; sti ; call rax
0x000000000017c960 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000008f7d6 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000019c6bc : mov esp, 0xc400010d ; cmp al, 0xfc ; call rsp
0x00000000001a84bd : mov esp, 0xc6500000 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001ae664 : mov esp, 0xc800011d ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000001a84d5 : mov esp, 0xcc680000 ; out dx, eax ; call rsp
0x000000000008b87b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000019e564 : mov esp, 0xd800001c ; adc al, 0xe9 ; call qword ptr [rdx]
0x00000000001b1164 : mov esp, 0xe8000148 ; cmc ; jmp qword ptr [rcx]
0x000000000019c83c : mov esp, 0xf40001f4 ; ret 0xfffd
0x00000000001a851d : mov esp, 0xf4100000 ; out dx, eax ; jmp rbx
0x00000000001b2064 : mov esp, 0xf8000157 ; popfq ; cmc ; call rdi
0x000000000009655b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008eaf1 : mov esp, 0xf80148c0 ; ret
0x00000000000d8849 : mov esp, 1 ; jmp 0xd8818
0x0000000000137bdc : mov esp, dword ptr [rax] ; jmp 0x137bea
0x0000000000020637 : mov esp, eax ; call 0xa9a38
0x000000000003514a : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000019725d : mov esp, edi ; call qword ptr [rax]
0x000000000019745d : mov esp, edi ; jmp qword ptr [rax + 0x10fffc88]
0x0000000000197459 : mov esp, edi ; jmp qword ptr [rax]
0x00000000001972dd : mov esp, edi ; jmp rdx
0x0000000000102904 : mov esp, edx ; mov rbp, rax ; call rax
0x000000000007e6a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000198d44 : mov esp, gs ; add byte ptr [rax], al ; xchg eax, esp ; in eax, -0x12 ; call rsp
0x00000000001895ac : mov fs, word ptr [rsi - 0x5971000b] ; cmc ; jmp qword ptr [rax]
0x00000000000fe421 : mov gs, word ptr [rax + rax] ; ret
0x000000000011fc3e : mov gs, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x0000000000123154 : mov qword ptr [r13 + 8], rax ; mov rdi, rax ; call 0x8f369
0x00000000000e3283 : mov qword ptr [r15 + 0x18], rdx ; mov dword ptr [r15 + 0x38], eax ; jmp 0xe3259
0x0000000000094ce4 : mov qword ptr [r9 + 0x18], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a8b2 : mov qword ptr [r9 + r8*4], rdi ; call qword ptr [r10 + rax*8 - 0x40]
0x00000000001247b7 : mov qword ptr [r9], r10 ; ret
0x0000000000124853 : mov qword ptr [r9], rcx ; ret
0x0000000000124827 : mov qword ptr [r9], rdi ; ret
0x0000000000073018 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000073058 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074008 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000788d8 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000007301c : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000003a3dd : mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
0x00000000000740a6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007c839 : mov qword ptr [rax + 8], 0 ; ret
0x000000000006c82a : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000fcfd3 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000073574 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000071999 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084485 : mov qword ptr [rax], rdi ; ret
0x00000000000734b4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002de32 : mov qword ptr [rax], rdx ; ret
0x0000000000074320 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000055d5a : mov qword ptr [rbp - 0x1178], rcx ; jmp rax
0x000000000013f647 : mov qword ptr [rbp - 0x180], rax ; call 0xfb8b9
0x0000000000061a4a : mov qword ptr [rbp - 0x1f0], r14 ; jmp 0x61a1d
0x00000000001057ca : mov qword ptr [rbp - 0x58], rax ; mov rdx, rax ; jmp 0x105802
0x0000000000105873 : mov qword ptr [rbp - 0x58], rax ; mov rdx, rax ; jmp 0x1058ac
0x000000000004aa46 : mov qword ptr [rbp - 0x5b8], rcx ; jmp rax
0x00000000001141c5 : mov qword ptr [rbp - 0x70], rax ; call rcx
0x000000000006b7f4 : mov qword ptr [rbp - 0x78], rdx ; jmp 0x67afa
0x000000000002ae7d : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000000794e6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000142f45 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000799f8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000142efd : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000078014 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013b928 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007be72 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000897df : mov qword ptr [rbx + 0x20], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e712a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000078904 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000893fd : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000fc350 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007beda : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000793d6 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007c0fc : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000102691 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000143170 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001378e1 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x0000000000089345 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000893fa : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x0000000000131933 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002077c : mov qword ptr [rcx + 0x968], rax ; ret
0x00000000001685a3 : mov qword ptr [rcx + 5], rdx ; ret
0x00000000001685b3 : mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685c3 : mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685d3 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000471e6 : mov qword ptr [rcx + r10*8], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000076a73 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000168560 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168580 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168590 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x00000000001685a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x00000000001685b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x00000000001685c0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x00000000001685d0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168570 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168550 : mov qword ptr [rcx], rdx ; ret
0x00000000000f6b1a : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000047b4e : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000124938 : mov qword ptr [rdi + 0x10], rax ; xor eax, eax ; ret
0x00000000000a66bc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a750c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a504c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a502c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8f7c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a5d1f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a508f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a50af : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5070 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007be02 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000078ca6 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013b4b8 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000013b4e5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010e2b2 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10e285
0x0000000000134f9b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000094bd8 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000134f53 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007be32 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007f57a : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000035e98 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000f61dd : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a667c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a74cc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a4fec : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8f3c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a669c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a74ec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a500c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8f5c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015ae47 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015add7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015ad67 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015acf7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a657a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a73ba : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015ac87 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f3a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a8e2a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a659a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a73da : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015ac17 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f4a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a8e4a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a65ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a73fa : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015aba7 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a4f5a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a8e6a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff2e7 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000047303 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000047ad3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007be06 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003aa83 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000007900e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003aa74 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ff2d7 : mov qword ptr [rdi + 8], rsi ; ret
0x00000000000362c1 : mov qword ptr [rdi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000008f2f1 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000152104 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152142 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000047a3e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000015248b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a657 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015266b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a5d7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015285b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a557 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a2c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a4c8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152c2c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a438 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152e2c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015a3a8 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a5ea0 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000479c9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000152108 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000152146 : mov qword ptr [rdi - 8], rdx ; ret
0x00000000001522bb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001523b7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152303 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015a6d7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000540e5 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094a16 : mov qword ptr [rdi], r8 ; pop rbx ; ret
0x0000000000047998 : mov qword ptr [rdi], r9 ; ret
0x00000000000ff2d4 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004965a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000363aa : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a6506 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5bc6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a4f16 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a4f26 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a4f37 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a4f47 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a4f57 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f2ee : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000a4f07 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f90c : mov qword ptr [rdi], rcx ; ret
0x00000000000a64f3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a7323 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5ec0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5ee0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5ef0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5f00 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5f10 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5ed0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009f37f : mov qword ptr [rdi], rdx ; ret
0x00000000000a8d93 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000014d38d : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000490c2 : mov qword ptr [rdi], rsi ; ret
0x000000000006f0f6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x0000000000079544 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000007249d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000072643 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012e81f : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012e7fb : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e7ff : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016a95a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x00000000001665ca : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016a97a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000001665ea : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016a99a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016660a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000016a82a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000001664fa : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000131950 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000016a7d3 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000131a1a : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001664a3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e60c : mov qword ptr [rdx], rax ; ret
0x000000000007772e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000073395 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009f2b4 : mov qword ptr [rdx], rcx ; ret
0x00000000000e6e5a : mov qword ptr [rdx], rdi ; ret
0x000000000013194d : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001155d7 : mov qword ptr [rip + 0x2b2f42], rax ; pop rbp ; ret
0x000000000010900f : mov qword ptr [rip + 0x2bb2aa], rbx ; pop rbx ; ret
0x00000000000fe5e4 : mov qword ptr [rip + 0x2c72d5], rax ; mov rdx, rax ; jmp 0xfe588
0x00000000000e8b43 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012d93e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b045 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003a9f2 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000fc331 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f614e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e8b26 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000012d90e : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e8b3f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000004704f : mov qword ptr [rsi + r10*8], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000078caa : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001238b2 : mov qword ptr [rsi], rdi ; ret
0x00000000001190c8 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000f3193 : mov qword ptr [rsp + 0x10], rcx ; call 0x1f457
0x00000000001092f8 : mov qword ptr [rsp + 0x20], rax ; call 0x35527
0x000000000008293a : mov qword ptr [rsp + 0x30], rax ; call rdx
0x0000000000082ebe : mov qword ptr [rsp + 0x30], rdx ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000baca8 : mov qword ptr [rsp + 0x98], r14 ; call r12
0x00000000000bb023 : mov qword ptr [rsp + 0x98], rbx ; call r12
0x00000000000baf68 : mov qword ptr [rsp + 0xa8], r13 ; call r15
0x00000000000893af : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102e15 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013b9eb : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000082a6c : mov qword ptr [rsp + 8], rsi ; call rax
0x0000000000089717 : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x000000000012a62b : mov qword ptr [rsp], rcx ; call r12
0x000000000013788e : mov qword ptr fs:[rax], rdx ; ret
0x00000000001378e0 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e60b : mov qword ptr fs:[rdx], rax ; ret
0x00000000000f3192 : mov qword ptr gs:[rsp + 0x10], rcx ; call 0x1f458
0x000000000014d38c : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000182b5d : mov r10d, 0xcac982a4 ; call 0xffffffffaedac9df
0x0000000000020636 : mov r12, rax ; call 0xa9a39
0x000000000007e6a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000173879 : mov r12d, 0x1f0fffea ; add bl, dh ; ret
0x00000000000d8848 : mov r12d, 1 ; jmp 0xd8819
0x0000000000137bdb : mov r12d, dword ptr [rax] ; jmp 0x137beb
0x0000000000102903 : mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000adb8a : mov r13, r15 ; setne dl ; jmp 0xadba5
0x00000000000b03ab : mov r13, r15 ; setne dl ; jmp 0xb03c5
0x00000000000b2a83 : mov r13, r15 ; setne dl ; jmp 0xb2a9d
0x000000000007e6ac : mov r13, rdx ; call qword ptr [r15]
0x000000000012a72c : mov r13, rsp ; call r15
0x000000000018826c : mov r13b, 0xf3 ; call qword ptr [rcx]
0x0000000000066176 : mov r13d, eax ; jmp 0x66141
0x0000000000067031 : mov r13d, eax ; xor edx, edx ; jmp 0x6329c
0x000000000011dfb6 : mov r14d, eax ; jmp 0x11df81
0x0000000000133250 : mov r15, rax ; call 0x1f465
0x0000000000195e30 : mov r15b, r13b ; jmp qword ptr [rax]
0x0000000000103278 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000012b7b6 : mov r8, qword ptr [rax + 0x18] ; jmp r8
0x000000000013d955 : mov r8, qword ptr [rsp + 0x18] ; jmp 0x13d925
0x00000000000c6e6c : mov r8, rbp ; xor edx, edx ; jmp 0xc6e3b
0x00000000000ec0b5 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000ac2a4 : mov r9, r15 ; call rbx
0x00000000000ca773 : mov rax, -0xe ; ret
0x00000000000793e0 : mov rax, -1 ; pop rbx ; ret
0x000000000003521e : mov rax, -1 ; ret
0x00000000000aae50 : mov rax, 1 ; ret
0x00000000000aae60 : mov rax, 2 ; ret
0x00000000000aae70 : mov rax, 3 ; ret
0x00000000000aae80 : mov rax, 4 ; ret
0x00000000000aae90 : mov rax, 5 ; ret
0x00000000000aaea0 : mov rax, 6 ; ret
0x00000000000aaeb0 : mov rax, 7 ; ret
0x0000000000142f57 : mov rax, qword ptr [rax + 0x100] ; jmp rax
0x00000000001096cf : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010947f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007bf0b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000073631 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000073479 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000011451f : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007c3e7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000134633 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070c5e : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000070f20 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000002e385 : mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000763b3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000134ed3 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002e365 : mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000105ec8 : mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000105ed0 : mov rax, qword ptr [rax + 0xc0] ; ret
0x0000000000142e6e : mov rax, qword ptr [rax + 0xe0] ; jmp rax
0x000000000013a164 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000105ea9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b70e : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x2b722 ; call rax
0x000000000002e388 : mov rax, qword ptr [rax + rdi*4] ; ret
0x000000000002de82 : mov rax, qword ptr [rax + rdi*8] ; ret
0x000000000013a159 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002d3db : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002de7f : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + rdi*8] ; ret
0x000000000003a512 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000128af8 : mov rax, qword ptr [rax] ; ret
0x000000000007edef : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7ee01 ; call rax
0x0000000000085805 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x85817 ; call rax
0x000000000010327b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000c785a : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000022aed : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000078900 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000cacc7 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xcacdb ; call rax
0x00000000001378a9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1378c1 ; pop rbx ; ret
0x0000000000137915 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1378d5 ; pop rbx ; ret
0x00000000001664a0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000013b8f2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013b470 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c7200 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d976 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000078940 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d9ae : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000078830 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000763b0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d8d0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013a918 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e6d0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b238 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013b248 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013a160 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013a155 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013a240 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c4d6 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007d5f0 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000114cf4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000cae64 : mov rax, qword ptr [rdx + 0x18] ; test rax, rax ; je 0xcae7c ; call rax
0x000000000002e326 : mov rax, qword ptr [rdx + rax*4] ; ret
0x000000000012dde7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002d3a0 : mov rax, qword ptr [rdx + rdi*8] ; ret
0x00000000000e6e57 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007d5e0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7d5e1 ; ret
0x00000000001406c0 : mov rax, qword ptr [rip + 0x2823b9] ; jmp rax
0x0000000000140733 : mov rax, qword ptr [rip + 0x284db6] ; call qword ptr [rax]
0x0000000000140136 : mov rax, qword ptr [rip + 0x2853b3] ; call qword ptr [rax]
0x0000000000121468 : mov rax, qword ptr [rip + 0x2a4541] ; ret
0x0000000000082c21 : mov rax, qword ptr [rip + 0x341190] ; xor edi, edi ; call qword ptr [rax]
0x000000000007d8b0 : mov rax, qword ptr [rip + 0x347d49] ; ret
0x000000000002a490 : mov rax, qword ptr [rip + 0x39b5a1] ; ret
0x0000000000022200 : mov rax, qword ptr [rip + 0x3a7641] ; ret
0x00000000000221f0 : mov rax, qword ptr [rip + 0x3a7661] ; ret
0x000000000002d3bc : mov rax, qword ptr [rsi + rax*8] ; ret
0x00000000000c7c00 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020a39 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f05c6 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf060a
0x00000000000266a3 : mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000024aa9 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038e67 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003ade8 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000c74c7 : mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000fdf3f : mov rax, qword ptr [rsp - 0x50] ; ret
0x0000000000109ea2 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000109f03 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000120976 : mov rax, qword ptr [rsp] ; call rax
0x000000000002de7e : mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8] ; ret
0x0000000000128af7 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000094f11 : mov rax, r10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001161bf : mov rax, r10 ; ret
0x000000000006d871 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6eb3 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084e72 : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039f0e : mov rax, r8 ; pop rbx ; pop rbp ; ret
0x000000000007ecec : mov rax, r8 ; ret
0x000000000007a159 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070408 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000703db : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f020 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d0104 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000094df6 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c79d4 : mov rax, rbx ; call rax
0x0000000000105a0e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002afe5 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f39c : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000032461 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003a89e : mov rax, rbx ; pop rbx ; ret
0x0000000000102059 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a47b : mov rax, rcx ; or rax, rdx ; ret
0x000000000002eb0f : mov rax, rcx ; pop rbp ; pop r12 ; ret
0x0000000000033c2e : mov rax, rcx ; pop rbx ; ret
0x0000000000033c38 : mov rax, rcx ; ret
0x0000000000116060 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000004960d : mov rax, rdi ; cmovae rax, rsi ; ret
0x000000000003a490 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009efa6 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000ab61a : mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000ff04b : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000004965d : mov rax, rdi ; ret
0x0000000000118dc9 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000ba577 : mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000083261 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bea1b : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000978d5 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000006f949 : mov rax, rdx ; je 0x6f99e ; pop rbx ; ret
0x0000000000078489 : mov rax, rdx ; je 0x784de ; pop rbx ; ret
0x000000000010e6cb : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e8f1 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000480e4 : mov rax, rdx ; pop rbx ; ret
0x00000000000474d9 : mov rax, rdx ; ret
0x00000000000c8094 : mov rax, rsi ; add rsp, 8 ; ret
0x00000000000830da : mov rax, rsi ; mov byte ptr [rsi + rbx], cl ; pop rbx ; ret
0x000000000007103a : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000070dfd : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d591 : mov rax, rsi ; pop rbx ; ret
0x0000000000049743 : mov rax, rsi ; ret
0x000000000017234a : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x000000000007d7ba : mov rbp, qword ptr [rbx + 8] ; jmp 0x7d788
0x000000000003514c : mov rbp, r9 ; nop ; jmp rdx
0x0000000000102906 : mov rbp, rax ; call rax
0x00000000000dee46 : mov rbp, rdi ; add rax, rdx ; jmp rax
0x000000000006f3e3 : mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x8b6d9
0x00000000001154c3 : mov rbp, rsp ; pop rbp ; ret
0x000000000017324e : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f4c6
0x000000000017324d : mov rbx, qword ptr [rdi + 0x10] ; call 0x1f4c7
0x0000000000173298 : mov rbx, qword ptr [rdi] ; call 0x1f4c5
0x000000000012d535 : mov rbx, qword ptr [rsp + 8] ; call rbx
0x00000000001036d5 : mov rbx, rax ; call rax
0x000000000012e2fa : mov rbx, rax ; jne 0x12e29a ; xor eax, eax ; pop rbx ; ret
0x00000000000fcc1e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000371a6 : mov rbx, rax ; mov rdi, r12 ; call r15
0x000000000002cbf5 : mov rbx, rdi ; test rax, rax ; je 0x2cc07 ; call rax
0x000000000006f3e7 : mov rbx, rsi ; call 0x8b6d5
0x00000000000dee43 : mov rbx, rsi ; mov rbp, rdi ; add rax, rdx ; jmp rax
0x000000000002bbf7 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2bc0b ; call rcx
0x00000000000f4703 : mov rcx, qword ptr [rax] ; jmp 0xf468b
0x000000000013526f : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x00000000000ba3fb : mov rcx, qword ptr [rdx + rax*8] ; jmp 0xba3b7
0x00000000000a4ef0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000131da1 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131bac : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012ab50 : mov rcx, r13 ; call rbx
0x00000000000ac549 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000032bfc : mov rcx, rax ; jne 0x32ba9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f2d5 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000009f2c3 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000014d4c0 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014d4c3 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000102e5f : mov rdi, qword ptr [r12] ; call rbx
0x00000000001731b9 : mov rdi, qword ptr [r13 + 0x20] ; call 0x1f4c6
0x00000000001731ca : mov rdi, qword ptr [r13] ; call 0x1f4c6
0x0000000000038dec : mov rdi, qword ptr [r13] ; call r14
0x0000000000102a69 : mov rdi, qword ptr [r13] ; call rbx
0x00000000001029d6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102a17 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000073228 : mov rdi, qword ptr [rax + 0x10] ; call 0x1f4c6
0x00000000000b9cb6 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102e12 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000cdcfe : mov rdi, qword ptr [rbp - 0x430] ; call r14
0x00000000000c78e4 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000ebda6 : mov rdi, qword ptr [rbp - 0x78] ; call r14
0x00000000000ab9c4 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000102b9e : mov rdi, qword ptr [rbp] ; call rbx
0x000000000006326c : mov rdi, qword ptr [rbx] ; call 0x1f4c5
0x0000000000046be9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006f1f8 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006f1cc : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000074417 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x743e5
0x0000000000112e83 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000baed4 : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000024792 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000024578 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000025ccf : mov rdi, qword ptr [rsp + 0x28] ; call r15
0x0000000000025a80 : mov rdi, qword ptr [rsp + 0x28] ; call rbx
0x0000000000024f34 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x0000000000024fe8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000262d0 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000de42d : mov rdi, qword ptr [rsp + 0x50] ; call 0xda727
0x00000000000baac0 : mov rdi, qword ptr [rsp + 0x68] ; call r15
0x000000000012d551 : mov rdi, qword ptr [rsp + 0x68] ; call rax
0x0000000000111c80 : mov rdi, r12 ; call 0x10df55
0x0000000000112318 : mov rdi, r12 ; call 0x10e525
0x0000000000133165 : mov rdi, r12 ; call 0x1f445
0x00000000000731fb : mov rdi, r12 ; call 0x1f465
0x000000000013acce : mov rdi, r12 ; call qword ptr [rax]
0x00000000000371a9 : mov rdi, r12 ; call r15
0x000000000002f38f : mov rdi, r12 ; call rax
0x00000000000ac15c : mov rdi, r12 ; call rbx
0x000000000011d96b : mov rdi, r12 ; mov ebx, eax ; call 0x129c27
0x00000000000ac2a1 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000120973 : mov rdi, r12 ; mov rax, qword ptr [rsp] ; call rax
0x0000000000088e15 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000062bd8 : mov rdi, r13 ; call 0x1f4c9
0x00000000000ed791 : mov rdi, r13 ; call 0x89a55
0x00000000001204bd : mov rdi, r13 ; call r12
0x000000000003902b : mov rdi, r13 ; call r14
0x0000000000088abc : mov rdi, r13 ; call rax
0x000000000010371f : mov rdi, r13 ; call rbx
0x0000000000022aea : mov rdi, r13 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000037753 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x0000000000133296 : mov rdi, r14 ; call 0x1f4c5
0x000000000012d2c7 : mov rdi, r14 ; call rax
0x0000000000103743 : mov rdi, r14 ; call rbx
0x000000000012c9e5 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000013326a : mov rdi, r15 ; call 0x1f4c5
0x000000000003bd87 : mov rdi, r15 ; call 0x47fd5
0x0000000000057151 : mov rdi, r15 ; call 0x733a5
0x000000000013807f : mov rdi, r15 ; call qword ptr [rax]
0x0000000000139f1d : mov rdi, r15 ; call r14
0x0000000000087fd5 : mov rdi, r15 ; call rax
0x0000000000103763 : mov rdi, r15 ; call rbx
0x000000000013770e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x00000000000c74c4 : mov rdi, r15 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000766d2 : mov rdi, r15 ; xor r8d, r8d ; call r12
0x00000000000f810c : mov rdi, r8 ; call 0x943f5
0x0000000000123158 : mov rdi, rax ; call 0x8f365
0x00000000001364a3 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ed534 : mov rdi, rax ; call r14
0x0000000000136595 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x00000000001363a6 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x00000000001723bb : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000012e39d : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013b7ba : mov rdi, rbp ; call r12
0x000000000012c04c : mov rdi, rbp ; call r14
0x00000000000371e6 : mov rdi, rbp ; call r15
0x000000000006d834 : mov rdi, rbp ; call r8
0x0000000000085e90 : mov rdi, rbp ; call rax
0x00000000000ac42e : mov rdi, rbp ; call rbx
0x0000000000085235 : mov rdi, rbp ; call rcx
0x000000000012de77 : mov rdi, rbp ; call rdx
0x000000000012cad4 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000131d9e : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131ba9 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012ab4d : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000007e6c1 : mov rdi, rbp ; neg rdi ; call qword ptr [r15]
0x0000000000119034 : mov rdi, rbp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000832a1 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d77c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000082a44 : mov rdi, rbx ; call qword ptr [r15]
0x000000000008291b : mov rdi, rbx ; call qword ptr [rax]
0x000000000002a446 : mov rdi, rbx ; call r12
0x0000000000022398 : mov rdi, rbx ; call r14
0x0000000000051503 : mov rdi, rbx ; call rax
0x00000000001730ca : mov rdi, rbx ; jne 0x1730c1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a628 : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a729 : mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000142a1a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000088275 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007362d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000073475 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000139fbf : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000861d3 : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000133689 : mov rdi, rcx ; jmp r8
0x000000000012b7b3 : mov rdi, rcx ; mov r8, qword ptr [rax + 0x18] ; jmp r8
0x0000000000114cf7 : mov rdi, rdx ; jmp rax
0x000000000012b8b5 : mov rdi, rsp ; call rax
0x000000000013a030 : mov rdi, rsp ; call rdx
0x0000000000112708 : mov rdx, qword ptr [r12 + 0x38] ; jmp 0x1126d8
0x0000000000114f39 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0x114f39 ; leave ; ret
0x00000000000788d4 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000020a36 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000caee4 : mov rdx, qword ptr [rdi + 0x10] ; test rdx, rdx ; je 0xcaefc ; call rdx
0x0000000000172f62 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x172f7b ; call rdx
0x000000000002e323 : mov rdx, qword ptr [rdx + 0x48] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000002e2f3 : mov rdx, qword ptr [rdx + 0x58] ; mov eax, dword ptr [rdx + rax*4] ; ret
0x0000000000172e4f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x172e63 ; call rdx
0x0000000000152270 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a4ee0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000010e97d : mov rdx, qword ptr [rsp + 0x18] ; call rax
0x0000000000084c10 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000addf9 : mov rdx, r10 ; add rax, rax ; sub rdx, rax ; jmp 0xade2b
0x00000000000b0633 : mov rdx, r10 ; add rax, rax ; sub rdx, rax ; jmp 0xb0663
0x00000000000b2d03 : mov rdx, r10 ; add rax, rax ; sub rdx, rax ; jmp 0xb2d33
0x0000000000113846 : mov rdx, r12 ; call rax
0x0000000000087fd2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000113a56 : mov rdx, r13 ; call rax
0x000000000012f48a : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088e18 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x0000000000113af7 : mov rdx, r14 ; call rax
0x0000000000088278 : mov rdx, r15 ; call rax
0x0000000000051500 : mov rdx, r15 ; mov rdi, rbx ; call rax
0x000000000011d63e : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000698c0 : mov rdx, r8 ; jmp 0x6986b
0x00000000001057ce : mov rdx, rax ; jmp 0x1057fe
0x0000000000105877 : mov rdx, rax ; jmp 0x1058a8
0x0000000000134446 : mov rdx, rax ; jmp 0x13440c
0x000000000004d21f : mov rdx, rax ; jmp 0x4d241
0x000000000004d3f9 : mov rdx, rax ; jmp 0x4d41b
0x00000000000ce471 : mov rdx, rax ; jmp 0xce412
0x00000000000e30e7 : mov rdx, rax ; jmp 0xe3084
0x00000000000e3559 : mov rdx, rax ; jmp 0xe34f4
0x00000000000f05cb : mov rdx, rax ; jmp 0xf0605
0x00000000000fe5eb : mov rdx, rax ; jmp 0xfe581
0x0000000000037756 : mov rdx, rbp ; call r15
0x0000000000088ab6 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113b63 : mov rdx, rbx ; call rax
0x0000000000173586 : mov rdx, rbx ; jne 0x17357f ; pop rbx ; ret
0x000000000012f374 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000038de9 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x00000000000c78e0 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000e3fad : mov rsi, qword ptr [rbx + 8] ; mov byte ptr [rsi + rcx], al ; jmp 0xe3f80
0x0000000000063540 : mov rsi, qword ptr [rip + 0x360a19] ; call rax
0x000000000005a8d6 : mov rsi, qword ptr [rip + 0x369683] ; call rax
0x000000000005a362 : mov rsi, qword ptr [rip + 0x369bf7] ; call rax
0x00000000000551ce : mov rsi, qword ptr [rip + 0x36ed8b] ; call rax
0x000000000004f2da : mov rsi, qword ptr [rip + 0x374c7f] ; call rax
0x0000000000049e7e : mov rsi, qword ptr [rip + 0x37a0db] ; call rax
0x0000000000046f69 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012c047 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x00000000000381fd : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000085230 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rcx
0x0000000000084940 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x00000000001204b8 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x00000000000ebda3 : mov rsi, r12 ; mov rdi, qword ptr [rbp - 0x78] ; call r14
0x00000000000371ba : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000371e3 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000088cc0 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012ab4a : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000087dc2 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000ba8cc : mov rsi, r13 ; call r12
0x00000000000baed1 : mov rsi, r13 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x0000000000087b54 : mov rsi, r14 ; call rax
0x0000000000088ab9 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013b7b7 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x0000000000085e8d : mov rsi, r14 ; mov rdi, rbp ; call rax
0x0000000000039028 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x000000000003bd84 : mov rsi, r15 ; mov rdi, r15 ; call 0x47fd8
0x000000000014291e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000088e1b : mov rsi, rbp ; call rax
0x00000000000874b0 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000141dd9 : mov rsi, rbp ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000371fe : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000013807c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000139f1a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x000000000013b68d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000132409 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000013fb42 : mov rsi, rdx ; call 0x13bdb5
0x0000000000112e87 : mov rsi, rdx ; call rax
0x000000000013a244 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e7a4 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035149 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000018709c : mov sil, 0xf0 ; call qword ptr [rax - 0x1f000f48]
0x00000000001b5a38 : mov spl, 0xf6 ; call rdi
0x00000000000bba2d : mov ss, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000fc883 : mov word ptr [r8 + 0x21], si ; ret
0x0000000000045893 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xdce9
0x000000000008f2e1 : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000000bab58 : mov word ptr [rax + rsi*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000a56e0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x000000000019e134 : mov word ptr [rax], ds ; add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rsi]
0x00000000001a54d5 : mov word ptr [rax], es ; add al, cl ; test ch, ch ; jmp qword ptr [rax]
0x00000000000bbca4 : mov word ptr [rbp - 0x3e], ax ; jmp 0xbbc79
0x00000000001a5634 : mov word ptr [rbp - 0x78180000], cs ; in eax, dx ; call qword ptr [rdx]
0x00000000001983ac : mov word ptr [rbx + 0x79f40000], gs ; in eax, dx ; call rsp
0x000000000010cce4 : mov word ptr [rbx], gs ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000019c3bc : mov word ptr [rcx + 2], cs ; add byte ptr [rdi], dh ; cli ; call rsp
0x0000000000168532 : mov word ptr [rcx + 4], dx ; ret
0x0000000000168573 : mov word ptr [rcx + 8], dx ; ret
0x00000000001b7534 : mov word ptr [rcx + rax - 0x8bd9800], gs ; jmp qword ptr [rbx]
0x00000000001b0d34 : mov word ptr [rcx + rax], es ; js 0x1b0da3 ; cmc ; jmp qword ptr [rcx]
0x0000000000168500 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x00000000001684f0 : mov word ptr [rcx], dx ; ret
0x00000000000a65fc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a744c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a4f8c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8ebc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a6704 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a7554 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a5074 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a8fc4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000015b0e7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003b122 : mov word ptr [rdi + 2], dx ; ret
0x000000000009f032 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a72f8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ef32 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a4ec8 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a8d68 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a735a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a651a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a4f0a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a8dca : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014d3c2 : mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000015280c : mov word ptr [rdi - 2], cx ; ret
0x0000000000152624 : mov word ptr [rdi - 2], dx ; ret
0x0000000000152808 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a4e93 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a5b66 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001722c5 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015b0eb : mov word ptr [rdi], cx ; ret
0x00000000000a6483 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a72a3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a4e83 : mov word ptr [rdi], dx ; ret
0x00000000000a8d13 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009eff0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009ef60 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000014d3bf : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000f6210 : mov word ptr [rdi], si ; xor al, al ; ret
0x00000000001319cf : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x00000000001b0b34 : mov word ptr [rdx + 1], es ; add byte ptr [rax + 0x52], cl ; cmc ; jmp qword ptr [rcx]
0x000000000016a8a8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a1c3d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a1cc1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000016a853 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a1bd8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000010946f : mov word ptr [rdx], ax ; ret
0x00000000001a7b13 : mov word ptr [rdx], es ; push rdx ; ret
0x000000000011cd44 : mov word ptr [rdx], gs ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000001a75ca : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000001ae634 : mov word ptr [rip - 0x6167ffff], ds ; hlt ; jmp qword ptr [rcx]
0x00000000000fb735 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003b08f : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b0d6 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001b2f34 : mov word ptr [rsi + 1], fs ; add byte ptr [rax], bl ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001b1f34 : mov word ptr [rsi + 1], ss ; add byte ptr [rax], bl ; xchg eax, edi ; cmc ; call rdi
0x00000000001722c8 : mov word ptr [rsi - 2], cx ; ret
0x00000000000f61f3 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001a68a0 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; lodsb al, byte ptr [rsi] ; ret
0x00000000001ab4e0 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x0000000000034e34 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035004 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000014d3be : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000003e28d : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000001b33d2 : movabs al, byte ptr [0x41200e0a01910320] ; ret
0x00000000000d6fac : movabs al, byte ptr [0x6b8fffffc] ; ret
0x0000000000052c20 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x00000000000e2561 : movabs al, byte ptr [0x950fc08545000000] ; ret 0xe183
0x0000000000074413 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x0000000000056f2e : movabs byte ptr [0xffeed885c7fffffd], al ; jmp qword ptr [rax]
0x0000000000058767 : movabs byte ptr [0xffef7a85c6fffffd], al ; jmp qword ptr [rax]
0x00000000000c66b9 : movabs dword ptr [0x8948c08548fff58d], eax ; ret 0x8949
0x0000000000100719 : movabs dword ptr [0x8948c08548fff770], eax ; ret
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000006f9ac : movabs eax, dword ptr [0x5b0000000502c764] ; ret
0x00000000000b509e : movabs eax, dword ptr [0x5e415bffffffffb8] ; ret
0x00000000000be149 : movabs eax, dword ptr [0x8348d78948fffffb] ; ret 0x8010
0x000000000003479f : movapd xmm0, xmm1 ; ret
0x00000000000347a0 : movaps xmm0, xmm1 ; ret
0x0000000000150d92 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000150d8e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000150e3c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034c11 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000346c9 : movd mm0, eax ; ret
0x0000000000034b1c : movd mm0, edi ; ret
0x00000000000346c8 : movd mm0, rax ; ret
0x000000000003479c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x000000000003472f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034a96 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003479b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x000000000003472e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034c10 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034a6c : movd xmm0, eax ; ret
0x0000000000034b1b : movd xmm0, edi ; ret
0x0000000000034a95 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000e2e73 : movdqa xmm0, xmm2 ; jmp 0xe2e5a
0x00000000000a4f60 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a67bd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a760d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a5e20 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a512d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a7873 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6063 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000015adbf : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ad4f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015acdf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac6f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a675d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a75ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a50cd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000015abff : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a677d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a75cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a50ed : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000015ab8f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a679d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a75ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a510d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b1af : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b13f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b0cf : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b05f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015afef : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015af7f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015af0f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae9f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae2f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f246 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000015a31b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015a38b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a5f20 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a7414 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a65d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a5c47 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a4f74 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a4fb7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a4fa7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5028 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a4fe8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5008 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a4f88 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5129 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a50c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a50e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5109 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a4f64 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a8e84 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015ab94 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a1d22 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a1d42 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a1d62 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a1bac : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a1b56 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a1d23 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a1d43 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a1d63 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a1bad : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a1b57 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000e2e74 : movq mm0, mm2 ; jmp 0xe2e59
0x00000000000a4f61 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a67be : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a760e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a5e21 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a512e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a907e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a7874 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6064 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a90f4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015adc0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ad50 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ace0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ac70 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a675e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a75ae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a50ce : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a901e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015ac00 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a677e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a75ce : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a50ee : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a903e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015ab90 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a679e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a75ee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a510e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a905e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b1b0 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b140 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b0d0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b060 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aff0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015af80 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015af10 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015aea0 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015ae30 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f233 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8f248 ; ret
0x000000000008f232 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8f249 ; ret
0x000000000008f248 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000015a31c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015a38c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aac7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aa47 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a9b7 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a937 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a8b7 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a837 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a7b7 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a737 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a6b7 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a637 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a5b7 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a537 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a4a7 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a417 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015a387 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a5f21 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a7415 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a65d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a5c48 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a4f75 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a4fc8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5c9b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a4fb8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a4fa8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5029 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a4fe9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5009 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a4f89 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a512a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a50ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a50ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a510a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a4f65 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a8e85 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015ab95 : movq qword ptr [rdi], mm1 ; ret
0x00000000000346c7 : movq xmm0, rax ; ret
0x000000000003479a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x000000000003472d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000001ade4c : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0x59a00001 ; stc ; call qword ptr [rax]
0x00000000000d4574 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd4507
0x00000000001a6d15 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; fadd dword ptr [rbx - 0x12] ; call qword ptr [rax]
0x00000000001a6d95 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; pop rax ; out dx, al ; call qword ptr [rdx]
0x0000000000199198 : movsb byte ptr [rdi], byte ptr [rsi] ; add esi, eax ; call rsp
0x00000000001976e8 : movsb byte ptr [rdi], byte ptr [rsi] ; fucomi st(0) ; call rsp
0x00000000001ae8a1 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000183522 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000186e18 : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x186e0c ; jmp rsp
0x0000000000186e5c : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x186e50 ; jmp rsp
0x0000000000186e74 : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x186e6c ; push qword ptr [rsp + rsi*2 - 0x12] ; jmp rsp
0x0000000000186e8c : movsb byte ptr [rdi], byte ptr [rsi] ; je 0x186e80 ; jmp rsp
0x0000000000197bec : movsb byte ptr [rdi], byte ptr [rsi] ; jnp 0x197bf6 ; add byte ptr [rbp - 0x17], al ; call rsp
0x000000000018477d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x1847d6 ; jmp 0x184717
0x000000000019aa7c : movsb byte ptr [rdi], byte ptr [rsi] ; lahf ; add dword ptr [rax], eax ; or al, 0xf7 ; call rsp
0x000000000019c750 : movsb byte ptr [rdi], byte ptr [rsi] ; lodsb al, byte ptr [rsi] ; std ; call rsp
0x00000000001984cc : movsb byte ptr [rdi], byte ptr [rsi] ; mov ah, 0 ; add byte ptr [rcx - 0x13], al ; jmp rsp
0x00000000001bb04c : movsb byte ptr [rdi], byte ptr [rsi] ; out 1, eax ; add byte ptr [rax], dl ; or edi, eax ; call qword ptr [rdx]
0x00000000001981c4 : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add byte ptr [rax], al ; add al, 0x82 ; jmp 0x1981d2
0x0000000000034e77 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001986ec : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x0000000000039b00 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x38
0x0000000000198620 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffed
0x000000000019c4f0 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffa
0x000000000019b0c4 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000019a690 : movsb byte ptr [rdi], byte ptr [rsi] ; sal dh, 1 ; jmp rsp
0x00000000001ae64c : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, 0x9eb00001 ; hlt ; jmp qword ptr [rcx]
0x0000000000199778 : movsb byte ptr [rdi], byte ptr [rsi] ; sti ; call rsp
0x000000000019bfb8 : movsb byte ptr [rdi], byte ptr [rsi] ; sub edi, edx ; call rsp
0x000000000003119b : movsd dword ptr [rdi], dword ptr [rsi] ; add eax, 0xc4834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000018822d : movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rcx]
0x000000000009ec45 : movsd dword ptr [rdi], dword ptr [rsi] ; idiv bh ; dec dword ptr [rdi] ; mov dh, 0x55 ; ret
0x0000000000184db5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001862ac : movsd dword ptr [rdi], dword ptr [rsi] ; jrcxz 0x18629f ; call rsp
0x0000000000184671 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000000479f2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001a8401 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; call qword ptr [rax]
0x000000000012e867 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000034732 : movsd qword ptr [rdi], xmm1 ; ret
0x00000000000346fb : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000ba5e8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000049203 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000142925 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000034a99 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034a80 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x00000000000491bd : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010e78f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b3b8 : movsx eax, dl ; ret
0x000000000009f0b4 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9f0b1 ; ret
0x000000000009f1f4 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9f1f1 ; xor eax, eax ; ret
0x000000000009f144 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x9f149 ; ret
0x000000000009f070 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9f071 ; ret
0x0000000000111c52 : movsxd r13, r13d ; call 0x10df55
0x00000000000c2040 : movsxd r8, dword ptr [rdi + r8*4] ; add rdi, r8 ; jmp rdi
0x0000000000089d31 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000015879b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000015086b : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000009efc0 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009ef20 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009ee58 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x00000000000857e4 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000df7d5 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000e0308 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000006d737 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d2a0f : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000001340c4 : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x000000000006d602 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000020f86 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000002ebc1 : movsxd rax, dword ptr [rdx + rcx*4] ; add rdx, rax ; jmp rdx
0x0000000000046cbf : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000a9a77 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003a93a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x0000000000149fd4 : movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000149e98 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a0ed : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x0000000000149f6d : movsxd rax, ecx ; ret
0x0000000000111c53 : movsxd rbp, ebp ; call 0x10df54
0x0000000000186015 : movsxd rbp, ebp ; jmp qword ptr [rbx]
0x0000000000198f49 : movsxd rbp, edi ; jmp rsp
0x0000000000198b91 : movsxd rbp, esi ; call rsp
0x000000000014a014 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a559a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000016dc9d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a4d29 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002c5b3 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009486d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000005b28c : movsxd rcx, dword ptr [rax + rdx*4] ; add rax, rcx ; jmp rax
0x0000000000134f26 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x000000000005a9fa : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000006333b : movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x0000000000149e89 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x0000000000149ef0 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000149eb7 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000e3c03 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000003332f : movsxd rdi, dword ptr [r8 + rdi*4] ; add rdi, r8 ; jmp rdi
0x000000000002e525 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e3b5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000018b725 : movsxd rdi, edx ; call qword ptr [rax]
0x000000000018b715 : movsxd rdi, edx ; jmp rax
0x000000000018b735 : movsxd rdi, edx ; push qword ptr [rax + 0x63] ; cli ; call qword ptr [rax]
0x0000000000196f19 : movsxd rdi, esp ; call qword ptr [rax]
0x000000000015093f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000d05bb : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d7695 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000085538 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000f290c : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005ace5 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cc60b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000006d8ae : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000e340a : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000330ca : movsxd rdx, dword ptr [rcx + rsi*4] ; add rdx, rcx ; jmp rdx
0x0000000000124822 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001246d9 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000a9b07 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x0000000000131906 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000a9b3f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000c1fdc : movsxd rsi, dword ptr [rcx + rsi*4] ; add rcx, rsi ; jmp rcx
0x00000000001b0e99 : movsxd rsi, ebp ; jmp qword ptr [rcx]
0x00000000000e3198 : movsxd rsi, esi ; mov byte ptr [rsp + 8], dl ; call 0x1f458
0x000000000017160c : movsxd rsi, esi ; ret 0x7520
0x00000000000e3197 : movsxd rsi, r14d ; mov byte ptr [rsp + 8], dl ; call 0x1f459
0x00000000000fc48a : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003ad99 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000ba5e9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x00000000000491be : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000049204 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000003af21 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000034733 : movups xmmword ptr [rdi], xmm1 ; ret
0x00000000000346fc : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034a81 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012e6c7 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013af3b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e26c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ead4e : movzx eax, al ; cmova eax, edx ; ret
0x00000000000b9ed0 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cc4de : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003508c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000bfd2a : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c75c : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006c729 : movzx eax, al ; neg eax ; ret
0x0000000000133015 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012f55a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x0000000000102660 : movzx eax, al ; pop rbx ; ret
0x0000000000035d79 : movzx eax, al ; ret
0x000000000002e185 : movzx eax, ax ; ret
0x00000000000727dd : movzx eax, bh ; ret
0x000000000007b477 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013044e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007cce6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b2f5 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bfa8 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000079012 : movzx eax, byte ptr [rax] ; ret
0x000000000008b0c8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000016dcb0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ec80 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b0e3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000060f1d : movzx eax, byte ptr [rdx] ; jmp 0x5d1c8
0x000000000007b300 : movzx eax, byte ptr [rdx] ; ret
0x000000000007b478 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9a97 : movzx eax, cl ; pop rbx ; ret
0x000000000011916d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000000727dc : movzx eax, dil ; ret
0x00000000000a9abf : movzx eax, dl ; pop rbx ; ret
0x000000000011917b : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000011916c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002e33e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000002e559 : movzx eax, word ptr [rax + rdi*2] ; and eax, esi ; ret
0x00000000000f61f0 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000a929a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa9299 ; ret
0x00000000000a934a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa9349 ; ret
0x000000000016eb54 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000008b0e0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016dcb3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000108582 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000003394f : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33937 ; ret
0x000000000009fe51 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000014464f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000009fce3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000171634 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000171694 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000171684 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171674 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171664 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171654 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171644 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015aae0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e907 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000017161b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000015b1c0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008ec83 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008eca9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000015aa60 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b150 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000ab9c1 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000f8b14 : movzx rax, al ; ret
0x000000000008d4f7 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000347c1 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000000347c0 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000006fc03 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000186138 : neg byte ptr [rcx - 0x13] ; jmp qword ptr [rdx - 0x3d]
0x00000000000fdc41 : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000136a4a : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000bb782 : neg eax ; jmp 0xbb5a4
0x00000000000355a7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000011dfb4 : neg eax ; mov r14d, eax ; jmp 0x11df83
0x000000000010ba5c : neg eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010e764 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c75f : neg eax ; pop rbx ; ret
0x00000000000219bd : neg eax ; ret
0x0000000000088661 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007e6c5 : neg edi ; call qword ptr [r15]
0x00000000000f7891 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000007e6c4 : neg rdi ; call qword ptr [r15]
0x0000000000082c24 : nop ; adc dword ptr [rax + rax], esi ; xor edi, edi ; call qword ptr [rax]
0x00000000000655ab : nop ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000196584 : nop ; add ah, bh ; jmp rax
0x0000000000098b80 : nop ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e0b46 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xf748
0x00000000000fb4a7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015a217 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000002a5c8 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016dfbc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000024715 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fd6bd : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c0fd4 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a208d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000006b24f : nop ; add rax, 8 ; jmp 0x6b21e
0x00000000000561ac : nop ; add rax, qword ptr [rbp - 0x10a8] ; jmp rax
0x000000000004ca82 : nop ; add rax, qword ptr [rbp - 0x4f0] ; jmp rax
0x000000000005b28f : nop ; add rax, rcx ; jmp rax
0x000000000005ace8 : nop ; add rax, rdx ; jmp rax
0x00000000000a9b0a : nop ; add rax, rsi ; jmp rax
0x00000000000b8c6f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006c0af : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cc9cf : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000221df : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078e2f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000034baf : nop ; addss xmm0, xmm1 ; ret
0x00000000001b68f0 : nop ; and dh, bh ; call qword ptr [rbx]
0x0000000000187814 : nop ; and dh, dl ; call qword ptr [rax]
0x0000000000078f9f : nop ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000008eadf : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009f66f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f7ff : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000001141c8 : nop ; call rcx
0x0000000000196f00 : nop ; cld ; call qword ptr [rax]
0x0000000000196624 : nop ; cld ; jmp qword ptr [rax]
0x000000000019c319 : nop ; cli ; jmp rsp
0x00000000001b0f70 : nop ; cmc ; jmp qword ptr [rcx]
0x0000000000186fb4 : nop ; cmp eax, esi ; call rax
0x000000000007c23f : nop ; cmp qword ptr [rdi + 0x38], 0 ; je 0x7c258 ; ret
0x000000000007c23e : nop ; cmp qword ptr [rdi + 0x38], 0 ; je 0x7c259 ; ret
0x000000000000c2b8 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001aad50 : nop ; in eax, -0xf ; call rdi
0x000000000003514f : nop ; jmp rdx
0x00000000001b9170 : nop ; mov ah, 0xf7 ; jmp qword ptr [rax]
0x0000000000197254 : nop ; mov bh, ah ; call qword ptr [rax]
0x00000000000d769f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000015243f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000011532f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000000000012d97f : nop ; mov dword ptr [rsi], 0xb ; ret
0x000000000015261f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f70ff : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000cbaff : nop ; mov eax, 0x6e ; syscall ; ret
0x00000000000cc30f : nop ; mov eax, 0xfffa ; ret
0x000000000007347f : nop ; mov eax, 0xffffffff ; ret
0x00000000000abc3f : nop ; mov eax, 1 ; ret
0x000000000011449c : nop ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000aaadf : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xaab49 ; ret
0x00000000000aab2f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xaab49 ; ret
0x0000000000078faf : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000366bf : nop ; mov eax, dword ptr [rip + 0x38d9c6] ; ret
0x000000000011910f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019724c : nop ; mov edi, esp ; call qword ptr [rax]
0x00000000001529df : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a649f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000019725c : nop ; mov esp, edi ; call qword ptr [rax]
0x00000000000d8847 : nop ; mov r12d, 1 ; jmp 0xd881a
0x00000000000793df : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007cc7f : nop ; mov rax, -1 ; ret
0x000000000007893f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000007882f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013a15f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013a23f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000007d5ef : nop ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000007e31a : nop ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f1ff : nop ; mov rax, rdi ; ret
0x00000000000f620f : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x00000000000a4f5f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000857e3 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x0000000000196f18 : nop ; movsxd rdi, esp ; call qword ptr [rax]
0x000000000007b2ff : nop ; movzx eax, byte ptr [rdx] ; ret
0x00000000000f61ef : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001a74e0 : nop ; or edx, edi ; call qword ptr [rax]
0x0000000000196b10 : nop ; outsb dx, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00000000001a7eb0 : nop ; outsd dx, dword ptr [rsi] ; out dx, eax ; call rax
0x0000000000196fe8 : nop ; pop rax ; cld ; call qword ptr [rax]
0x0000000000195de8 : nop ; pop rax ; sti ; jmp qword ptr [rax]
0x000000000010fc8f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001737ff : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6c6f : nop ; pop rbx ; pop rbp ; ret
0x00000000000494ef : nop ; pop rbx ; ret
0x0000000000196fac : nop ; pop rcx ; cld ; call rax
0x0000000000196f94 : nop ; push rax ; cld ; call qword ptr [rax]
0x0000000000196fe0 : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000196f9c : nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000001a4810 : nop ; push rbx ; in eax, dx ; call qword ptr [rax]
0x0000000000196fd8 : nop ; push rdx ; cld ; call qword ptr [rax]
0x00000000001b0b80 : nop ; push rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000196fa4 : nop ; push rsi ; cld ; call qword ptr [rax]
0x00000000000f669c : nop ; push rsp ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000002078f : nop ; ret
0x0000000000002f6e : nop ; ret 0x5bdb
0x0000000000188494 : nop ; ret 0xfff3
0x00000000001961c8 : nop ; retf ; sti ; call qword ptr [rax + 0x20fffbcd]
0x00000000001b2fb0 : nop ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001affa0 : nop ; sbb ebp, esi ; jmp qword ptr [rcx]
0x0000000000196240 : nop ; scasd eax, dword ptr [rdi] ; sti ; jmp rax
0x00000000001a7610 : nop ; shr esi, cl ; jmp qword ptr [rsi]
0x0000000000187504 : nop ; stc ; int1 ; inc eax ; stc ; int1 ; jmp rax
0x0000000000195e95 : nop ; std ; call qword ptr [rcx + 0x21fffd90]
0x0000000000195f59 : nop ; std ; call rax
0x0000000000195e99 : nop ; std ; jmp qword ptr [rcx]
0x00000000000fe259 : nop ; sub al, 0 ; ret
0x000000000007d62f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001a7480 : nop ; test esi, ebp ; call qword ptr [rax]
0x000000000008b88f : nop ; test rsi, rsi ; jne 0x8b8a2 ; xor rax, rax ; ret
0x0000000000197008 : nop ; xchg eax, ebp ; cld ; jmp qword ptr [rax]
0x0000000000197220 : nop ; xchg eax, edx ; cld ; jmp qword ptr [rax]
0x0000000000009f18 : nop ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000186fa4 : nop ; xor al, 0xf0 ; call rax
0x00000000000c64ef : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007639f : nop ; xor eax, eax ; ret
0x000000000008eb5f : nop ; xor rax, rax ; ret
0x0000000000143338 : nop dword ptr [rax + rax] ; call rcx
0x0000000000034f03 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007445b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000a4e9b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000033c33 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x0000000000094373 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000698bb : nop dword ptr [rax + rax] ; mov rdx, r8 ; jmp 0x69870
0x00000000000d5a3b : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012c5bb : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000044a73 : nop dword ptr [rax + rax] ; ret
0x000000000003a5eb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039c33 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000aab4b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000006c895 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000aae1c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000173485 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000076ccc : nop dword ptr [rax] ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000142ff4 : nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000173f39 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000ab6fd : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ab6ed : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ab6f5 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000cc41d : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000cc305 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x0000000000076395 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000089765 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000138cfd : nop dword ptr [rax] ; mov eax, 2 ; ret
0x0000000000075a4d : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002e38d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000071524 : nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000000a5b6d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000094994 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000008493c : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000007bfa5 : nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000084eec : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000003a414 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046db9 : nop dword ptr [rax] ; pop rbx ; ret
0x00000000000d5b9d : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000002c4c1 : nop dword ptr [rax] ; ret
0x0000000000110771 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000ba50d : nop dword ptr [rax] ; xor eax, eax ; jmp 0xba4dc
0x00000000000fe33d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006c134 : nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000348dd : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5b27 : nop dword ptr cs:[rax + rax] ; ret
0x0000000000143337 : nop word ptr [rax + rax] ; call rcx
0x0000000000034f02 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007445a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000a610a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000698ba : nop word ptr [rax + rax] ; mov rdx, r8 ; jmp 0x69871
0x000000000012c5ba : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000044a7a : nop word ptr [rax + rax] ; ret
0x000000000003a5ea : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039c32 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000aab4a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000be2ee : not eax ; add eax, 0x16e ; ret
0x000000000013bb51 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000d5982 : not eax ; and eax, 2 ; ret
0x0000000000034cf0 : not eax ; and eax, ecx ; ret
0x0000000000035db3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000345f0 : not edx ; and eax, edx ; ret
0x0000000000035db2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000019659d : or ah, bh ; inc eax ; or esp, edi ; call qword ptr [rax]
0x00000000000ac032 : or ah, byte ptr [rcx + 0x31] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001a28ed : or al, 0 ; add byte ptr [rax - 0x17], al ; in al, dx ; call qword ptr [rax]
0x00000000001455c7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001491d9 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455f5 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fcfea : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000e3df1 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3dbb : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000830f2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000835aa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000bec97 : or al, 0 ; add rax, rcx ; jmp rax
0x00000000000103f6 : or al, 0 ; push rax ; call qword ptr [rbx]
0x0000000000010606 : or al, 0 ; push rax ; ret
0x00000000000aab87 : or al, 0 ; ret
0x0000000000009406 : or al, 0 ; ret 7
0x0000000000055756 : or al, 0x13 ; add rdx, r15 ; call qword ptr [r11 + rax*8]
0x0000000000095932 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x95929 ; ret
0x000000000008b0c6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000083749 : or al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019e2b4 : or al, 0x1a ; add byte ptr [rax], al ; add bpl, cl ; call qword ptr [rbx]
0x00000000000830de : or al, 0x1e ; pop rbx ; ret
0x000000000012a62d : or al, 0x24 ; call r12
0x00000000001af4b4 : or al, 0x2c ; add dword ptr [rax], eax ; js 0x1af4a5 ; hlt ; jmp qword ptr [rcx]
0x000000000010706a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x000000000019c85c : or al, 0x3e ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ca8b2 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003566e : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000011760b : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003a93e : or al, 0x48 ; add esp, 0x18 ; ret
0x0000000000143121 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000035a49 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x00000000001238b1 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x0000000000082939 : or al, 0x48 ; mov dword ptr [rsp + 0x30], eax ; call rdx
0x00000000000ab114 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000006f1cb : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000ba339 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b4c3 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000114e82 : or al, 0x5d ; pop r12 ; ret
0x00000000001b30b4 : or al, 0x68 ; add dword ptr [rax], eax ; or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x00000000001b32b4 : or al, 0x6a ; add dword ptr [rax], eax ; call 0x271b2ec5
0x00000000001b3db4 : or al, 0x75 ; add dword ptr [rax], eax ; pop rax ; cmp al, 0xf6 ; jmp rdi
0x000000000008e6d8 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000a559c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000050265 : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000005407c : or al, 0x85 ; sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000009efc2 : or al, 0x88 ; add rax, r9 ; jmp rax
0x000000000009486f : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002c5b5 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000000e69f2 : or al, 0x89 ; push rsp ; ret
0x0000000000118a1b : or al, 0x89 ; ret 0x6ae9
0x000000000005589e : or al, 0x89 ; ret 0xeac0
0x000000000005a9fc : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000089d33 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091c24 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000015879d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000015086d : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000006333d : or al, 0x8e ; add rsi, rcx ; jmp rsi
0x000000000005b28e : or al, 0x90 ; add rax, rcx ; jmp rax
0x000000000016dc9f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a4d2b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000002bb2 : or al, 0xaf ; xbegin 0xfffffffff8c6efb6 ; ret
0x0000000000150871 : or al, 0xb ; jmp r9
0x00000000000a4d2f : or al, 0xb ; jmp rcx
0x0000000000134f28 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013bdc7 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000010a6d9 : or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000134f3e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000ba3fd : or al, 0xc2 ; jmp 0xba3b5
0x00000000001a9bb4 : or al, 0xd3 ; add byte ptr [rax], al ; call 0x221a8ccd
0x0000000000186f6c : or al, 0xe8 ; out dx, eax ; call rsi
0x0000000000034c6e : or al, 0xf ; ror dword ptr cs:[rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000aaa35 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5823 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x0000000000034c43 : or al, 0xf ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000102c3c : or al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001bbab4 : or al, 0xf2 ; add dword ptr [rax], eax ; cwde ; clc ; jmp qword ptr [rcx]
0x000000000015ace3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000355d3 : or al, 0xf3 ; ret
0x000000000012322b : or al, 0xf6 ; ret 0xc602
0x000000000019aa81 : or al, 0xf7 ; call rsp
0x0000000000101295 : or al, 0xf7 ; ret 0xfc07
0x000000000002bbf9 : or al, 0xf8 ; test rcx, rcx ; je 0x2bc09 ; call rcx
0x00000000000faa32 : or al, 0xf9 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001b2ff9 : or al, 0xf9 ; jmp qword ptr [rsi]
0x000000000006e7c0 : or al, 0xfb ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000001965e9 : or al, 0xfc ; jmp qword ptr [rax]
0x000000000019c675 : or al, 1 ; add ah, al ; xchg eax, edx ; sti ; jmp rsp
0x00000000000f6a52 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f6b42 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x00000000001ad4d5 : or al, 1 ; add byte ptr [rax], ch ; salc ; jmp qword ptr [rcx]
0x00000000001ad4bd : or al, 1 ; add byte ptr [rax], dl ; salc ; jmp qword ptr [rcx]
0x000000000005155d : or al, 2 ; add byte ptr [rax - 0x77], cl ; ret 0x858b
0x00000000001accb4 : or al, 4 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xd], dh ; call qword ptr [rsi]
0x00000000000a5a60 : or al, 5 ; add byte ptr [rax], al ; ret
0x000000000009f0b6 : or al, 7 ; test cl, cl ; jne 0x9f0af ; ret
0x000000000019d0b4 : or al, 8 ; add byte ptr [rax], al ; clc ; jno 0x19d0aa ; call qword ptr [rax]
0x00000000001a7ce8 : or al, bh ; out dx, al ; call rcx
0x000000000005dae6 : or al, byte ptr [rax] ; add al, ch ; ret 0xfd05
0x0000000000082b36 : or al, byte ptr [rax] ; add al, ch ; ret 0xffb6
0x000000000014479d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001473b1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001447c1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ec5d8 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x78] ; call r14
0x000000000012d992 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000df7d3 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; jmp rax
0x00000000000e0163 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e52f5 : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000ab4ca : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000e57e2 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000e546a : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000014c797 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000e319d : or al, ch ; lodsd eax, dword ptr [rsi] ; ret 0xfff3
0x00000000000e2967 : or al, ch ; ret
0x0000000000186f4c : or bh, ah ; out dx, eax ; call rax
0x000000000013b2f7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008b3f1 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x0000000000078c8d : or bh, byte ptr [rax - 1] ; ret
0x00000000000e42be : or bh, dh ; ret
0x00000000000ffeff : or bh, dh ; ret 0xfc07
0x00000000000ab6fb : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ba50b : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; jmp 0xba4de
0x0000000000124a63 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001248a0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x00000000000022d0 : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b62 ; ret
0x00000000000f9d89 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000096c35 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ea8e8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000079198 : or bl, ch ; cdq ; mov edx, eax ; jmp 0x7913b
0x000000000003a323 : or bl, ch ; ret
0x000000000006b253 : or bl, ch ; ret 0x8b4c
0x000000000015aea3 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002dedf : or bl, dh ; ret
0x00000000000d4378 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000012c4d8 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d42f1 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000d01a3 : or byte ptr [r11 + 0x5d], bl ; ret
0x0000000000033bd2 : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x00000000000ab8f6 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00000000000a1cbf : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d42e2 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d43ae : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00000000000d43c1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013b23a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000a1c9e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x00000000001664f8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e7a2 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000013807a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000039c62 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000014c972 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7eb8 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000a1cfe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000002cf3c : or byte ptr [r9 - 0x77], cl ; add byte ptr [r8 - 0x7d], r9b ; ret 0x4802
0x00000000000738ce : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000000d4351 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d4311 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000012bf93 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000013c37a : or byte ptr [rax + 0x29], cl ; ret
0x000000000007d9e7 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000002bac7 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000047e3a : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000000e7561 : or byte ptr [rax + 0x63], cl ; ret
0x00000000001a3b5c : or byte ptr [rax + 0xb], cl ; ret
0x00000000001acf8d : or byte ptr [rax + 0xb], dl ; ret
0x000000000011916b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000003464b : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x000000000010e5bf : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000030f07 : or byte ptr [rax + 1], cl ; ret
0x0000000000112df1 : or byte ptr [rax + 1], cl ; ret 0x8948
0x00000000000d6c47 : or byte ptr [rax + 2], bh ; ret
0x000000000010600e : or byte ptr [rax + 4], bh ; pop rbx ; pop rbp ; ret
0x0000000000112afb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000009a574 : or byte ptr [rax + rax], ah ; add bh, dh ; ret
0x00000000000d43c2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000019cea8 : or byte ptr [rax - 0x18], ah ; call qword ptr [rsi]
0x000000000007a1df : or byte ptr [rax - 0x68], cl ; ret
0x00000000000d02b0 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000008eb89 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x00000000000943b4 : or byte ptr [rax - 0x73], cl ; add eax, 0xbb94 ; ret
0x00000000000ab73d : or byte ptr [rax - 0x73], cl ; add eax, 0xc3b7b ; ret
0x000000000008eb9d : or byte ptr [rax - 0x73], cl ; add eax, 0xdf0db ; ret
0x00000000000ab729 : or byte ptr [rax - 0x73], cl ; add eax, 0xe74f ; ret
0x00000000000aab79 : or byte ptr [rax - 0x73], cl ; add eax, 0xf38f ; ret
0x000000000013acc8 : or byte ptr [rax - 0x73], cl ; je 0x13acfa ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013ae38 : or byte ptr [rax - 0x73], cl ; je 0x13ae6a ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x00000000000df572 : or byte ptr [rax - 0x73], cl ; je 0xdf5b7 ; adc byte ptr [rax + 1], cl ; ret 0x894d
0x00000000000d01a0 : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x000000000007f8e3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000109ea1 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000109f02 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000002d39f : or byte ptr [rax - 0x75], cl ; add al, 0xfa ; ret
0x0000000000102e11 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000013b23b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006f1f7 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012d9ad : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000ba3fa : or byte ptr [rax - 0x75], cl ; or al, 0xc2 ; jmp 0xba3b8
0x0000000000134ed2 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a1c9f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000113b62 : or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000006fe2e : or byte ptr [rax - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret 0x894c
0x0000000000038dca : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a1bb0 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000118dc8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000032460 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000013807b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000139fbe : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000060158 : or byte ptr [rax - 0x77], cl ; lea eax, dword ptr [rax - 0x16000002] ; ret 0xffd3
0x00000000001664f9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e7a3 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000141dd8 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000832a0 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012d77b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000006ae6b : or byte ptr [rax - 0x77], cl ; push rbp ; mov cl, ch ; ret
0x00000000000897de : or byte ptr [rax - 0x77], cl ; push rbx ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007e8f0 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000003a288 : or byte ptr [rax - 0x77], cl ; ret
0x000000000011762f : or byte ptr [rax - 0x77], cl ; ret 0x3948
0x000000000013af6f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000f035a : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023b53 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039c63 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000013fb41 : or byte ptr [rax - 0x77], cl ; salc ; call 0x13bdb6
0x00000000000973fc : or byte ptr [rax - 0x7b], cl ; div byte ptr [rbp - 0x3c] ; xor eax, eax ; ret
0x000000000008975d : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000089807 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000089879 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x000000000008361b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000047c46 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000094a26 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094aae : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000540a2 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000405f5 : or byte ptr [rax - 0x7d], cl ; ror dword ptr [rax], -0x7d ; ret 0x4801
0x0000000000094a25 : or byte ptr [rax - 0x7d], r9b ; ret 0x4801
0x0000000000094aad : or byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000001b1228 : or byte ptr [rax - 0xb], ch ; jmp qword ptr [rcx]
0x000000000007181b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000001449fc : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019d0b5 : or byte ptr [rax], al ; add al, bh ; jno 0x19d0a9 ; call qword ptr [rax]
0x000000000019d0cd : or byte ptr [rax], al ; add al, dh ; jno 0x19d0c1 ; jmp qword ptr [rax]
0x0000000000097dfc : or byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000009808e : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b2c9e : or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000007e1bf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000122d98 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000001449fd : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147551 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144a21 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000007c83c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000000bf60 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000018130 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18
0x0000000000019858 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c1
0x0000000000022041 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000a9b49 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012d9c2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bb2b4 : or byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x0000000000049658 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000105a4d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000108580 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000d8b37 : or byte ptr [rax], bh ; or dword ptr [rax + 1], ecx ; ret 0x6280
0x00000000000a8dcd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a8e0b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a8dab : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006c02b : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000d8b36 : or byte ptr [rax], r15b ; or dword ptr [rax + 1], ecx ; ret 0x6280
0x000000000014af6e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012473f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00000000001b570d : or byte ptr [rbp + 0xb], al ; jp 0x1b5721 ; ret
0x00000000000ab8f7 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x000000000012de93 : or byte ptr [rbp + rcx*4 + 0x48], cl ; or byte ptr [rbp - 0x77], al ; ret 0x8b48
0x00000000000d55a6 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5389
0x00000000000e3816 : or byte ptr [rbp - 0x3a7cfe8f], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000b9f06 : or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000ab609 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000012de97 : or byte ptr [rbp - 0x77], al ; ret 0x8b48
0x000000000011505e : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x44], 0xc9 ; ret
0x000000000011451c : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000003c93 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fcf4 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000012e8ab : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x00000000000733d2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000003ac45 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000221e3 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000085343 : or byte ptr [rbx + 0xf4801e0], al ; ret 0x8348
0x000000000019dec5 : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000033bd3 : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x000000000004f42d : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000013d49e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000eb004 : or byte ptr [rbx - 0x76b3fe20], al ; out 0x89, al ; ret 0xca83
0x000000000010ba5a : or byte ptr [rbx - 9], bl ; fcomp dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x00000000001965e4 : or byte ptr [rbx], 0xfc ; call rax
0x00000000000cadc4 : or byte ptr [rbx], ch ; sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000004902b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000036783 : or byte ptr [rcx + 0x415d5bd0], 0x5c ; ret
0x0000000000053ee9 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000036832 : or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x0000000000141d45 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000116a9d : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000000e3c02 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000d7eb9 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x000000000019ea4b : or byte ptr [rcx + 0xb], al ; push rdx ; ret
0x00000000001a1afa : or byte ptr [rcx + 0xb], cl ; ret
0x000000000004743b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000480e0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013e303 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000001204bc : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00000000000731fa : or byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x1f466
0x000000000013accd : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x0000000000037bd7 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x0000000000039f0d : or byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; pop rbp ; ret
0x0000000000133269 : or byte ptr [rcx + rcx*4 - 1], cl ; call 0x1f4c6
0x0000000000039027 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x00000000001b2ff8 : or byte ptr [rcx + rdi*8], cl ; jmp qword ptr [rsi]
0x0000000000047442 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000078aa2 : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000a1cff : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000d853c : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000002cf3d : or byte ptr [rcx - 0x77], cl ; add byte ptr [r8 - 0x7d], r9b ; ret 0x4802
0x00000000000738cf : or byte ptr [rcx - 0x77], cl ; ret
0x0000000000032fdb : or byte ptr [rcx - 0x77], cl ; ret 0x1074
0x000000000003ccce : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000008404c : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000038f1a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e11e7 : or byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x00000000000374b1 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x0000000000034b18 : or byte ptr [rcx], 0xcf ; movd xmm0, edi ; ret
0x00000000000f6a62 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003583f : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f6b54 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d4397 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d4312 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000b9f03 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x00000000000d4352 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b8acd : or byte ptr [rcx], ch ; ret
0x0000000000125c4d : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000115530 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000023296 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e6f1d : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c166f : or byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6348
0x000000000007d66f : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000018503e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a31c4 : or byte ptr [rdi + 0xb], al ; jae 0x1a31d8 ; ret
0x00000000001a1039 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x00000000000601a7 : or byte ptr [rdi + r9 - 0x4a], r8b ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000601a8 : or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000005c2a2 : or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rcx - 0x7d], cl ; ret
0x0000000000027633 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000002e184 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007c0ff : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000079011 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000cdb66 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000128d28 : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006d631 : or byte ptr [rdi], cl ; mov dh, 0x46 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000007907b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012f559 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000443f8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000150e3b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x00000000000ddb29 : or byte ptr [rdi], cl ; test ebp, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000034947 : or byte ptr [rdi], cl ; wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000465b0 : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe8c1
0x0000000000020a7a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000001ae9ae : or byte ptr [rdx + 0xb], al ; add esp, dword ptr [rax + 0x8070c01] ; ret
0x000000000019e942 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x000000000019b9fd : or byte ptr [rdx], al ; add byte ptr [rsp + rbp*2 - 7], al ; call rsp
0x00000000000d42f2 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d4379 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x000000000012c4d9 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000fc472 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fc471 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000fc79c : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x850f
0x00000000001a49fb : or byte ptr [rsi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000000a48b1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001151b7 : or byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000019eba8 : or byte ptr [rsi - 0x17], bl ; jmp qword ptr [rbx]
0x0000000000096e44 : or byte ptr [rsi - 0x76b70008], al ; ret 0x8949
0x00000000000a1cc0 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d43af : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000d42e3 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003c92 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000096aa1 : or ch, bl ; ret 0x1f0f
0x00000000000466e9 : or cl, al ; call 0xffffffffc28da815
0x00000000000d8539 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000034e8b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000b9faf : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000002a580 : or cl, byte ptr [rax + 0x39] ; ret 0x1276
0x0000000000074db0 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000000743df : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e71b6 : or cl, byte ptr [rax - 0x77] ; ret 0x21e8
0x00000000000c0311 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000375f4 : or cl, byte ptr [rax - 0x7bf0f5b8] ; ret 6
0x0000000000070b0b : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000136cc9 : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x000000000013f272 : or cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000004f5c9 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000d5784 : or cl, byte ptr [rbp + 0x63] ; ret
0x0000000000035162 : or cl, byte ptr [rbx + 0x39] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x0000000000073397 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000001191a5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f5a9 : or cl, byte ptr [rcx + 0x1d129f1] ; ret 0xc139
0x000000000010f3bf : or cl, byte ptr [rcx - 0x7d] ; ret 0x4901
0x0000000000119125 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x0000000000168426 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000013d4a1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000002e076 : or cl, ch ; ret
0x000000000004bd7e : or cl, ch ; ret 0xffee
0x0000000000002bcf : or cl, cl ; clc ; ret
0x000000000008d785 : or cl, cl ; cmove rax, rdx ; ret
0x000000000015adc3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000010a6dd : or dh, bl ; ret
0x00000000000a9cf6 : or dh, byte ptr [rbp - 0x11] ; ret
0x0000000000026c8f : or dh, dh ; ret
0x0000000000081c13 : or dh, dh ; ret 0x7404
0x0000000000110155 : or dh, dh ; ret 0x7508
0x0000000000081c27 : or dh, dh ; ret 0xf04
0x000000000001ff8b : or dh, dh ; ret 0xf08
0x000000000002f476 : or dh, dh ; ret 0xfdf
0x00000000000bc284 : or dword ptr [rax + 1], ecx ; ret
0x00000000000d8b39 : or dword ptr [rax + 1], ecx ; ret 0x6280
0x0000000000120410 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a87a8 ; call rax
0x00000000001318b3 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000010fc24 : or dword ptr [rax - 0x75], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000011027f : or dword ptr [rax - 0x7d], ecx ; ret
0x000000000010e109 : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x0000000000089a0e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020780 : or dword ptr [rax], eax ; add bl, dh ; ret
0x000000000006536f : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000014492d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ae1f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144887 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000750ef : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000219ca : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f6028 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008bb33 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003f9bf : or dword ptr [rax], eax ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000a3e05 : or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000076cc2 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000f35cd : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f3b64 : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f290a : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x00000000000f3876 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000003a31d : or dword ptr [rbp + 0x3d4], 8 ; jmp 0x3a2f1
0x000000000016f0d6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000006f336 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000010dc16 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f206 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079a10 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007de58 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000095bc4 : or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000143086 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000035d93 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x0000000000080331 : or dword ptr [rdi], 0x11 ; add cl, ch ; ret 0xfffc
0x000000000006f210 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fc527 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000035ed6 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000011d73b : or dword ptr [rdi], ecx ; ret
0x0000000000168406 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000008b394 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xb60f
0x0000000000126e4b : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x203c
0x0000000000101b3d : or dword ptr [rdi], ecx ; xchg esp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000019ba25 : or dword ptr [rdx], eax ; add ah, al ; outsd dx, dword ptr [rsi] ; stc ; call rsp
0x00000000001152b3 : or dword ptr [rsi - 0x36], esi ; cmp dl, 0x2e ; cmove eax, r10d ; jmp 0x1152a4
0x00000000001b673b : or dword ptr [rsi], 0x38 ; ret
0x00000000000fca6a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003466b : or eax, 0x160870 ; orpd xmm0, xmm1 ; ret
0x0000000000034ba5 : or eax, 0x16109a ; movaps xmm0, xmm1 ; ret
0x0000000000034b56 : or eax, 0x1610e1 ; movaps xmm0, xmm1 ; ret
0x0000000000034b31 : or eax, 0x16110a ; movaps xmm0, xmm1 ; ret
0x00000000000a6761 : or eax, 0x1c478d48 ; ret
0x00000000000a75b1 : or eax, 0x1d478d48 ; ret
0x0000000000168488 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007c982 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000ff3af : or eax, 0x2c7ffc ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000000fca21 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x000000000019c6bd : or eax, 0x3cc40001 ; cld ; call rsp
0x00000000000b61a3 : or eax, 0x3d8d4800 ; cld ; ret
0x00000000000b2059 : or eax, 0x3d8d4800 ; ret
0x00000000000b5e7a : or eax, 0x3d8d4800 ; std ; ret
0x00000000000bcd29 : or eax, 0x440f4800 ; ret 0x8d48
0x0000000000096752 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000bea1a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000001ad63d : or eax, 0x500001 ; hlt ; jmp rcx
0x000000000006c122 : or eax, 0x5bd88948 ; ret
0x00000000000a5845 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000000eedac : or eax, 0x83001f0f ; ret 0xd101
0x00000000001454d7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000147071 : or eax, 0x83480000 ; ret 0xe910
0x0000000000145505 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a6ef9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000003a7af : or eax, 0x89000004 ; ret 0x3d83
0x000000000008d802 : or eax, 0x8c48348 ; ret
0x00000000000bb9a1 : or eax, 0xb60f4100 ; ret 0x5741
0x00000000000725bc : or eax, 0xc2890000 ; jmp 0x72565
0x00000000000bec94 : or eax, 0xc8f5b ; add rax, rcx ; jmp rax
0x00000000000714ca : or eax, 0xd089c289 ; pop rbx ; ret
0x00000000001ad5bd : or eax, 0xd7a00001 ; call qword ptr [rdx]
0x00000000001ad60d : or eax, 0xd8600001 ; jmp qword ptr [rax]
0x0000000000027121 : or eax, 0xea810000 ; ret 0
0x0000000000184673 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000010375e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015ac73 : or eax, 0xf7f0ff3 ; ret
0x000000000002dff9 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000355ad : or eax, 0xffffffff ; ret
0x00000000001a0cf4 : or eax, dword ptr [r10] ; ret 0xe0a
0x00000000000ffa25 : or eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x00000000001446cd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147211 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001446f1 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001b8c64 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, al ; ret
0x00000000001b8b3c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x000000000012d982 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000049c6d : or eax, dword ptr [rax] ; add dh, dh ; ret
0x00000000000d0b57 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d05b9 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000cc981 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008b246 : or eax, dword ptr [rax] ; ret
0x00000000001ac8cc : or eax, dword ptr [rbx] ; ret
0x0000000000020518 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a068e : or eax, dword ptr [rdx] ; ret 0x900e
0x00000000001a0cf5 : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000036698 : or eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000119170 : or eax, edi ; bswap eax ; ret
0x0000000000107056 : or eax, edi ; ret
0x0000000000094a14 : or eax, edx ; mov qword ptr [rdi], r8 ; pop rbx ; ret
0x0000000000107092 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003a47f : or eax, edx ; ret
0x0000000000034e74 : or eax, esi ; je 0x34e21 ; ret
0x00000000000348d5 : or eax, esi ; movq xmm0, rax ; ret
0x0000000000107095 : or eax, esi ; or rax, rdi ; ret
0x00000000000e2e6e : or ebp, 1 ; add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe2e5f
0x000000000007d624 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001a9b2e : or ebp, dword ptr [rcx + 0xa] ; ret
0x0000000000128404 : or ebp, dword ptr [rdx] ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000c87a3 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000011027d : or ebp, ebx ; or dword ptr [rax - 0x7d], ecx ; ret
0x0000000000106e54 : or ebx, dword ptr [rbx + 0x5d] ; ret
0x000000000010c56c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000019c5f9 : or ebx, edi ; call rsp
0x000000000015ae33 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000076f0e : or ebx, esi ; ret
0x0000000000079c1b : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x00000000000c0369 : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000033f43 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ffb37 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000001108ed : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x000000000007de59 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000aaad4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000aab24 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000241f3 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x00000000000a5803 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000deff7 : or ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfa09
0x00000000001a318e : or ecx, dword ptr [rdx + 0xa] ; ret
0x00000000001a9c39 : or ecx, esi ; call qword ptr [rcx]
0x00000000001a9bb9 : or ecx, esi ; jmp qword ptr [rcx]
0x000000000010e52c : or edi, dword ptr [rax + 1] ; ret
0x000000000012ddd4 : or edi, dword ptr [rax + 2] ; ret
0x0000000000112e64 : or edi, dword ptr [rax + 7] ; ret
0x0000000000188034 : or edi, dword ptr [rax - 0x5cf5000d] ; jmp qword ptr [rax]
0x00000000001b570f : or edi, dword ptr [rdx + 0xa] ; ret
0x00000000001a2964 : or edi, dword ptr [rsi + rcx - 0x70] ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001bb051 : or edi, eax ; call qword ptr [rdx]
0x00000000001bb099 : or edi, eax ; jmp qword ptr [rcx]
0x000000000019b1f1 : or edi, eax ; jmp rsp
0x0000000000034b19 : or edi, ecx ; movd xmm0, edi ; ret
0x000000000017338d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a9197 : or edi, edi ; loope 0xa920a ; nop dword ptr [rax + rax] ; ret
0x00000000000f6803 : or edi, edi ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001965e5 : or edi, esp ; call rax
0x00000000000349c9 : or edx, ecx ; sar edx, 0x1f ; not edx ; and eax, edx ; ret
0x00000000001a74e1 : or edx, edi ; call qword ptr [rax]
0x000000000019be71 : or edx, edi ; jmp rsp
0x00000000001b7c92 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00000000001a31c6 : or esi, dword ptr [rbx + 0xa] ; ret
0x000000000012ba04 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b7c93 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000006f316 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc4be : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000198819 : or esi, ebp ; call rsp
0x000000000015ad53 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f6f14 : or esi, ebx ; ret
0x000000000006f207 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079a11 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f67 : or esp, dword ptr [rdx] ; js 0x2f21 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000fb734 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000001965a1 : or esp, edi ; call qword ptr [rax]
0x0000000000035d92 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000035ed5 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000168405 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000079197 : or r11b, bpl ; cdq ; mov edx, eax ; jmp 0x7913c
0x000000000015aea2 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015ae32 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015adc2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000111314 : or r14b, sil ; ret 0x7508
0x00000000001a31c5 : or r14d, dword ptr [r11 + 0xa] ; ret
0x000000000015ad52 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001b570e : or r15d, dword ptr [r10 + 0xa] ; ret
0x0000000000094a13 : or r8, r10 ; mov qword ptr [rdi], r8 ; pop rbx ; ret
0x00000000001b6de4 : or r8d, dword ptr [r11] ; ret
0x0000000000034e73 : or r8d, esi ; je 0x34e22 ; ret
0x000000000002a57f : or r9b, byte ptr [r8 + 0x39] ; ret 0x1276
0x00000000001a318d : or r9d, dword ptr [r10 + 0xa] ; ret
0x0000000000168487 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000355ac : or rax, 0xffffffffffffffff ; ret
0x000000000014c672 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036697 : or rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000107097 : or rax, rdi ; ret
0x000000000003a47e : or rax, rdx ; ret
0x00000000000348d4 : or rax, rsi ; movq xmm0, rax ; ret
0x0000000000107094 : or rax, rsi ; or rax, rdi ; ret
0x00000000001a9b2d : or rbp, qword ptr [rcx + 0xa] ; ret
0x0000000000110154 : or sil, sil ; ret 0x7508
0x0000000000034670 : orpd xmm0, xmm1 ; ret
0x0000000000034671 : orps xmm0, xmm1 ; ret
0x0000000000034a2e : orps xmm0, xmm3 ; ret
0x000000000004a8b0 : out -0x10, eax ; mov qword ptr [r9 + r8*4], rdi ; call qword ptr [r10 + rax*8 - 0x40]
0x0000000000186f4d : out -0x11, eax ; call rax
0x00000000001986f9 : out -0x13, eax ; jmp qword ptr [rbx + rax*8]
0x0000000000111cb2 : out -0x18, eax ; cwde ; ret 0xffff
0x00000000000c73ed : out -0x18, eax ; int 0x80
0x00000000000731fd : out -0x18, eax ; pop rbp ; ret 0xfffa
0x00000000000f6072 : out -0x18, eax ; push -0x76000003 ; ret 0xcb8
0x0000000000048527 : out -0x18, eax ; ret
0x00000000000ec858 : out -0x18, eax ; ret 0x359
0x0000000000183520 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000ff371 : out -0x3a, eax ; inc dword ptr [rax] ; ret
0x00000000000fe08d : out -0x6f, eax ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000039635 : out -0x77, eax ; ret
0x000000000003017e : out -0x77, eax ; ret 0x8b4c
0x00000000000974e7 : out -0x7c, eax ; sal byte ptr [rbx + 0x5b], 0x5d ; ret
0x000000000002e3a3 : out -0x80, eax ; sete al ; ret
0x0000000000185248 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000001af599 : out -0xc, eax ; jmp qword ptr [rcx]
0x000000000015a6ba : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000187375 : out -0xf, eax ; call rax
0x0000000000187381 : out -0xf, eax ; inc eax ; out -0xf, eax ; call rax
0x0000000000187371 : out -0xf, eax ; jmp qword ptr [rax - 0x2f000e19]
0x0000000000187389 : out -0xf, eax ; jmp rax
0x000000000005f07c : out -1, eax ; call qword ptr [rax + 0x8c28348]
0x0000000000185cad : out -1, eax ; call rdx
0x000000000005d426 : out -1, eax ; dec dword ptr [rax - 0x39] ; ret
0x00000000001a1782 : out -1, eax ; ret 0
0x00000000001aaf5d : out 0, al ; add byte ptr [rax - 0x14], ah ; int1 ; call rdi
0x000000000012e399 : out 0, al ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000198cb5 : out 0, al ; add byte ptr [rdx], dh ; out dx, al ; call rsp
0x00000000001ab075 : out 0, eax ; add byte ptr [rax], ch ; int1 ; int1 ; jmp rdi
0x0000000000119179 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000112211 : out 0x31, eax ; shr al, 0xb7 ; ret
0x0000000000085ab3 : out 0x33, al ; add byte ptr [rbp - 0xcf98740], al ; ret
0x00000000000371ab : out 0x41, eax ; call rdi
0x00000000000ebda5 : out 0x48, al ; mov edi, dword ptr [rbp - 0x78] ; call r14
0x00000000000371bc : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x00000000000371e5 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000088cc2 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012ab4c : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000119033 : out 0x48, al ; mov edi, ebp ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000012e7a6 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000087dc4 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000012a728 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000861d2 : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000120975 : out 0x48, eax ; mov eax, dword ptr [rsp] ; call rax
0x00000000000aabc0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000474d8 : out 0x48, eax ; mov eax, edx ; ret
0x000000000013526e : out 0x48, eax ; mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x0000000000088e17 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000000ac2a3 : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000007cd03 : out 0x5b, al ; ret
0x00000000001385c8 : out 0x5b, eax ; ret
0x00000000000cd171 : out 0x89, al ; fbld dword ptr [rsp + rax*2 - 0x75] ; add al, ch ; ret 0x29e
0x00000000000adb39 : out 0x89, al ; fucompi st(0) ; call rdx
0x00000000000eb00a : out 0x89, al ; ret 0xca83
0x0000000000002466 : out 0xa9, al ; ret 0xbd07
0x00000000000f6801 : out 0xe8, al ; or edi, edi ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cdf98 : out 0xe8, al ; ret 0xfc13
0x000000000018636d : out 0xed, al ; call rsp
0x0000000000130e27 : out 0xee, al ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000186f49 : out 0xef, al ; dec dword ptr [rax] ; out -0x11, eax ; call rax
0x0000000000186f55 : out 0xef, al ; jmp qword ptr [rax]
0x0000000000116fdd : out 0xf, al ; xchg eax, esi ; ror byte ptr [rcx + rdi - 0x17], 0xf ; xchg eax, ebx ; ret 0x830f
0x000000000003d429 : out 0xf, eax ; xchg eax, ebp ; ret 0x941
0x0000000000187365 : out 0xf1, al ; call qword ptr [rax]
0x0000000000187361 : out 0xf1, al ; jmp rax
0x000000000015a63a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000095939 : out 0xf3, al ; ret
0x00000000001b6039 : out 0xf6, al ; call rcx
0x00000000001b6051 : out 0xf6, al ; jmp qword ptr [rdi]
0x00000000001b9f01 : out 0xf7, al ; call qword ptr [rdx]
0x0000000000185c71 : out 0xff, al ; call rdx
0x0000000000185db1 : out 0xff, al ; jmp qword ptr [rbx]
0x0000000000070adf : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000051d01 : out 1, al ; add byte ptr [rax - 0x77], cl ; ret 0x57e9
0x000000000005e677 : out 1, al ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000001bb095 : out 1, eax ; add byte ptr [rax + 0xb], ch ; clc ; jmp qword ptr [rcx]
0x00000000001bb04d : out 1, eax ; add byte ptr [rax], dl ; or edi, eax ; call qword ptr [rdx]
0x000000000019b5e5 : out 1, eax ; add byte ptr [rcx + rsi*4 - 8], dl ; call rsp
0x000000000012489c : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x0000000000124a5d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000020ada : out 4, eax ; add rdi, rbp ; call rax
0x000000000011e7f1 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000094889 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000001244bf : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x1244cc ; ret
0x00000000001bc6f3 : out dx, al ; add dword ptr [rax], eax ; ret 0x502
0x00000000000d511e : out dx, al ; add dword ptr [rcx + 0x29], ecx ; ret 0x2948
0x00000000000e7f6f : out dx, al ; add eax, 0xf602e683 ; ret 0xf10
0x00000000001244bc : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1244cf ; ret
0x0000000000077ea3 : out dx, al ; call 0x49c28
0x000000000018650e : out dx, al ; call qword ptr [rax]
0x00000000001a7392 : out dx, al ; call qword ptr [rcx]
0x00000000001a6d9a : out dx, al ; call qword ptr [rdx]
0x00000000000ba8ce : out dx, al ; call r12
0x0000000000088e1d : out dx, al ; call rax
0x00000000001a7cea : out dx, al ; call rcx
0x0000000000186e6e : out dx, al ; call rsp
0x0000000000186db6 : out dx, al ; dec dword ptr [rax + 0x2cffee72] ; je 0x186db6 ; jmp rsp
0x0000000000186d36 : out dx, al ; dec dword ptr [rax - 0x2f00118e] ; jno 0x186d36 ; call rax
0x0000000000186d9e : out dx, al ; dec dword ptr [rax - 0x2f00118e] ; jno 0x186d9e ; call rax
0x0000000000139e8f : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130e28 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000133294 : out dx, al ; dec dword ptr [rcx + rcx*4 - 9] ; call 0x1f4c7
0x0000000000198d42 : out dx, al ; dec dword ptr [rsp + rbp*8 - 0x1a6c0000] ; out dx, al ; call rsp
0x0000000000198a72 : out dx, al ; dec esp ; fadd dword ptr [rax] ; add byte ptr [rdx + rcx*2], al ; out dx, al ; jmp rsp
0x0000000000198b02 : out dx, al ; dec esp ; fild dword ptr [rax] ; add byte ptr [rdi + rdx*2 - 0x12], dh ; jmp rsp
0x0000000000198b5a : out dx, al ; dec esp ; fld qword ptr [rax] ; add byte ptr [rcx], ah ; out dx, al ; jmp rsp
0x00000000001988f2 : out dx, al ; dec esp ; iretd ; add byte ptr [rax], al ; mov ah, 0x1a ; out dx, al ; jmp rsp
0x00000000001987ea : out dx, al ; dec esp ; leave ; add byte ptr [rax], al ; add al, 6 ; out dx, al ; jmp rsp
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000184677 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000186d7e : out dx, al ; inc eax ; je 0x186d76 ; call rax
0x0000000000186cfa : out dx, al ; jmp qword ptr [rax]
0x00000000001a6c02 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a68d2 : out dx, al ; jmp qword ptr [rdi]
0x00000000001a688a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a749a : out dx, al ; jmp qword ptr [rsi]
0x00000000001a6f7a : out dx, al ; jmp rdx
0x0000000000186dbe : out dx, al ; jmp rsp
0x0000000000003759 : out dx, al ; jne 0x3739 ; ret 0x975
0x0000000000186cf2 : out dx, al ; lcall ptr [rax - 0x6700118f] ; jno 0x186cf2 ; jmp qword ptr [rax]
0x0000000000198812 : out dx, al ; lcall ptr [rdx + rcx*8 + 0x9140000] ; out dx, al ; call rsp
0x0000000000198892 : out dx, al ; ljmp ptr [rbp + rcx*8 + 0x14040000] ; out dx, al ; call rsp
0x0000000000186dba : out dx, al ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000186dce : out dx, al ; ljmp ptr [rsp + rsi*2] ; out dx, al ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x0000000000132c3f : out dx, al ; mov dword ptr [rax], 2 ; call 0x12ef49
0x0000000000003153 : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000015248a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000baed3 : out dx, al ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x00000000000874b2 : out dx, al ; mov rdi, rbx ; call rax
0x0000000000141ddb : out dx, al ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000015aa4a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014acce : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d853b : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000198c02 : out dx, al ; push qword ptr [rax + 0x68640000] ; out dx, al ; call rsp
0x0000000000198ce2 : out dx, al ; push qword ptr [rax + rbp*8] ; add ah, dl ; ret 0xffee
0x0000000000186506 : out dx, al ; push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; out dx, al ; push rax ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x0000000000186e76 : out dx, al ; push qword ptr [rsp + rsi*2 - 0x12] ; jmp rsp
0x000000000018650a : out dx, al ; push rax ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x000000000006ad5f : out dx, al ; ret
0x000000000002ff69 : out dx, al ; ret 0x15
0x0000000000002596 : out dx, al ; ret 0x88ad
0x00000000001a7421 : out dx, al ; stc ; call qword ptr [rax]
0x000000000019635d : out dx, al ; sti ; call qword ptr [rax]
0x00000000000cc7ef : out dx, al ; sti ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f8108 : out dx, al ; sub r8, rcx ; mov rdi, r8 ; call 0x943f9
0x00000000000ab5a9 : out dx, al ; xor eax, eax ; ret
0x00000000000a9e6d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000198d8d : out dx, eax ; add byte ptr [rax], al ; adc al, 0xfc ; out dx, al ; call rsp
0x0000000000064d40 : out dx, eax ; add dword ptr [rax + 1], ecx ; ret
0x000000000003d1b6 : out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000003d53e : out dx, eax ; add dword ptr [rax - 0x7d], ecx ; ret 0xf04
0x000000000012355a : out dx, eax ; add ecx, dword ptr [rcx + rcx*4 + 0x55] ; mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000139e09 : out dx, eax ; add rbx, r12 ; add r15d, 1 ; call r14
0x00000000001723bd : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000062bda : out dx, eax ; call 0x1f4c7
0x00000000000ed793 : out dx, eax ; call 0x89a53
0x00000000000fb872 : out dx, eax ; call 0xf7b03
0x0000000000186f8e : out dx, eax ; call qword ptr [rax + 0x2e]
0x000000000012e39f : out dx, eax ; call qword ptr [rbx]
0x00000000001a8182 : out dx, eax ; call qword ptr [rcx]
0x00000000001a823a : out dx, eax ; call qword ptr [rdi]
0x00000000001204bf : out dx, eax ; call r12
0x000000000003902d : out dx, eax ; call r14
0x00000000000371e8 : out dx, eax ; call r15
0x000000000006d836 : out dx, eax ; call r8
0x0000000000020ade : out dx, eax ; call rax
0x00000000000ac430 : out dx, eax ; call rbx
0x0000000000085237 : out dx, eax ; call rcx
0x000000000012de79 : out dx, eax ; call rdx
0x0000000000186f6e : out dx, eax ; call rsi
0x000000000019908a : out dx, eax ; call rsp
0x0000000000195ccd : out dx, eax ; cli ; jmp qword ptr [rax]
0x0000000000186f6a : out dx, eax ; dec dword ptr [rax + rbp*8] ; out dx, eax ; call rsi
0x0000000000186f66 : out dx, eax ; dec dword ptr [rax - 0x16] ; out dx, eax ; dec dword ptr [rax + rbp*8] ; out dx, eax ; call rsi
0x0000000000134405 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134444 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000186f4a : out dx, eax ; dec dword ptr [rax] ; out -0x11, eax ; call rax
0x0000000000198fa2 : out dx, eax ; dec esp ; cld ; add byte ptr [rax], al ; xchg eax, esp ; jp 0x198fa3 ; jmp rsp
0x0000000000198fe2 : out dx, eax ; dec esp ; std ; add byte ptr [rax], al ; xor al, 0x7e ; out dx, eax ; jmp rsp
0x00000000001af831 : out dx, eax ; hlt ; jmp qword ptr [rsi]
0x000000000019b0c1 : out dx, eax ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x0000000000198f42 : out dx, eax ; inc esp ; cli ; add byte ptr [rax], al ; and al, 0x63 ; out dx, eax ; jmp rsp
0x000000000009e7f5 : out dx, eax ; jmp 0x9e20d
0x000000000009eb3b : out dx, eax ; jmp 0x9e65f
0x0000000000186f56 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a84c2 : out dx, eax ; jmp qword ptr [rbx]
0x000000000012c5b8 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x00000000001a8522 : out dx, eax ; jmp rbx
0x0000000000198f4a : out dx, eax ; jmp rsp
0x000000000012cad6 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000114f40 : out dx, eax ; leave ; ret
0x000000000013abb2 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013ab66 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000001522ba : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001523b6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152302 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000105ea8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000022aec : out dx, eax ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000047b90 : out dx, eax ; mov rax, rdx ; ret
0x0000000000131da0 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000131bab : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012ab4f : out dx, eax ; mov rcx, r13 ; call rbx
0x0000000000037755 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000015aaca : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000007e6c3 : out dx, eax ; neg rdi ; call qword ptr [r15]
0x000000000014adcd : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001733bc : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000119036 : out dx, eax ; pop rbp ; pop r12 ; pop r13 ; jmp rax
0x00000000000832a3 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x00000000001731d9 : out dx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f4c9
0x00000000000740f1 : out dx, eax ; pop rbx ; ret
0x0000000000186f46 : out dx, eax ; push rax ; out 0xef, al ; dec dword ptr [rax] ; out -0x11, eax ; call rax
0x000000000016dd23 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016dd38 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016dd4d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a9cf8 : out dx, eax ; ret
0x00000000000a93e3 : out dx, eax ; ret 0xf66
0x000000000016f23c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f225 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f20e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016dcca : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001962bd : out dx, eax ; sti ; call qword ptr [rax]
0x000000000019629d : out dx, eax ; sti ; push qword ptr [rax] ; int1 ; sti ; jmp qword ptr [rax]
0x000000000012d77e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000470a8 : out dx, eax ; xor eax, eax ; ret
0x000000000014697e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000be2f1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010c2d6 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001701de : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000187e05 : outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000187185 : outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000196b55 : outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rsi + 0x26fffc6d]
0x0000000000196c91 : outsb dx, byte ptr [rsi] ; cld ; call rsp
0x0000000000196c8d : outsb dx, byte ptr [rsi] ; cld ; inc dword ptr [rsi + rbp*2 - 4] ; call rsp
0x0000000000196b11 : outsb dx, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000187e01 : outsb dx, byte ptr [rsi] ; inc edx ; outsb dx, byte ptr [rsi] ; call qword ptr [rax]
0x0000000000184e23 : outsb dx, byte ptr [rsi] ; ja 0x184dac ; ret 0x48f
0x0000000000187d7d : outsb dx, byte ptr [rsi] ; jmp rsp
0x0000000000186509 : outsb dx, byte ptr [rsi] ; out dx, al ; push rax ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x0000000000182b64 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000008f70a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000032c1d : outsd dx, dword ptr [rsi] ; add dh, al ; add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d4c83 : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e15bf4
0x0000000000196b0d : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffc6e]
0x0000000000196d05 : outsd dx, dword ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000196bc9 : outsd dx, dword ptr [rsi] ; cld ; call rdx
0x0000000000196bc5 : outsd dx, dword ptr [rsi] ; cld ; inc dword ptr [rdx + 0x6f] ; cld ; call rdx
0x0000000000196b49 : outsd dx, dword ptr [rsi] ; cld ; jmp rsi
0x00000000001151ba : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000089e88 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fdde : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000d4c7f : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e15bf8
0x00000000001a7eb1 : outsd dx, dword ptr [rsi] ; out dx, eax ; call rax
0x000000000016f03d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016f0dd : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008d4fa : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d4ff : outsd dx, dword ptr [rsi] ; ret
0x0000000000183526 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000152bf7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000016f0e2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000e2e75 : outsd dx, dword ptr [rsi] ; ret 0xdeeb
0x000000000008d54a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000019ba29 : outsd dx, dword ptr [rsi] ; stc ; call rsp
0x00000000000884d5 : outsd dx, dword ptr [rsi] ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000183525 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001445c2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000aae14 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000aadff : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000001445c1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000184925 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000184926 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000009ef31 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000009f5b5 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000000349a1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034ca1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000009f5c3 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f665 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9f6e9 ; xor eax, eax ; ret
0x00000000000349a0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034ca0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000008b706 : pmovmskb edx, mm4 ; test edx, edx ; je 0x8b71a ; bsf eax, edx ; ret
0x00000000000762ad : pmullw mm7, mm7 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000126e45 : pop qword ptr [rsi + 0x3c000002] ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x203c
0x0000000000114bf5 : pop r10 ; ret
0x0000000000184daf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000084ef2 : pop r12 ; jmp rax
0x0000000000046a56 : pop r12 ; mov eax, edx ; ret
0x000000000010294f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102969 : pop r12 ; mov esi, 3 ; jmp rax
0x0000000000070f1e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001731dc : pop r12 ; pop r13 ; jmp 0x1f4c6
0x0000000000119038 : pop r12 ; pop r13 ; jmp rax
0x000000000010413b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6ae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002189b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000339be : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000232f0 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e545 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fbea : pop r12 ; pop r13 ; ret
0x00000000000395f6 : pop r12 ; pop rbp ; ret
0x000000000001fc33 : pop r12 ; ret
0x000000000012f24e : pop r12 ; sete al ; movzx eax, al ; ret
0x00000000001731de : pop r13 ; jmp 0x1f4c4
0x000000000011903a : pop r13 ; jmp rax
0x0000000000041a2e : pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x00000000000418cc : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000010413d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6b0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002189d : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000339c0 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000232f2 : pop r13 ; pop r14 ; ret
0x0000000000074a66 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006e547 : pop r13 ; pop rbp ; ret
0x000000000001fbec : pop r13 ; ret
0x0000000000041a30 : pop r14 ; pop r15 ; fmul st(0) ; ret
0x00000000000418ce : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000010413f : pop r14 ; pop r15 ; jmp rax
0x000000000001f6b2 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002189f : pop r14 ; pop r15 ; ret
0x00000000000339c2 : pop r14 ; pop rbp ; ret
0x00000000000232f4 : pop r14 ; ret
0x0000000000074a68 : pop r14 ; sar rax, 2 ; ret
0x0000000000041a32 : pop r15 ; fmul st(0) ; ret
0x00000000000418d0 : pop r15 ; fmulp st(1) ; ret
0x0000000000104141 : pop r15 ; jmp rax
0x000000000001f6b4 : pop r15 ; pop rbp ; ret
0x00000000000218a1 : pop r15 ; ret
0x000000000007f57c : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000001347b6 : pop r8 ; mov eax, 1 ; ret
0x0000000000195baf : pop r9 ; clc ; ret 0x6e1f
0x00000000000edd1b : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000134eee : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000019e348 : pop rax ; add ch, cl ; call qword ptr [rcx]
0x000000000009636d : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001350b4 : pop rax ; call rax
0x0000000000196fa9 : pop rax ; cld ; call qword ptr [rax - 0x2f0003a7]
0x0000000000196fe9 : pop rax ; cld ; call qword ptr [rax]
0x00000000001b3db8 : pop rax ; cmp al, 0xf6 ; jmp rdi
0x00000000001a4941 : pop rax ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000134ef6 : pop rax ; jmp rcx
0x00000000001b16c8 : pop rax ; jo 0x1b16c3 ; jmp qword ptr [rcx]
0x000000000007f57d : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000001347b7 : pop rax ; mov eax, 1 ; ret
0x000000000002e368 : pop rax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e2f6 : pop rax ; mov eax, dword ptr [rdx + rax*4] ; ret
0x0000000000120711 : pop rax ; mov eax, edx ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e7fe : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000102058 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000baabf : pop rax ; mov rdi, qword ptr [rsp + 0x68] ; call r15
0x000000000018b734 : pop rax ; movsxd rdi, edx ; push qword ptr [rax + 0x63] ; cli ; call qword ptr [rax]
0x00000000000e42bd : pop rax ; or bh, dh ; ret
0x00000000000a3e04 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001a6d98 : pop rax ; out dx, al ; call qword ptr [rdx]
0x00000000001a6f78 : pop rax ; out dx, al ; jmp rdx
0x000000000001f574 : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000106ee9 : pop rax ; pop rdi ; call rax
0x0000000000142f01 : pop rax ; pop rdx ; pop rbx ; ret
0x000000000003a518 : pop rax ; ret
0x00000000001aee28 : pop rax ; salc ; hlt ; call qword ptr [rbx]
0x0000000000195de9 : pop rax ; sti ; jmp qword ptr [rax]
0x000000000019c8c8 : pop rax ; sub ebp, eax ; call rax
0x00000000001ae558 : pop rax ; xchg eax, edi ; hlt ; jmp qword ptr [rcx]
0x00000000001a8c28 : pop rax ; xor dh, al ; jmp rdx
0x00000000001a0738 : pop rax ; xor dl, bh ; jmp qword ptr [rcx]
0x00000000000da3e6 : pop rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000011e960 : pop rbp ; add al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001976e5 : pop rbp ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; fucomi st(0) ; call rsp
0x00000000001a265d : pop rbp ; add byte ptr [rax], al ; rcr ch, 0xec ; jmp qword ptr [rbx]
0x0000000000033f5a : pop rbp ; add cl, byte ptr [rbp - 0x77] ; in eax, -0x17 ; ret 0xfffd
0x000000000006d1d7 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000012e8ad : pop rbp ; add eax, edx ; ret
0x000000000012824f : pop rbp ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001731df : pop rbp ; jmp 0x1f4c3
0x00000000000733d4 : pop rbp ; jmp rax
0x000000000012bf85 : pop rbp ; jmp rcx
0x000000000012d782 : pop rbp ; jmp rdx
0x0000000000084ef1 : pop rbp ; pop r12 ; jmp rax
0x0000000000046a55 : pop rbp ; pop r12 ; mov eax, edx ; ret
0x000000000010294e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102968 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000070f1d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001731db : pop rbp ; pop r12 ; pop r13 ; jmp 0x1f4c7
0x0000000000119037 : pop rbp ; pop r12 ; pop r13 ; jmp rax
0x000000000010413a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002189a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000232ef : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fbe9 : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fc32 : pop rbp ; pop r12 ; ret
0x000000000012f24d : pop rbp ; pop r12 ; sete al ; movzx eax, al ; ret
0x000000000012cb11 : pop rbp ; pop r13 ; pop r14 ; ret
0x0000000000041a2f : pop rbp ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x00000000000418cd : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000010413e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6b1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002189e : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000339c1 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000232f3 : pop rbp ; pop r14 ; ret
0x0000000000074a67 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x000000000006e548 : pop rbp ; pop rbp ; ret
0x0000000000047448 : pop rbp ; pop rbx ; ret
0x000000000001f576 : pop rbp ; ret
0x00000000000731ff : pop rbp ; ret 0xfffa
0x000000000013f64f : pop rbp ; ret 0xfffb
0x000000000019cf81 : pop rbp ; std ; jmp qword ptr [rdx]
0x000000000012dde4 : pop rbp ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000112e91 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x000000000019c4f5 : pop rbx ; add dword ptr [rax], eax ; mov ah, 0xc2 ; cli ; jmp rsp
0x00000000001820f8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a9aec : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000a9b1f : pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000114e7f : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001820f6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a9ba5 : pop rbx ; div esi ; mov eax, eax ; ret
0x0000000000070c66 : pop rbx ; jmp rax
0x00000000000c65e5 : pop rbx ; lea rax, qword ptr [rax + rdx*8] ; ret
0x0000000000071f50 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000071f3c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000d4342 : pop rbx ; mov eax, 1 ; ret
0x00000000000f036b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000003a515 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011f971 : pop rbx ; mov eax, dword ptr [rdx + rax*8 + 4] ; ret
0x00000000000a9b8c : pop rbx ; mov eax, eax ; ret
0x00000000000cab03 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f4d9 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006cbb2 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000072bb1 : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc63b : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000051f2e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000073630 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000073478 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000070407 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002eb0e : pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000ff04a : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000071039 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000133014 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000010ba5b : pop rbx ; neg eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000339bd : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006e544 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000395f5 : pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000b50a4 : pop rbx ; pop r14 ; ret
0x000000000012e8ac : pop rbx ; pop rbp ; add eax, edx ; ret
0x00000000000733d3 : pop rbx ; pop rbp ; jmp rax
0x000000000012bf84 : pop rbx ; pop rbp ; jmp rcx
0x000000000012d781 : pop rbx ; pop rbp ; jmp rdx
0x0000000000084ef0 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000046a54 : pop rbx ; pop rbp ; pop r12 ; mov eax, edx ; ret
0x000000000010294d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102967 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x0000000000070f1c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000001731da : pop rbx ; pop rbp ; pop r12 ; pop r13 ; jmp 0x1f4c8
0x00000000000232ee : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fbe8 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fcf8 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cb10 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f575 : pop rbx ; pop rbp ; ret
0x0000000000097484 : pop rbx ; pop rbx ; pop rbp ; ret
0x0000000000020e77 : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x00000000001853e0 : pop rbx ; ret 0x6f9
0x0000000000195e2d : pop rbx ; sti ; dec dword ptr [rdi - 0x76] ; std ; jmp qword ptr [rax]
0x00000000001019db : pop rbx ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3bf2 : pop rbx ; sub eax, 0x840f0200 ; ret 1
0x00000000000ac019 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000001fc2f : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001a21bd : pop rcx ; add byte ptr [rax], al ; add al, dl ; in al, dx ; jmp qword ptr [rax]
0x00000000001a223d : pop rcx ; add byte ptr [rax], al ; push rax ; shr ah, 1 ; call qword ptr [rax]
0x0000000000194f00 : pop rcx ; clc ; ret 0x6e1f
0x0000000000196fad : pop rcx ; cld ; call rax
0x000000000002e608 : pop rcx ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000ab8a3 : pop rcx ; cmp esi, edi ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x0000000000186139 : pop rcx ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000034b55 : pop rcx ; or eax, 0x1610e1 ; movaps xmm0, xmm1 ; ret
0x0000000000034b30 : pop rcx ; or eax, 0x16110a ; movaps xmm0, xmm1 ; ret
0x000000000013c31f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000101f9b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea8ea : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000101e52 : pop rcx ; ret 0xc383
0x00000000000c965b : pop rcx ; sar eax, 0x1f ; add rsp, 8 ; ret
0x00000000001ade51 : pop rcx ; stc ; call qword ptr [rax]
0x0000000000150e38 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000f71f2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000009eb49 : pop rdi ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000014b45d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000106eea : pop rdi ; call rax
0x000000000002de2f : pop rdi ; cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x0000000000041a33 : pop rdi ; fmul st(0) ; ret
0x00000000000418d1 : pop rdi ; fmulp st(1) ; ret
0x0000000000152859 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001a4ad1 : pop rdi ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000152669 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000018469e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000104142 : pop rdi ; jmp rax
0x0000000000183661 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000152489 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001522b9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001523b5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152301 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000001f6b5 : pop rdi ; pop rbp ; ret
0x00000000000218a2 : pop rdi ; ret
0x000000000010b7ad : pop rdi ; ret 0x2b
0x0000000000143c93 : pop rdi ; sub byte ptr [rax], al ; test eax, eax ; jne 0x143ca9 ; xor eax, eax ; ret
0x0000000000143cc3 : pop rdi ; sub byte ptr [rax], al ; test eax, eax ; jne 0x143cd9 ; xor eax, eax ; ret
0x0000000000143cf3 : pop rdi ; sub byte ptr [rax], al ; test eax, eax ; jne 0x143d09 ; xor eax, eax ; ret
0x0000000000097480 : pop rdi ; test al, al ; je 0x974e7 ; pop rbx ; pop rbp ; ret
0x0000000000145d46 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x0000000000140612 : pop rdx ; and al, 0x28 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x0000000000081c52 : pop rdx ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000005ea35 : pop rdx ; inc dword ptr [rbp + 0x4e0f44c0] ; loopne 0x5ea30 ; ret 0xfffe
0x0000000000003a56 : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x0000000000184281 : pop rdx ; je 0x18424b ; ret 0xacfc
0x0000000000003155 : pop rdx ; jmp 0xffffffffc25d0603
0x0000000000185247 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000114bf4 : pop rdx ; pop r10 ; ret
0x000000000011922d : pop rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010205c : pop rdx ; pop rbx ; ret
0x00000000000ea8e9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000c965a : pop rdx ; pop rcx ; sar eax, 0x1f ; add rsp, 8 ; ret
0x0000000000114c19 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x0000000000067037 : pop rdx ; ret 0xffff
0x0000000000184db0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000101a3a : pop rdx ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001ad878 : pop rdx ; sub al, 0xe7 ; jmp qword ptr [rax]
0x00000000000f3d90 : pop rdx ; sub eax, 0x538d4800 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ab435 : pop rdx ; test al, 0xf0 ; jne 0xab469 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014b35e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000108e2c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x00000000000762c2 : pop rsi ; cmp byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x29] ; ret
0x000000000006536e : pop rsi ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000041a31 : pop rsi ; pop r15 ; fmul st(0) ; ret
0x00000000000418cf : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000104140 : pop rsi ; pop r15 ; jmp rax
0x000000000001f6b3 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000218a0 : pop rsi ; pop r15 ; ret
0x00000000000339c3 : pop rsi ; pop rbp ; ret
0x00000000000232f5 : pop rsi ; ret
0x0000000000074a69 : pop rsi ; sar rax, 2 ; ret
0x00000000000f9279 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000146b90 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146044 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a4904 : pop rsp ; add byte ptr [rax], 0 ; fcom dword ptr [rdi - 0x13] ; jmp rax
0x000000000009e803 : pop rsp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x0000000000084bf0 : pop rsp ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001b0b04 : pop rsp ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 0xb], dl ; jmp qword ptr [rcx]
0x00000000000d73ac : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000147890 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000001b2f04 : pop rsp ; add word ptr [rax], ax ; call 0x271b252b
0x00000000000b5d24 : pop rsp ; and al, 0x44 ; jmp 0xb5cf0
0x00000000000ba5e5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000012d537 : pop rsp ; and al, 8 ; call rbx
0x00000000001735b4 : pop rsp ; and rax, 0 ; add bl, dh ; ret
0x0000000000199a69 : pop rsp ; call rsp
0x000000000019b86c : pop rsp ; cld ; add dword ptr [rax], eax ; test byte ptr [rdi], bh ; stc ; jmp rsp
0x00000000001891c9 : pop rsp ; cmc ; call qword ptr [rax]
0x00000000001aa104 : pop rsp ; fadd dword ptr [rax] ; add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x0000000000084ef3 : pop rsp ; jmp rax
0x0000000000109060 : pop rsp ; mov dl, 0x2b ; add byte ptr [rdx + rax + 0x5d], dh ; ret
0x0000000000046a57 : pop rsp ; mov eax, edx ; ret
0x0000000000102950 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010296a : pop rsp ; mov esi, 3 ; jmp rax
0x0000000000070f1f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000144a20 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000051d00 : pop rsp ; out 1, al ; add byte ptr [rax - 0x77], cl ; ret 0x57e9
0x00000000001731dd : pop rsp ; pop r13 ; jmp 0x1f4c5
0x0000000000119039 : pop rsp ; pop r13 ; jmp rax
0x0000000000041a2d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmul st(0) ; ret
0x00000000000418cb : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000010413c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f6af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002189c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000339bf : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000232f1 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000074a65 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006e546 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fbeb : pop rsp ; pop r13 ; ret
0x00000000000395f7 : pop rsp ; pop rbp ; ret
0x00000000000037f8 : pop rsp ; ret
0x0000000000003159 : pop rsp ; ret 0x52c0
0x000000000012f24f : pop rsp ; sete al ; movzx eax, al ; ret
0x00000000001bc204 : pop rsp ; stc ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call rcx
0x000000000008d7a8 : pop rsp ; xchg eax, ebx ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000001981c5 : popfq ; add byte ptr [rax], al ; add al, 0x82 ; jmp 0x1981d1
0x00000000001bc953 : popfq ; add eax, dword ptr [rip - 0x10000] ; add dword ptr [rbx], ecx ; ret
0x0000000000115697 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001b2069 : popfq ; cmc ; call rdi
0x00000000000d5662 : popfq ; hlt ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x00000000001a5aa9 : popfq ; in eax, dx ; call qword ptr [rdi]
0x00000000000f455f : popfq ; push rcx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f666f : popfq ; push rsp ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000e9425 : popfq ; ret
0x0000000000148270 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000015ab92 : psllq mm1, qword ptr [r15] ; jg 0x15abad ; ret
0x000000000015d662 : psllq mm1, qword ptr [r15] ; jg 0x15d67d ; ret
0x0000000000160182 : psllq mm1, qword ptr [r15] ; jg 0x16019d ; ret
0x000000000015ab93 : psllq mm1, qword ptr [rdi] ; jg 0x15abac ; ret
0x000000000015d663 : psllq mm1, qword ptr [rdi] ; jg 0x15d67c ; ret
0x0000000000160183 : psllq mm1, qword ptr [rdi] ; jg 0x16019c ; ret
0x00000000000a4fa6 : psllq mm1, qword ptr [rdi] ; jg 0xa4fba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a4fa5 : psllq mm1, qword ptr [rdi] ; jg 0xa4fbb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5007 : psllq mm1, qword ptr [rdi] ; jg 0xa501c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5c76 : psllq mm1, qword ptr [rdi] ; jg 0xa5c8a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5c75 : psllq mm1, qword ptr [rdi] ; jg 0xa5c8b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5cd7 : psllq mm1, qword ptr [rdi] ; jg 0xa5cec ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8086 : psllq mm1, qword ptr [rdi] ; jg 0xa809a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8085 : psllq mm1, qword ptr [rdi] ; jg 0xa809b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a80e7 : psllq mm1, qword ptr [rdi] ; jg 0xa80fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8b56 : psllq mm1, qword ptr [rdi] ; jg 0xa8b6a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8b55 : psllq mm1, qword ptr [rdi] ; jg 0xa8b6b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8bb7 : psllq mm1, qword ptr [rdi] ; jg 0xa8bcc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000d3a42 : push -0x3f7cb7ff ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000002be5 : push -0x7329150 ; ret
0x000000000002a097 : push -0x74fffffe ; cmp cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000000000f6074 : push -0x76000003 ; ret 0xcb8
0x000000000005c385 : push -0x7cb80000 ; ret
0x00000000001701c4 : push -0x9ffffff ; ret 0x7501
0x00000000000e5749 : push -0xc2e18 ; dec dword ptr [rax - 0x77] ; ret
0x000000000002077f : push -0xcfffff7 ; ret
0x00000000000ab427 : push -0xfb872b8 ; ret
0x000000000012c4da : push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000012c4dc : push 0x19 ; call qword ptr [rax]
0x00000000000fa588 : push 0x24748903 ; and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000ba396 : push 0x30 ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000085e8c : push 0x48f6894c ; mov edi, ebp ; call rax
0x0000000000124a03 : push 0x5bc03103 ; pop rbp ; pop r12 ; ret
0x00000000000e8d14 : push 0x5c415d5b ; pop r13 ; ret
0x00000000000f35cc : push 0x63480009 ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000196ef5 : push 0x67a0fffc ; cld ; call qword ptr [rax]
0x0000000000184e22 : push 0x6e ; ja 0x184dad ; ret 0x48f
0x00000000000b2057 : push 0xa3 ; or eax, 0x3d8d4800 ; ret
0x000000000008f16e : push 0xc ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000001b30b5 : push 0xc080001 ; stc ; jmp qword ptr [rsi]
0x0000000000066172 : push 0xd2 ; add byte ptr [rax], al ; mov r13d, eax ; jmp 0x66145
0x000000000019f191 : push 0xe9 ; jmp qword ptr [rcx]
0x0000000000196cf1 : push 0xfc ; inc dword ptr [rax + 0x71] ; cld ; call rax
0x00000000001b32b5 : push 1 ; add al, ch ; add esp, edi ; jmp qword ptr [rsi]
0x000000000013464e : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000a5a02 : push 5 ; add byte ptr [rax], al ; ret
0x000000000019c78b : push qword ptr [0xffffffffb8d40000] ; std ; call rsp
0x000000000004f769 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000001964af : push qword ptr [rax + 0x11] ; cld ; push qword ptr [rax] ; adc edi, esp ; call qword ptr [rax]
0x000000000019686b : push qword ptr [rax + 0x3b] ; cld ; jmp rsi
0x0000000000196803 : push qword ptr [rax + 0x40fffc49] ; cld ; call rax
0x0000000000196b17 : push qword ptr [rax + 0x40fffc6d] ; insd dword ptr [rdi], dx ; cld ; call rax
0x0000000000197227 : push qword ptr [rax + 0x40fffc91] ; xchg eax, ecx ; cld ; jmp rax
0x000000000019700f : push qword ptr [rax + 0x40fffc94] ; xchg eax, esp ; cld ; call rax
0x0000000000195f53 : push qword ptr [rax + 0x40fffd8f] ; nop ; std ; call rax
0x0000000000196f6f : push qword ptr [rax + 0x43] ; cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000195dbf : push qword ptr [rax + 0x4b] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018609f : push qword ptr [rax + 0x54] ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000195e2b : push qword ptr [rax + 0x5b] ; sti ; dec dword ptr [rdi - 0x76] ; std ; jmp qword ptr [rax]
0x0000000000196f2f : push qword ptr [rax + 0x60] ; cld ; call qword ptr [rax]
0x0000000000196f27 : push qword ptr [rax + 0x61] ; cld ; jmp rax
0x000000000018b737 : push qword ptr [rax + 0x63] ; cli ; call qword ptr [rax]
0x0000000000198c03 : push qword ptr [rax + 0x68640000] ; out dx, al ; call rsp
0x000000000019659b : push qword ptr [rax + 8] ; cld ; inc eax ; or esp, edi ; call qword ptr [rax]
0x0000000000198ce3 : push qword ptr [rax + rbp*8] ; add ah, dl ; ret 0xffee
0x0000000000133267 : push qword ptr [rax + rcx + 0x4c] ; mov edi, edi ; call 0x1f4c8
0x000000000018736f : push qword ptr [rax - 0x19] ; int1 ; jmp qword ptr [rax - 0x2f000e19]
0x0000000000196423 : push qword ptr [rax - 0x1d] ; sti ; inc eax ; in al, -5 ; call qword ptr [rax]
0x000000000018754b : push qword ptr [rax - 0x1f000e04] ; cld ; int1 ; call qword ptr [rax]
0x000000000018735f : push qword ptr [rax - 0x1f000e1a] ; out 0xf1, al ; call qword ptr [rax]
0x0000000000187607 : push qword ptr [rax - 0x3f000e00] ; add dl, dh ; call rax
0x000000000018757b : push qword ptr [rax - 0x3f000e03] ; std ; int1 ; call rax
0x000000000018737f : push qword ptr [rax - 0x3f000e19] ; out -0xf, eax ; call rax
0x00000000001872af : push qword ptr [rax - 0x3f000e24] ; fdivr st(1), st(0) ; call rax
0x000000000018711b : push qword ptr [rax - 0x3f000e83] ; jge 0x18711c ; call rax
0x0000000000196203 : push qword ptr [rax - 0x50] ; sti ; inc eax ; mov cl, 0xfb ; call qword ptr [rax]
0x00000000001871d3 : push qword ptr [rax - 0x79] ; cld ; jmp rax
0x000000000018755b : push qword ptr [rax - 3] ; int1 ; jmp qword ptr [rax]
0x00000000001964b3 : push qword ptr [rax] ; adc edi, esp ; call qword ptr [rax]
0x0000000000196837 : push qword ptr [rax] ; cld ; jmp qword ptr [rax + 0x20fffc41]
0x0000000000195cfb : push qword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000195da3 : push qword ptr [rax] ; cmp al, 0xfb ; call qword ptr [rax]
0x0000000000196a23 : push qword ptr [rax] ; cmp al, 0xfc ; jmp qword ptr [rax + 0x10fffc3b]
0x0000000000196a5b : push qword ptr [rax] ; cmp eax, 0x3cb0fffc ; cld ; jmp qword ptr [rax]
0x0000000000187277 : push qword ptr [rax] ; fscale ; call qword ptr [rax]
0x0000000000195ce3 : push qword ptr [rax] ; hlt ; cli ; inc dword ptr [rax] ; cmc ; cli ; jmp qword ptr [rax]
0x0000000000188af7 : push qword ptr [rax] ; hlt ; jmp qword ptr [rax]
0x00000000001962d7 : push qword ptr [rax] ; in eax, dx ; sti ; call qword ptr [rax]
0x000000000019629f : push qword ptr [rax] ; int1 ; sti ; jmp qword ptr [rax]
0x00000000000a480f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000195e5f : push qword ptr [rax] ; mov bh, ch ; jmp rax
0x000000000019635b : push qword ptr [rax] ; out dx, al ; sti ; call qword ptr [rax]
0x00000000001962bb : push qword ptr [rax] ; out dx, eax ; sti ; call qword ptr [rax]
0x0000000000186507 : push qword ptr [rax] ; outsb dx, byte ptr [rsi] ; out dx, al ; push rax ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x0000000000171b48 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000019be0b : push qword ptr [rbp + 0x4240002] ; cli ; jmp rsp
0x0000000000075aeb : push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000142020 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000198643 : push qword ptr [rbp + rdi*4 - 0x34cc0000] ; in eax, dx ; call rsp
0x0000000000073efd : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000197183 : push qword ptr [rbp + rdx*4 - 0x6abb0004] ; cld ; call rsp
0x00000000000c735e : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000047b8e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000001202e2 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x00000000001288ab : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017325c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000474d6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007cd01 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000000cabd5 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f5d38 : push qword ptr [rbx + 0x34] ; ret
0x000000000003559c : push qword ptr [rbx + 1] ; ret
0x00000000000f6d59 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x0000000000046b56 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000000740ec : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000018bbcf : push qword ptr [rbx + rdx*4 - 0x6c330006] ; cli ; jmp rsp
0x00000000001745b7 : push qword ptr [rbx + rdx*8 - 0x16] ; jmp rsp
0x0000000000195e9f : push qword ptr [rcx + 0x41fffd91] ; xchg eax, edx ; std ; jmp rcx
0x0000000000187d77 : push qword ptr [rcx + rcx*4] ; inc edx ; outsb dx, byte ptr [rsi] ; jmp rsp
0x000000000019824b : push qword ptr [rcx - 0x271c0000] ; jmp 0x19825b
0x0000000000195fcb : push qword ptr [rcx - 0x5f] ; std ; call qword ptr [rcx]
0x000000000019606b : push qword ptr [rcx - 0x5f] ; std ; call rax
0x0000000000195f9b : push qword ptr [rcx - 0x5f] ; std ; jmp qword ptr [rax]
0x000000000019602b : push qword ptr [rcx - 0x5f] ; std ; jmp rdi
0x0000000000195fc7 : push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; call qword ptr [rcx]
0x0000000000196067 : push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; call rax
0x0000000000195f97 : push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; jmp qword ptr [rax]
0x0000000000196027 : push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; jmp rdi
0x0000000000181473 : push qword ptr [rcx] ; and ebp, ebx ; jmp rdx
0x00000000000eccaf : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000075fc1 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000cdcac : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x00000000000773b4 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000bd1bd : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000004f76a : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000d1c89 : push qword ptr [rcx] ; shr bl, cl ; ret 0x8b4c
0x00000000001153cc : push qword ptr [rdi + 0x1b] ; ret
0x000000000003526c : push qword ptr [rdi + 0x21] ; ret
0x00000000000f7868 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f790c : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fc923 : push qword ptr [rdi + 0xa] ; ret
0x0000000000106e52 : push qword ptr [rdi + 0xb] ; pop rbx ; pop rbp ; ret
0x00000000000f6f12 : push qword ptr [rdi + 0xb] ; ret
0x00000000000355d1 : push qword ptr [rdi + 0xc] ; ret
0x00000000000cbe7c : push qword ptr [rdi + 1] ; ret
0x000000000003561b : push qword ptr [rdi + 2] ; ret
0x00000000000f6e1a : push qword ptr [rdi + 3] ; ret
0x00000000000f6e69 : push qword ptr [rdi + 4] ; ret
0x00000000000ca950 : push qword ptr [rdi + 5] ; ret
0x00000000000ca84f : push qword ptr [rdi + 6] ; ret
0x00000000000c7f86 : push qword ptr [rdi + 7] ; ret
0x0000000000035565 : push qword ptr [rdi + 8] ; ret
0x00000000000ff06c : push qword ptr [rdi + 9] ; ret
0x000000000007c276 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000001966d7 : push qword ptr [rdx + 0x42fffc47] ; cld ; call rdx
0x0000000000196bc3 : push qword ptr [rdx + 0x42fffc6f] ; outsd dx, dword ptr [rsi] ; cld ; call rdx
0x00000000001970bb : push qword ptr [rdx + 0x42fffc96] ; xchg eax, esi ; cld ; call rdx
0x000000000019b923 : push qword ptr [rdx + rax + 0x50740002] ; stc ; jmp rsp
0x000000000018632b : push qword ptr [rdx - 0x17] ; in eax, dx ; call qword ptr [rbx]
0x0000000000124163 : push qword ptr [rdx - 0x3dbbf0fe] ; ret
0x00000000001861c3 : push qword ptr [rip + 0x35ffede1] ; loope 0x1861c0 ; call qword ptr [rsi]
0x0000000000196633 : push qword ptr [rsi + 0x46fffc4b] ; cld ; call rsi
0x0000000000196b5f : push qword ptr [rsi + 0x46fffc6c] ; insb byte ptr [rdi], dx ; cld ; call rsi
0x0000000000197057 : push qword ptr [rsi + 0x46fffc93] ; xchg eax, ebx ; cld ; call rsi
0x00000000001860f3 : push qword ptr [rsi + 0x61] ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000187c67 : push qword ptr [rsi + 0x75] ; jmp rdx
0x0000000000109469 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000019679f : push qword ptr [rsi + rax*2 + 0x4644fffc] ; cld ; call rsp
0x0000000000196c8b : push qword ptr [rsi + rbp*2 + 0x6e44fffc] ; cld ; call rsp
0x0000000000188897 : push qword ptr [rsp + rax*2] ; hlt ; ljmp ptr [rdx] ; hlt ; jmp qword ptr [rax]
0x00000000001983db : push qword ptr [rsp + rbp*4 + 0x7d040000] ; in eax, dx ; jmp rsp
0x000000000019c673 : push qword ptr [rsp + rcx - 0x6d3bffff] ; sti ; jmp rsp
0x0000000000186e77 : push qword ptr [rsp + rsi*2 - 0x12] ; jmp rsp
0x00000000001891c3 : push qword ptr [rsp - 0xb] ; jmp rdx
0x00000000001891bf : push qword ptr [rsp - 0xb] ; push qword ptr [rsp - 0xb] ; jmp rdx
0x00000000001346e6 : push r12 ; mov eax, 1 ; ret
0x0000000000186150 : push r15 ; in eax, dx ; lcall ptr [rdi] ; push rdi ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x000000000007bedc : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000820e6 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007301a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007d631 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000012c76e : push rax ; adc dh, dh ; ret 0x7401
0x00000000001ad640 : push rax ; add ah, dh ; jmp rcx
0x00000000001a9a10 : push rax ; add al, 0xf1 ; call qword ptr [rsi]
0x000000000007bedd : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019e330 : push rax ; add ch, cl ; call qword ptr [rcx]
0x0000000000187617 : push rax ; add dl, dh ; inc dword ptr [rax] ; add edx, esi ; call qword ptr [rax]
0x000000000007900c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000005aa71 : push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001b18bd : push rax ; add dword ptr [rax], eax ; adc byte ptr [rcx - 0xb], bh ; jmp rdi
0x00000000001b190d : push rax ; add dword ptr [rax], eax ; mov al, 0x7a ; cmc ; jmp rax
0x000000000002db71 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000013b2f9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013af57 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000140871 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000de431 : push rax ; call 0xda723
0x00000000000103f8 : push rax ; call qword ptr [rbx]
0x00000000001874ef : push rax ; clc ; int1 ; call qword ptr [rax]
0x00000000001965af : push rax ; clc ; sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x0000000000196f95 : push rax ; cld ; call qword ptr [rax]
0x00000000001969f4 : push rax ; cld ; call rax
0x0000000000196614 : push rax ; cld ; jmp rax
0x0000000000186fb0 : push rax ; cmp al, dh ; call qword ptr [rax - 0x2f000fc7]
0x0000000000195da0 : push rax ; cmp bh, bl ; push qword ptr [rax] ; cmp al, 0xfb ; call qword ptr [rax]
0x0000000000049ceb : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000fc881 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x0000000000087344 : push rax ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x000000000018727f : push rax ; fcomi st(1) ; inc dword ptr [rax] ; fdivr st(1), st(0) ; call qword ptr [rax]
0x0000000000188ae3 : push rax ; hlt ; call rax
0x0000000000188b03 : push rax ; hlt ; jmp qword ptr [rax]
0x0000000000188adf : push rax ; hlt ; push rax ; hlt ; call rax
0x0000000000187327 : push rax ; in al, -0xf ; call qword ptr [rax]
0x00000000001963e8 : push rax ; in al, -5 ; jmp qword ptr [rax - 0x1f00041b]
0x0000000000196358 : push rax ; in al, dx ; sti ; push qword ptr [rax] ; out dx, al ; sti ; call qword ptr [rax]
0x0000000000187347 : push rax ; in eax, -0xf ; call qword ptr [rax]
0x00000000001962b8 : push rax ; in eax, dx ; sti ; push qword ptr [rax] ; out dx, eax ; sti ; call qword ptr [rax]
0x0000000000196d18 : push rax ; insd dword ptr [rdi], dx ; cld ; jmp rax
0x000000000018650b : push rax ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x00000000001871a3 : push rax ; ja 0x1871a7 ; call qword ptr [rax]
0x0000000000196b00 : push rax ; jo 0x196b02 ; jmp rax
0x0000000000187307 : push rax ; jrcxz 0x187300 ; call qword ptr [rax]
0x00000000001af330 : push rax ; loop 0x1af32a ; jmp qword ptr [rbx]
0x00000000000241f6 : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x00000000000090d8 : push rax ; mov ecx, 0x13 ; add byte ptr [rax], al ; ret
0x0000000000134ed6 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000112e86 : push rax ; mov rsi, rdx ; call rax
0x000000000007f8e2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000006ae6a : push rax ; or byte ptr [rax - 0x77], cl ; push rbp ; mov cl, ch ; ret
0x0000000000081c12 : push rax ; or dh, dh ; ret 0x7404
0x0000000000081c26 : push rax ; or dh, dh ; ret 0xf04
0x000000000001ff8a : push rax ; or dh, dh ; ret 0xf08
0x000000000014492c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186f47 : push rax ; out 0xef, al ; dec dword ptr [rax] ; out -0x11, eax ; call rax
0x0000000000195ccc : push rax ; out dx, eax ; cli ; jmp qword ptr [rax]
0x000000000019629c : push rax ; out dx, eax ; sti ; push qword ptr [rax] ; int1 ; sti ; jmp qword ptr [rax]
0x0000000000187183 : push rax ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000195bae : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000ab9ce : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000010608 : push rax ; ret
0x00000000000bf46a : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x0000000000187273 : push rax ; salc ; std ; push qword ptr [rax] ; fscale ; call qword ptr [rax]
0x000000000007d626 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000007400a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000010eef1 : push rax ; sbb dh, dh ; ret 0x7504
0x0000000000196448 : push rax ; sbb eax, 0x1f50fffc ; cld ; jmp rax
0x00000000001b3190 : push rax ; sbb esi, esi ; jmp qword ptr [rsi]
0x00000000001a2240 : push rax ; shr ah, 1 ; call qword ptr [rax]
0x0000000000114575 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f5e41 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000019b929 : push rax ; stc ; jmp rsp
0x0000000000195d0b : push rax ; std ; cli ; jmp rax
0x0000000000187587 : push rax ; std ; int1 ; call qword ptr [rax]
0x000000000018753b : push rax ; sti ; int1 ; jmp qword ptr [rax]
0x0000000000114b73 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b89 ; xor eax, eax ; ret
0x0000000000114ba3 : push rax ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114bb9 ; xor eax, eax ; ret
0x00000000000972f7 : push rax ; test al, al ; je 0x9734f ; xor eax, eax ; ret
0x00000000001a7390 : push rax ; test dh, ch ; call qword ptr [rcx]
0x0000000000196ff8 : push rax ; xchg eax, edi ; cld ; jmp rax
0x0000000000197210 : push rax ; xchg eax, esp ; cld ; jmp rax
0x0000000000195d8b : push rax ; xor bl, bh ; call rax
0x000000000007ccfd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000186fa0 : push rax ; xor esi, eax ; call qword ptr [rax - 0x2f000fcc]
0x00000000001723c7 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012e95c : push rbp ; adc byte ptr [rcx], bh ; ret
0x0000000000123bc2 : push rbp ; adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000f5f12 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000dd700 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000048bd7 : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000196fa1 : push rbp ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000196fe1 : push rbp ; cld ; call qword ptr [rax]
0x00000000000ee11f : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000000000001cb5 : push rbp ; je 0x1ce3 ; ret
0x000000000012355e : push rbp ; mov byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000006ae6e : push rbp ; mov cl, ch ; ret
0x00000000001493b8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e7a91 : push rbp ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000113b61 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000009a66a : push rbp ; ret
0x00000000000bba04 : push rbp ; ret 0x6348
0x000000000009ad24 : push rbp ; ret 0x8348
0x000000000009a658 : push rbp ; ret 0x8349
0x000000000007f971 : push rbp ; sbb byte ptr [rax + 0x39], cl ; ret
0x0000000000113af2 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025c2 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x255f ; loop 0x25aa ; ret 0x23cb
0x0000000000101fce : push rbp ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000001115ac : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000006b79d : push rbp ; sub cl, 0x50 ; ret
0x0000000000114693 : push rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146a9 ; xor eax, eax ; ret
0x00000000001146c3 : push rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146d9 ; xor eax, eax ; ret
0x00000000001146f3 : push rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114709 ; xor eax, eax ; ret
0x0000000000114723 : push rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114739 ; xor eax, eax ; ret
0x0000000000114753 : push rbp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114769 ; xor eax, eax ; ret
0x00000000000d41fb : push rbp ; test al, 0x89 ; ret
0x00000000001154c0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008eada : push rbp ; xor rax, rax ; ret
0x0000000000089361 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x000000000009ea8a : push rbx ; add dword ptr [rax + 0x39], ecx ; ret 0x850f
0x000000000009c69b : push rbx ; add dword ptr [rax + 0x39], ecx ; ret 0x974
0x00000000000d90f0 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000010fcac : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x00000000000897e1 : push rbx ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000196f9d : push rbx ; cld ; call qword ptr [rax]
0x0000000000002047 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000001a4811 : push rbx ; in eax, dx ; call qword ptr [rax]
0x00000000001993e9 : push rbx ; int1 ; call rsp
0x0000000000073ec9 : push rbx ; je 0x73f2d ; pop rbp ; pop r12 ; ret
0x00000000000cc4fd : push rbx ; je 0xcc4d0 ; mov eax, 1 ; ret
0x00000000000cc4fc : push rbx ; je 0xcc4d1 ; mov eax, 1 ; ret
0x00000000000ab40c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000006f3e6 : push rbx ; mov rbx, rsi ; call 0x8b6d6
0x00000000000a6062 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000007c0fe : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003c90 : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000002dd08 : push rbx ; ret
0x0000000000089365 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000078016 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019da59 : push rbx ; std ; jmp qword ptr [rdi]
0x00000000000e3eb5 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000081c4e : push rbx ; sub byte ptr [rax - 0x77], cl ; pop rdx ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000014013a : push rbx ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000114873 : push rbx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114889 ; xor eax, eax ; ret
0x00000000001148a3 : push rbx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1148b9 ; xor eax, eax ; ret
0x00000000001148d3 : push rbx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1148e9 ; xor eax, eax ; ret
0x0000000000114903 : push rbx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114919 ; xor eax, eax ; ret
0x0000000000114933 : push rbx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114949 ; xor eax, eax ; ret
0x0000000000114963 : push rbx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114979 ; xor eax, eax ; ret
0x0000000000075653 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000018427c : push rbx ; xchg eax, edx ; jae 0x18425b ; push rsi ; pop rdx ; je 0x184250 ; ret 0xacfc
0x00000000000daf2a : push rbx ; xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000000db4e1 : push rbx ; xor al, 0x8b ; sub al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0xc839
0x0000000000131935 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000b652a : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x0000000000060e8b : push rcx ; add dword ptr [rax + rax*8 + 0x35e94475], eax ; ret
0x000000000009f392 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000013a1ee : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8aa4 : push rcx ; and byte ptr [rax - 0x73], cl ; jl 0xd8abb ; adc byte ptr [rax + 1], cl ; ret 0x8d4c
0x0000000000183505 : push rcx ; call qword ptr [rsi]
0x0000000000196fd5 : push rcx ; cld ; call qword ptr [rax + 0x10fffc52]
0x00000000000f4560 : push rcx ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001b0aa9 : push rcx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a21 : push rcx ; cmc ; jmp rax
0x00000000001982f9 : push rcx ; in eax, dx ; call rsp
0x00000000001875c9 : push rcx ; inc dword ptr [rax] ; add dl, dh ; jmp qword ptr [rax]
0x00000000001875c1 : push rcx ; inc eax ; push rcx ; jmp rax
0x00000000001875ad : push rcx ; jmp qword ptr [rax]
0x00000000001875c5 : push rcx ; jmp rax
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000186014 : push rcx ; movsxd rbp, ebp ; jmp qword ptr [rbx]
0x000000000018636c : push rcx ; out 0xed, al ; call rsp
0x00000000001baf26 : push rcx ; ret
0x0000000000127bdb : push rcx ; ret 0x29
0x0000000000107c13 : push rcx ; ret 0x2b
0x000000000002d9bb : push rcx ; ret 0x39
0x00000000001ae699 : push rcx ; stc ; call qword ptr [rax]
0x0000000000114a83 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114a99 ; xor eax, eax ; ret
0x0000000000114ab3 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ac9 ; xor eax, eax ; ret
0x0000000000114ae3 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114af9 ; xor eax, eax ; ret
0x0000000000114b13 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b29 ; xor eax, eax ; ret
0x0000000000114b43 : push rcx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b59 ; xor eax, eax ; ret
0x00000000000a8f22 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a74b2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000083f27 : push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0x4a77
0x00000000000a9080 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a8d58 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8d6a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009f034 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a72fa : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000015acf9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000009efa4 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009ef34 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002dedc : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x00000000000a8d2a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001b2065 : push rdi ; add dword ptr [rax], eax ; clc ; popfq ; cmc ; call rdi
0x00000000000a657c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a73bc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000feb0a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00000000000a8d88 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001085aa : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000152148 : push rdi ; clc ; ret
0x00000000000038a7 : push rdi ; clc ; salc ; jb 0x392d ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000196fe5 : push rdi ; cld ; call qword ptr [rax + 0x10fffc58]
0x00000000001522c0 : push rdi ; cld ; ret
0x0000000000152de7 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015a5d9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000134f55 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x000000000015a559 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000186155 : push rdi ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000001a4909 : push rdi ; in eax, dx ; jmp rax
0x0000000000186151 : push rdi ; in eax, dx ; lcall ptr [rdi] ; push rdi ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x000000000015a3aa : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000188268 : push rdi ; mov ch, 0xf3 ; dec dword ptr [rcx - 0x4b] ; call qword ptr [rcx]
0x000000000007be34 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015a43a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001238b0 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a8dcc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a8e0a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a8daa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000b9f05 : push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000004902a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004743a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000013e302 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000047441 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000079010 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a6760 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a75b0 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000198b09 : push rdi ; out dx, al ; jmp rsp
0x000000000016f03e : push rdi ; ret
0x000000000009e7fa : push rdi ; ret 0xf800
0x000000000016f0de : push rdi ; ret 0xff3
0x0000000000102a65 : push rdi ; retf -0xf ; mov rdi, qword ptr [r13] ; call rbx
0x00000000000b2efe : push rdi ; rol byte ptr [rbx - 0x78f0f606], 1 ; ret
0x000000000013b5b3 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010f103 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000e3285 : push rdi ; sbb byte ptr [rcx - 0x77], al ; cmp r11b, r13b ; ret
0x0000000000033bd6 : push rdi ; sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x0000000000152fe7 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015280a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000195de5 : push rdi ; sti ; call qword ptr [rax + 0x20fffb58]
0x0000000000152be7 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000134f9d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000ef55f : push rdi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001048bc : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9060 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008d4fb : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000454aa : push rdx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001247ae : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000196f99 : push rdx ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000196fd9 : push rdx ; cld ; call qword ptr [rax]
0x00000000001966c0 : push rdx ; cld ; jmp rdx
0x00000000001b0b09 : push rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001860e1 : push rdx ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000020fbe : push rdx ; mov byte ptr [rdx], bh ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x000000000002e325 : push rdx ; mov rax, qword ptr [rdx + rax*4] ; ret
0x0000000000089806 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000002e2f5 : push rdx ; pop rax ; mov eax, dword ptr [rdx + rax*4] ; ret
0x000000000019ea4e : push rdx ; ret
0x000000000013c722 : push rdx ; sbb byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x0000000000111f86 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000114993 : push rdx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1149a9 ; xor eax, eax ; ret
0x00000000001149c3 : push rdx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1149d9 ; xor eax, eax ; ret
0x0000000000114a23 : push rdx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114a39 ; xor eax, eax ; ret
0x0000000000114a53 : push rdx ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114a69 ; xor eax, eax ; ret
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000001970e4 : push rdx ; xchg eax, edx ; cld ; jmp rdx
0x000000000016dd24 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000734b2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015af91 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015b001 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a4f35 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000015af21 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a4ed3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000016dd39 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019b441 : push rsi ; clc ; jmp rsp
0x0000000000152272 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000196fa5 : push rsi ; cld ; call qword ptr [rax]
0x000000000019665c : push rsi ; cld ; jmp rsi
0x00000000001529e1 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152615 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001527f5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001529d5 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152435 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000184e20 : push rsi ; cli ; push 0x6e ; ja 0x184daf ; ret 0x48f
0x0000000000171686 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000171676 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000171646 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000112e62 : push rsi ; je 0x112e78 ; mov eax, 7 ; ret
0x00000000000f61db : push rsi ; js 0xf622f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f6b18 : push rsi ; js 0xf6b6c ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000188220 : push rsi ; lodsd eax, dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000000e86d1 : push rsi ; or byte ptr [rax + 0x63], cl ; ret
0x00000000000df571 : push rsi ; or byte ptr [rax - 0x73], cl ; je 0xdf5b8 ; adc byte ptr [rax + 1], cl ; ret 0x894d
0x00000000000b9f02 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x3c], dh ; ret
0x000000000005c2a1 : push rsi ; or byte ptr [rdi + rcx - 0x4a], al ; cmp byte ptr [rcx - 0x7d], cl ; ret
0x0000000000139e8e : push rsi ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000196b48 : push rsi ; outsd dx, dword ptr [rsi] ; cld ; jmp rsi
0x0000000000186137 : push rsi ; pop rcx ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000184280 : push rsi ; pop rdx ; je 0x18424c ; ret 0xacfc
0x0000000000034a2f : push rsi ; ret
0x00000000000a00fa : push rsi ; ret 0x7518
0x0000000000053351 : push rsi ; ret 0xb850
0x000000000002d110 : push rsi ; sbb byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x0000000000114633 : push rsi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114649 ; xor eax, eax ; ret
0x0000000000114663 : push rsi ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114679 ; xor eax, eax ; ret
0x0000000000171656 : push rsi ; sub eax, edx ; ret
0x0000000000197040 : push rsi ; xchg eax, esi ; cld ; jmp rsi
0x00000000000fb737 : push rsi ; xor ax, ax ; ret
0x000000000016dd4e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a2cfc : push rsp ; add byte ptr fs:[rax], al ; cmc ; in al, dx ; jmp rbx
0x00000000001a4bfc : push rsp ; add dword ptr [rax], 0 ; and byte ptr [rax - 0x13], ch ; jmp rsi
0x000000000003c7f1 : push rsp ; and al, 0x18 ; add rax, rax ; sub rdx, rax ; jmp 0x3c827
0x000000000003f6f6 : push rsp ; and al, 0x18 ; add rax, rax ; sub rdx, rax ; jmp 0x3f72f
0x000000000010e97f : push rsp ; and al, 0x18 ; call rax
0x000000000012c828 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000113a50 : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x0000000000113b5d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000010ea81 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000421c6 : push rsp ; and al, 0x20 ; add rax, rax ; sub rdx, rax ; jmp 0x421ff
0x0000000000082ec0 : push rsp ; and al, 0x30 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000011270a : push rsp ; and al, 0x38 ; jmp 0x1126d6
0x00000000000fde44 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000113e0a : push rsp ; and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000084c12 : push rsp ; and al, 0x68 ; call rax
0x0000000000085e8a : push rsp ; and al, 0x68 ; mov rsi, r14 ; mov rdi, rbp ; call rax
0x0000000000049200 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000491ba : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e319b : push rsp ; and al, 8 ; call 0x1f455
0x00000000000731f8 : push rsp ; and al, 8 ; mov rdi, r12 ; call 0x1f468
0x0000000000196fdd : push rsp ; cld ; call qword ptr [rax + 0x10fffc55]
0x000000000019697c : push rsp ; cld ; call rsp
0x0000000000199fa8 : push rsp ; cld ; cmc ; jmp rsp
0x0000000000196788 : push rsp ; cld ; jmp rsp
0x00000000001864bb : push rsp ; in al, -0x13 ; inc dword ptr [rcx] ; cmc ; in eax, dx ; call qword ptr [rdx]
0x0000000000185e99 : push rsp ; in eax, dx ; call qword ptr [rcx]
0x00000000001860a1 : push rsp ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x00000000000cc2d6 : push rsp ; jne 0xcc263 ; mov eax, 0x7d00 ; ret
0x0000000000196c74 : push rsp ; jno 0x196c76 ; jmp rsp
0x000000000009f6cb : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000019b5e8 : push rsp ; mov cl, 0xf8 ; call rsp
0x00000000001346e7 : push rsp ; mov eax, 1 ; ret
0x00000000000da8bf : push rsp ; mov eax, dword ptr [rdi + rdi*2] ; fadd qword ptr [rcx + 0x39] ; ret 0x8941
0x00000000001a83fc : push rsp ; mov ebx, 0xa5100000 ; sti ; call qword ptr [rax]
0x000000000006af2c : push rsp ; mov edi, edi ; dec dword ptr [rax - 0x7d] ; ror byte ptr [rax], 0xeb ; ret
0x00000000000fe420 : push rsp ; mov gs, word ptr [rax + rax] ; ret
0x00000000000241f9 : push rsp ; ret
0x00000000001986e4 : push rsp ; ret 0
0x000000000004a8b8 : push rsp ; ret 0x4cc0
0x000000000019b0cb : push rsp ; ret 1
0x00000000000e69f0 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x000000000019b830 : push rsp ; stc ; jmp rsp
0x00000000000f6670 : push rsp ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000102022 : push rsp ; sub al, 0 ; add rsp, 0x18 ; ret
0x0000000000114783 : push rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114799 ; xor eax, eax ; ret
0x00000000001147b3 : push rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1147c9 ; xor eax, eax ; ret
0x00000000001147e3 : push rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1147f9 ; xor eax, eax ; ret
0x0000000000114813 : push rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114829 ; xor eax, eax ; ret
0x0000000000114843 : push rsp ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114859 ; xor eax, eax ; ret
0x0000000000094398 : push rsp ; xor eax, dword ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x943ab ; ret
0x0000000000146850 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000058588 : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10a743], al ; call qword ptr [rax]
0x0000000000056d4f : pushfq ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10d743], al ; call qword ptr [rax]
0x00000000001b1044 : pushfq ; add dword ptr [r8], r8d ; cwde ; cmc ; jmp qword ptr [rcx]
0x00000000001b657d : pushfq ; add dword ptr [rax], eax ; adc edi, esi ; call qword ptr [rcx]
0x00000000001b6595 : pushfq ; add dword ptr [rax], eax ; adc rdi, rsi ; call qword ptr [rcx]
0x00000000001b1544 : pushfq ; add qword ptr [rax], r8 ; clc ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x00000000000e69da : pushfq ; and al, 0x28 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x8b01
0x00000000000c187b : pushfq ; and al, 0x81 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000024713 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000d90f8 : pushfq ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000e111c : pushfq ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000019952c : pushfq ; and dword ptr [rcx], eax ; add byte ptr [rdx + rbx], ah ; call rsp
0x000000000019b5b1 : pushfq ; clc ; call rsp
0x00000000001190a8 : pushfq ; hlt ; sub al, byte ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000001b3d44 : pushfq ; je 0x1b3d4f ; add al, ch ; cmp dh, dh ; jmp qword ptr [rax]
0x00000000001b4544 : pushfq ; jl 0x1b4550 ; add byte ptr [rax + 0x4f], cl ; idiv bh ; ret 1
0x00000000001ac031 : pushfq ; jmp qword ptr [rdi]
0x00000000001aab44 : pushfq ; loop 0x1aab4e ; add byte ptr [rax], bh ; fdivr st(1), st(0) ; call rdi
0x000000000007949c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000147550 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019b9fc : pushfq ; or byte ptr [rdx], al ; add byte ptr [rsp + rbp*2 - 7], al ; call rsp
0x0000000000145504 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x0000000000087b40 : pushfq ; ret
0x00000000000bc5d4 : pushfq ; ret 0x3948
0x00000000000bc417 : pushfq ; ret 0xb60f
0x00000000001b8b44 : pushfq ; ret 1
0x0000000000198814 : pushfq ; retf 0 ; adc al, 9 ; out dx, al ; call rsp
0x000000000005fd9e : pushfq ; sar edi, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000001afe44 : pushfq ; xor eax, 0x17280001 ; cmc ; call qword ptr [rdx]
0x00000000000c0fd3 : rcl byte ptr [rax + 0x29000001], cl ; ret
0x000000000002d3ba : rcl byte ptr [rax], 0x48 ; mov eax, dword ptr [rsi + rax*8] ; ret
0x00000000001b0ac0 : rcl byte ptr [rcx - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000196ff4 : rcl byte ptr [rdi - 0x68af0004], 0xfc ; jmp rax
0x000000000019db10 : rcl ch, 0xe8 ; jmp qword ptr [rsi]
0x00000000000da334 : rcl cl, 1 ; call 0x42d02c81
0x00000000001a5d30 : rcl dh, 0xed ; call qword ptr [rsi]
0x00000000000f5e40 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000082f14 : rcl dword ptr [rip + 0x3412ce], -0x7d ; ret 0x8b01
0x000000000018427f : rcl dword ptr [rsi + 0x5a], cl ; je 0x18424d ; ret 0xacfc
0x000000000018427b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x184251 ; ret 0xacfc
0x00000000001872b4 : rcr ah, 0xf1 ; call rax
0x00000000001872b8 : rcr ah, 1 ; int1 ; jmp rax
0x0000000000034dcf : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000187068 : rcr byte ptr [rax - 0x652f0010], 0xf0 ; jmp rax
0x00000000001b2fe0 : rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x000000000006fc2a : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fc63e : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000001fc31 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e7006 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000006f4db : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000047447 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000cbcdf : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000115532 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000076491 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000023298 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000039fde : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000053eeb : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000036785 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000003691b : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000070f1b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000071521 : rcr byte ptr [rbx - 0x3d], 1 ; nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000000c8569 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000120713 : rcr byte ptr [rcx + 0x5b], 1 ; pop rbp ; pop r12 ; ret
0x00000000001a85b0 : rcr byte ptr [rcx], 1 ; cli ; jmp qword ptr [rdi]
0x000000000018469d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000034f4a : rcr byte ptr [rdx + 0x59], 0xf ; xchg eax, esp ; ret 0x2cdb
0x00000000001a2660 : rcr ch, 0xec ; jmp qword ptr [rbx]
0x00000000001872e0 : rcr ch, 0xf1 ; jmp rax
0x00000000001963d4 : rcr ch, 0xfb ; call qword ptr [rax]
0x00000000001963c8 : rcr cl, 1 ; sti ; jmp qword ptr [rax]
0x00000000001af1f0 : rcr dh, 0xf4 ; jmp qword ptr [rcx]
0x000000000002eb0d : rcr dword ptr [rbx + 0x48], -0x77 ; enter 0x415d, 0x5c ; ret
0x0000000000047479 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000014d4c6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000142924 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001246cb : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035dea : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x00000000001986f5 : ret 0
0x0000000000080fde : ret 0x10
0x00000000000e6e92 : ret 0x100
0x00000000000007bf : ret 0x102
0x000000000011975a : ret 0x104
0x00000000000867f8 : ret 0x106c
0x0000000000032fde : ret 0x1074
0x0000000000084fbc : ret 0x1082
0x00000000000878c2 : ret 0x10a6
0x00000000000a517d : ret 0x11
0x0000000000081fe2 : ret 0x110
0x000000000004741c : ret 0x114d
0x00000000000c7864 : ret 0x1174
0x00000000000249e4 : ret 0x1189
0x0000000000108669 : ret 0x11e8
0x00000000000ad4a9 : ret 0x11e9
0x000000000006e586 : ret 0x11eb
0x00000000000065a1 : ret 0x12
0x000000000001f53a : ret 0x123a
0x000000000002a583 : ret 0x1276
0x00000000000a074a : ret 0x13
0x00000000000da252 : ret 0x1373
0x00000000001175ea : ret 0x1376
0x0000000000034c66 : ret 0x1377
0x00000000000217bd : ret 0x13e9
0x00000000000d4d35 : ret 0x142b
0x0000000000051d32 : ret 0x143a
0x00000000000b5803 : ret 0x144
0x00000000000c153a : ret 0x145
0x00000000000e1823 : ret 0x1472
0x00000000000da4f3 : ret 0x1473
0x0000000000048545 : ret 0x1474
0x0000000000034968 : ret 0x1477
0x000000000009f709 : ret 0x147c
0x000000000005129f : ret 0x148
0x000000000002a8da : ret 0x1489
0x00000000000d55db : ret 0x148b
0x000000000007cd12 : ret 0x149
0x000000000002b83a : ret 0x1491
0x00000000000f80dd : ret 0x14c
0x00000000000313b0 : ret 0x14d
0x000000000000a168 : ret 0x15
0x0000000000034a60 : ret 0x1575
0x00000000000d9ba7 : ret 0x1674
0x0000000000117447 : ret 0x1676
0x0000000000029e3a : ret 0x16b3
0x000000000008bb9a : ret 0x17
0x00000000000d5722 : ret 0x1774
0x00000000000fceb6 : ret 0x1777
0x0000000000107c63 : ret 0x17e8
0x0000000000006b71 : ret 0x18
0x000000000008eb45 : ret 0x1876
0x0000000000046cae : ret 0x18b9
0x0000000000019860 : ret 0x18c1
0x0000000000010720 : ret 0x19
0x00000000000bbff2 : ret 0x190
0x000000000008e7e5 : ret 0x1974
0x00000000000fcfa4 : ret 0x1977
0x00000000000627aa : ret 0x198
0x0000000000123d33 : ret 0x1a72
0x0000000000023436 : ret 0x1a74
0x0000000000184bfa : ret 0x1ad4
0x000000000018338d : ret 0x1b49
0x000000000002a57a : ret 0x1b72
0x00000000000cff89 : ret 0x1b8
0x00000000000bced1 : ret 0x1ba
0x0000000000001bf5 : ret 0x1bb7
0x00000000000bd174 : ret 0x1be
0x000000000004d221 : ret 0x1beb
0x000000000010e91f : ret 0x1bf
0x000000000000346f : ret 0x1bf9
0x00000000000ce204 : ret 0x1c73
0x00000000000db106 : ret 0x1c75
0x000000000017e7a0 : ret 0x1d4
0x000000000017ef38 : ret 0x1d5
0x000000000008e6e6 : ret 0x1d74
0x000000000002da95 : ret 0x1db9
0x00000000000021cd : ret 0x1dd4
0x00000000000b063b : ret 0x1deb
0x00000000000beee1 : ret 0x1e74
0x00000000000253a9 : ret 0x1e76
0x0000000000058278 : ret 0x1e7f
0x0000000000107979 : ret 0x1e8
0x000000000008893c : ret 0x1ee8
0x000000000013d36c : ret 0x1ee9
0x0000000000027052 : ret 0x1f0f
0x00000000000e69d5 : ret 0x1f74
0x0000000000084ffe : ret 0x1f76
0x000000000007ea30 : ret 0x1fe9
0x00000000000ade01 : ret 0x1feb
0x000000000002d4ce : ret 0x200
0x0000000000126e4e : ret 0x203c
0x0000000000121839 : ret 0x2041
0x000000000002cd1e : ret 0x2074
0x00000000000244f4 : ret 0x2076
0x00000000000d4769 : ret 0x20be
0x000000000003460e : ret 0x2148
0x00000000000e71b9 : ret 0x21e8
0x00000000000898db : ret 0x2275
0x0000000000089a08 : ret 0x2288
0x000000000005b72a : ret 0x23
0x00000000000362bc : ret 0x2348
0x000000000016f242 : ret 0x2373
0x000000000009f36a : ret 0x2374
0x00000000000025cb : ret 0x23cb
0x000000000003c7f9 : ret 0x23eb
0x000000000017d7a8 : ret 0x24
0x00000000000027bc : ret 0x244f
0x00000000000ce80c : ret 0x2473
0x00000000000042d0 : ret 0x25
0x000000000007b74e : ret 0x2501
0x0000000000172d62 : ret 0x252c
0x0000000000004a98 : ret 0x26
0x000000000003f6fe : ret 0x26eb
0x000000000008b9d6 : ret 0x2774
0x00000000000cac53 : ret 0x27e8
0x000000000000054f : ret 0x2800
0x00000000000a08e5 : ret 0x280f
0x0000000000141bca : ret 0x2827
0x000000000008eb35 : ret 0x2876
0x00000000000bf473 : ret 0x28f5
0x0000000000127bdc : ret 0x29
0x000000000002eda6 : ret 0x2901
0x00000000000b1303 : ret 0x2941
0x000000000003ddc3 : ret 0x2944
0x000000000002b57b : ret 0x2948
0x000000000003f8ac : ret 0x2949
0x0000000000056a32 : ret 0x294c
0x0000000000079d16 : ret 0x294d
0x0000000000047b74 : ret 0x2973
0x00000000000a9e24 : ret 0x2975
0x000000000012bac6 : ret 0x2988
0x00000000000cd17a : ret 0x29e
0x00000000001057d0 : ret 0x29eb
0x0000000000119614 : ret 0x2a
0x0000000000001b19 : ret 0x2a63
0x0000000000062d6d : ret 0x2a74
0x0000000000105879 : ret 0x2aeb
0x0000000000119efa : ret 0x2aff
0x0000000000107b67 : ret 0x2b
0x000000000011138a : ret 0x2b2f
0x0000000000082bf3 : ret 0x2b48
0x000000000002395e : ret 0x2b49
0x0000000000134372 : ret 0x2b74
0x00000000000a9a52 : ret 0x2b77
0x000000000012f7fb : ret 0x2b8
0x000000000010cb86 : ret 0x2bae
0x00000000000f7b74 : ret 0x2c
0x00000000000ffef2 : ret 0x2c75
0x00000000000fe37a : ret 0x2c8e
0x00000000000f85a2 : ret 0x2cb8
0x0000000000034f4f : ret 0x2cdb
0x000000000005d3e9 : ret 0x2ce9
0x00000000000ea8ca : ret 0x2dc8
0x00000000000e3fb5 : ret 0x2e66
0x00000000000c7be1 : ret 0x2f
0x00000000000c9f61 : ret 0x2fd1
0x00000000000bd808 : ret 0x30
0x000000000003aa98 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000bdcfa : ret 0x3090
0x00000000000bdc2a : ret 0x3091
0x00000000000b92a2 : ret 0x30ab
0x0000000000052608 : ret 0x30be
0x00000000000dfd90 : ret 0x30f
0x000000000005e29a : ret 0x310
0x000000000002383d : ret 0x3101
0x0000000000126cd2 : ret 0x3108
0x00000000000ae7fa : ret 0x3144
0x0000000000046ff9 : ret 0x3145
0x00000000000fd749 : ret 0x31e8
0x00000000000e815e : ret 0x3273
0x0000000000062b72 : ret 0x3274
0x0000000000061b2a : ret 0x328
0x0000000000067fcf : ret 0x33
0x00000000000f6f62 : ret 0x3375
0x00000000000f05cd : ret 0x33eb
0x0000000000087c82 : ret 0x33ed
0x000000000007719f : ret 0x34
0x000000000009f6e9 : ret 0x347c
0x0000000000030ecc : ret 0x348
0x00000000000e7833 : ret 0x3489
0x00000000000512b2 : ret 0x349
0x000000000006d6e8 : ret 0x35
0x0000000000048b11 : ret 0x3574
0x00000000000ec85a : ret 0x359
0x00000000000e87d1 : ret 0x3673
0x00000000000e7661 : ret 0x3773
0x000000000004a0e6 : ret 0x3775
0x00000000000d7d63 : ret 0x37e8
0x000000000000ef80 : ret 0x38
0x0000000000044bba : ret 0x381c
0x00000000001844da : ret 0x3827
0x0000000000074b4f : ret 0x3841
0x0000000000102f77 : ret 0x3845
0x000000000008eb25 : ret 0x3876
0x000000000007c1ff : ret 0x389
0x0000000000182b66 : ret 0x38ae
0x000000000006f8dd : ret 0x38b
0x000000000002d9ad : ret 0x39
0x000000000009fc68 : ret 0x3901
0x00000000000d76e8 : ret 0x3902
0x0000000000122d9d : ret 0x3904
0x000000000003236a : ret 0x3939
0x000000000009f0f6 : ret 0x3941
0x00000000001021ea : ret 0x3944
0x0000000000125624 : ret 0x3945
0x0000000000037221 : ret 0x3948
0x000000000002d118 : ret 0x3949
0x0000000000027f33 : ret 0x394c
0x0000000000037a3d : ret 0x394d
0x000000000002dd3a : ret 0x3960
0x00000000000e7b8f : ret 0x3973
0x000000000002b43a : ret 0x39a0
0x00000000000a9292 : ret 0x3a01
0x000000000001f472 : ret 0x3a4b
0x000000000016f22b : ret 0x3a73
0x00000000000bd7af : ret 0x3a80
0x000000000005fd95 : ret 0x3ae9
0x00000000000d1bf4 : ret 0x3b01
0x00000000000dda18 : ret 0x3b41
0x00000000000da326 : ret 0x3b42
0x00000000000dd22e : ret 0x3b46
0x00000000001343e2 : ret 0x3b74
0x00000000000be415 : ret 0x3b8
0x000000000010f825 : ret 0x3bf
0x000000000005a922 : ret 0x3c01
0x000000000010e232 : ret 0x3c6
0x00000000000898c1 : ret 0x3c75
0x000000000002307e : ret 0x3d83
0x0000000000045f57 : ret 0x3dbe
0x00000000000ad47d : ret 0x3de9
0x00000000000e764e : ret 0x3e8b
0x000000000001f900 : ret 0x3eb
0x00000000000504fc : ret 0x3ee8
0x00000000000722d2 : ret 0x3f7
0x00000000000bb158 : ret 0x400
0x00000000000d7072 : ret 0x4001
0x000000000002cb00 : ret 0x4002
0x00000000000009f5 : ret 0x4021
0x00000000000aba89 : ret 0x408d
0x0000000000021662 : ret 0x4101
0x000000000005c349 : ret 0x4102
0x00000000000d7d02 : ret 0x4104
0x000000000004ae07 : ret 0x4108
0x000000000009b36c : ret 0x410e
0x000000000004c61f : ret 0x4110
0x00000000000833fc : ret 0x4117
0x00000000000ee858 : ret 0x4118
0x000000000012c7e3 : ret 0x415f
0x00000000000cfd19 : ret 0x4164
0x000000000008b730 : ret 0x4166
0x000000000001fc6b : ret 0x41c3
0x000000000008951a : ret 0x4201
0x000000000006948a : ret 0x422
0x00000000000bb323 : ret 0x4240
0x000000000009fe8a : ret 0x4266
0x00000000000f1a88 : ret 0x4276
0x00000000000dcc86 : ret 0x428b
0x00000000000bc0f9 : ret 0x428d
0x0000000000009988 : ret 0x43
0x00000000000e11c9 : ret 0x4301
0x000000000006f5fa : ret 0x4375
0x000000000002b003 : ret 0x4389
0x00000000000dae2f : ret 0x43c6
0x00000000000f8276 : ret 0x43e9
0x00000000000f8de0 : ret 0x43f6
0x0000000000070707 : ret 0x4401
0x0000000000035b62 : ret 0x4402
0x0000000000065563 : ret 0x4404
0x00000000000c151a : ret 0x4407
0x0000000000000888 : ret 0x440c
0x0000000000056add : ret 0x440f
0x0000000000073ba2 : ret 0x4410
0x0000000000000456 : ret 0x4412
0x00000000000d6bdb : ret 0x4422
0x0000000000112f28 : ret 0x4430
0x00000000000d9ae3 : ret 0x4489
0x00000000000fca62 : ret 0x448b
0x00000000001516ea : ret 0x449
0x000000000003ccd1 : ret 0x44c6
0x00000000000fa5b9 : ret 0x44c7
0x00000000000220e1 : ret 0x44e9
0x00000000000d72c1 : ret 0x4501
0x000000000013cf8b : ret 0x4502
0x00000000001178b1 : ret 0x4510
0x00000000000b7164 : ret 0x4574
0x000000000006d811 : ret 0x4589
0x000000000012027b : ret 0x45e9
0x0000000000054083 : ret 0x4675
0x00000000000b70fd : ret 0x4703
0x000000000009b128 : ret 0x470f
0x0000000000183664 : ret 0x474c
0x0000000000094365 : ret 0x4788
0x00000000000f7b33 : ret 0x47e8
0x0000000000096e69 : ret 0x4801
0x000000000002cf44 : ret 0x4802
0x0000000000075bfb : ret 0x4803
0x0000000000026cb7 : ret 0x4804
0x000000000009493d : ret 0x4805
0x0000000000094925 : ret 0x4806
0x000000000008419d : ret 0x4807
0x000000000012709f : ret 0x4808
0x000000000002cd34 : ret 0x4809
0x0000000000099afc : ret 0x480e
0x0000000000047db9 : ret 0x4810
0x000000000002a460 : ret 0x4811
0x0000000000136d02 : ret 0x4812
0x00000000001089cd : ret 0x4814
0x00000000000d053a : ret 0x481e
0x000000000012fdd6 : ret 0x4820
0x00000000001261af : ret 0x482e
0x00000000001108f0 : ret 0x4830
0x000000000009f53d : ret 0x4840
0x00000000000cad8f : ret 0x4864
0x000000000003486a : ret 0x4866
0x00000000000bd8db : ret 0x4875
0x0000000000110a93 : ret 0x48b
0x0000000000133224 : ret 0x48bf
0x000000000008b70f : ret 0x48c3
0x000000000003a990 : ret 0x48d
0x0000000000184e26 : ret 0x48f
0x0000000000024510 : ret 0x4901
0x000000000003433d : ret 0x4903
0x00000000000297cb : ret 0x4904
0x0000000000026bc9 : ret 0x4906
0x000000000007feda : ret 0x4907
0x000000000004c97a : ret 0x4908
0x00000000000bdf5f : ret 0x4909
0x00000000000485e5 : ret 0x4910
0x00000000000877e9 : ret 0x4920
0x00000000000038af : ret 0x49ec
0x0000000000083f2b : ret 0x4a77
0x00000000000b7630 : ret 0x4ae9
0x00000000000dcf71 : ret 0x4b8b
0x00000000000217a1 : ret 0x4be9
0x0000000000050603 : ret 0x4c00
0x0000000000025dc5 : ret 0x4c01
0x0000000000094b01 : ret 0x4c02
0x00000000000654ef : ret 0x4c04
0x00000000000ba39e : ret 0x4c08
0x00000000000b7e83 : ret 0x4c10
0x00000000000c6486 : ret 0x4c48
0x00000000000d7ebc : ret 0x4c6
0x00000000000e3f81 : ret 0x4c74
0x000000000004a8b9 : ret 0x4cc0
0x0000000000126780 : ret 0x4d01
0x00000000000243cf : ret 0x4d02
0x00000000001284d8 : ret 0x4d08
0x00000000000a51a2 : ret 0x4d10
0x0000000000022f40 : ret 0x4d74
0x00000000000e5fbb : ret 0x4e0f
0x0000000000184887 : ret 0x4e27
0x0000000000081786 : ret 0x4e8
0x00000000000714e0 : ret 0x4e8b
0x00000000001bc6f6 : ret 0x502
0x000000000016f214 : ret 0x5173
0x00000000000b9f6e : ret 0x5180
0x00000000000e5fbe : ret 0x518d
0x0000000000107829 : ret 0x51e8
0x00000000000568ff : ret 0x51ff
0x0000000000123cfb : ret 0x5276
0x000000000000315a : ret 0x52c0
0x00000000000d55ac : ret 0x5389
0x00000000000daf30 : ret 0x538b
0x000000000012ee9b : ret 0x53ff
0x00000000000edd28 : ret 0x5408
0x00000000000baadc : ret 0x5438
0x00000000000458ab : ret 0x543a
0x000000000009f6c9 : ret 0x547c
0x0000000000049226 : ret 0x5488
0x0000000000035c46 : ret 0x5489
0x00000000000518f3 : ret 0x54e9
0x0000000000182aec : ret 0x5508
0x0000000000002446 : ret 0x5576
0x00000000000b9fb2 : ret 0x5589
0x00000000000bb999 : ret 0x5641
0x00000000000898a7 : ret 0x5675
0x00000000000e1c90 : ret 0x56e9
0x00000000000df502 : ret 0x574
0x00000000000bb9a6 : ret 0x5741
0x0000000000117302 : ret 0x577
0x000000000002f980 : ret 0x57e9
0x0000000000184db8 : ret 0x5803
0x000000000003943b : ret 0x589
0x00000000001827c0 : ret 0x591c
0x00000000001201c3 : ret 0x5978
0x0000000000003239 : ret 0x5a51
0x0000000000183527 : ret 0x5ae4
0x00000000000e6e2c : ret 0x5ba
0x0000000000033a7a : ret 0x5bd
0x0000000000002f6f : ret 0x5bdb
0x00000000001115a4 : ret 0x5bf
0x0000000000027471 : ret 0x5c77
0x0000000000003025 : ret 0x5cbe
0x000000000005c9b7 : ret 0x5de9
0x0000000000034937 : ret 0x5e77
0x000000000006fd4e : ret 0x5e8b
0x0000000000049319 : ret 0x5f74
0x00000000000004b9 : ret 0x6080
0x0000000000002709 : ret 0x617e
0x00000000000d8b3c : ret 0x6280
0x0000000000185252 : ret 0x62c1
0x00000000000540b3 : ret 0x6348
0x0000000000098caf : ret 0x634c
0x000000000006e7db : ret 0x6375
0x00000000000d9f18 : ret 0x637d
0x000000000012689a : ret 0x63b
0x000000000008d8ab : ret 0x63be
0x000000000004f65f : ret 0x6408
0x000000000009f6b9 : ret 0x647c
0x0000000000130eab : ret 0x6600
0x0000000000037a1c : ret 0x6601
0x000000000009f76a : ret 0x6610
0x000000000008eab2 : ret 0x6620
0x000000000000280f : ret 0x6642
0x000000000008b93c : ret 0x66c3
0x0000000000094f0b : ret 0x672
0x00000000000fb2d1 : ret 0x675
0x00000000001827df : ret 0x67b2
0x00000000000fd113 : ret 0x67e8
0x000000000012286d : ret 0x6877
0x00000000000a98b7 : ret 0x68e9
0x00000000000b9f6b : ret 0x6948
0x0000000000118a1d : ret 0x6ae9
0x00000000000c2ce8 : ret 0x6b44
0x00000000000bc077 : ret 0x6b45
0x00000000000ccf37 : ret 0x6b8
0x0000000000003c96 : ret 0x6bba
0x000000000010f542 : ret 0x6bf
0x0000000000034f8e : ret 0x6cdb
0x00000000000f05aa : ret 0x6e
0x0000000000194f03 : ret 0x6e1f
0x00000000001853e1 : ret 0x6f9
0x00000000000f44e9 : ret 0x70e9
0x000000000014d55e : ret 0x7280
0x00000000000e4768 : ret 0x72e8
0x000000000011be00 : ret 0x730
0x000000000008f2d2 : ret 0x7401
0x00000000000850fc : ret 0x7402
0x0000000000081c15 : ret 0x7404
0x00000000000202fb : ret 0x7408
0x0000000000020308 : ret 0x7420
0x000000000005026b : ret 0x7450
0x00000000000e027e : ret 0x7480
0x00000000000c4dcc : ret 0x748d
0x0000000000126236 : ret 0x74e9
0x00000000000a03d7 : ret 0x7501
0x00000000000a03dc : ret 0x7502
0x000000000008f2cd : ret 0x7504
0x0000000000073f01 : ret 0x7508
0x00000000001103a6 : ret 0x7510
0x000000000008f2c8 : ret 0x7518
0x000000000007027d : ret 0x7520
0x00000000000d6c71 : ret 0x7540
0x00000000000d4e1f : ret 0x7580
0x000000000016e102 : ret 0x7677
0x0000000000023952 : ret 0x774
0x00000000000cf2bc : ret 0x775
0x00000000000f7503 : ret 0x77e8
0x0000000000062d27 : ret 0x77e9
0x000000000001ff1d : ret 0x7800
0x000000000003f7b2 : ret 0x78e9
0x0000000000002ebc : ret 0x793b
0x0000000000042281 : ret 0x79e9
0x000000000011fc17 : ret 0x7a8d
0x000000000006c440 : ret 0x7ae8
0x0000000000024521 : ret 0x7b8
0x00000000000b1ebf : ret 0x7be8
0x0000000000034bc5 : ret 0x7c7
0x00000000000fc811 : ret 0x7c77
0x000000000008ea42 : ret 0x7e20
0x00000000000481da : ret 0x7e74
0x00000000000fd173 : ret 0x7e8
0x0000000000089e8c : ret 0x7f10
0x00000000000488a2 : ret 0x7f74
0x0000000000140c9e : ret 0x7f75
0x000000000015888e : ret 0x80
0x0000000000020896 : ret 0x800
0x000000000008b069 : ret 0x8000
0x0000000000034378 : ret 0x8001
0x00000000000be152 : ret 0x8010
0x000000000003bbca : ret 0x8040
0x00000000000d2df1 : ret 0x8041
0x00000000000a55dd : ret 0x8072
0x000000000011e7f4 : ret 0x8080
0x0000000000113d5d : ret 0x80f8
0x0000000000003870 : ret 0x80fc
0x0000000000052a37 : ret 0x8141
0x0000000000113f5a : ret 0x815
0x00000000001074f9 : ret 0x81e8
0x00000000000a55f7 : ret 0x820f
0x000000000012bc32 : ret 0x828d
0x00000000000d457b : ret 0x82eb
0x00000000000988fc : ret 0x8301
0x0000000000130fe0 : ret 0x8302
0x0000000000122439 : ret 0x8303
0x00000000000d6b4a : ret 0x8304
0x000000000009c7de : ret 0x8305
0x000000000009c7d6 : ret 0x8306
0x000000000005fb11 : ret 0x8308
0x00000000000df1e6 : ret 0x830a
0x0000000000044d7c : ret 0x830f
0x000000000012fa82 : ret 0x8310
0x0000000000044ff8 : ret 0x8341
0x0000000000087a55 : ret 0x8348
0x000000000002159d : ret 0x8349
0x0000000000073af9 : ret 0x840
0x00000000000cd49c : ret 0x8401
0x000000000002019d : ret 0x840f
0x000000000003419c : ret 0x8440
0x0000000000110807 : ret 0x8441
0x00000000000a9846 : ret 0x8444
0x00000000000972d7 : ret 0x8445
0x00000000000e5b04 : ret 0x8489
0x000000000002971a : ret 0x848b
0x00000000000e4e42 : ret 0x84c7
0x00000000000540a5 : ret 0x8504
0x000000000003ce1e : ret 0x8508
0x0000000000028803 : ret 0x850f
0x0000000000044731 : ret 0x8539
0x0000000000025ada : ret 0x8545
0x000000000002035d : ret 0x8548
0x000000000003f615 : ret 0x854d
0x00000000000eb3fb : ret 0x8589
0x0000000000051562 : ret 0x858b
0x0000000000024814 : ret 0x860f
0x0000000000039274 : ret 0x86e8
0x0000000000057724 : ret 0x870f
0x0000000000070943 : ret 0x871
0x00000000001820fe : ret 0x871e
0x000000000005623f : ret 0x875
0x000000000008eb55 : ret 0x876
0x000000000003cccc : ret 0x87e
0x00000000000cabf3 : ret 0x87e8
0x0000000000023404 : ret 0x8801
0x00000000000a0112 : ret 0x8802
0x00000000000b6212 : ret 0x880f
0x00000000000d1dfc : ret 0x8841
0x0000000000002598 : ret 0x88ad
0x000000000003c8aa : ret 0x88e9
0x0000000000024936 : ret 0x8901
0x00000000000e783a : ret 0x8904
0x000000000005b0eb : ret 0x8908
0x000000000002a9d6 : ret 0x8941
0x00000000000b83a3 : ret 0x8943
0x00000000000208a4 : ret 0x8944
0x0000000000020825 : ret 0x8948
0x000000000002572e : ret 0x8949
0x00000000000294b6 : ret 0x894c
0x0000000000098e0e : ret 0x894d
0x00000000000480db : ret 0x894e
0x000000000003b110 : ret 0x8966
0x000000000008e6ba : ret 0x8a04
0x000000000000253b : ret 0x8a4c
0x000000000004507a : ret 0x8b01
0x000000000006e1db : ret 0x8b04
0x000000000002de9e : ret 0x8b05
0x000000000010f126 : ret 0x8b28
0x000000000018492e : ret 0x8b36
0x000000000002cdc2 : ret 0x8b41
0x000000000007acdd : ret 0x8b42
0x00000000000e1207 : ret 0x8b44
0x000000000003101d : ret 0x8b48
0x000000000003bd38 : ret 0x8b49
0x000000000004805e : ret 0x8b4a
0x0000000000030180 : ret 0x8b4c
0x000000000006f7d8 : ret 0x8b64
0x000000000013c2cc : ret 0x8be9
0x00000000000c04ad : ret 0x8c0f
0x00000000000bf0c6 : ret 0x8c80
0x000000000000377a : ret 0x8cba
0x000000000009b888 : ret 0x8d01
0x000000000004f5cc : ret 0x8d04
0x000000000004aa6c : ret 0x8d0f
0x000000000004531d : ret 0x8d41
0x00000000000ba923 : ret 0x8d43
0x000000000002c131 : ret 0x8d44
0x0000000000020988 : ret 0x8d48
0x0000000000030199 : ret 0x8d49
0x000000000004753e : ret 0x8d4a
0x00000000000fac51 : ret 0x8d4b
0x00000000000473d5 : ret 0x8d4c
0x00000000000a2432 : ret 0x8d4d
0x000000000008345c : ret 0x8d4e
0x000000000004d9dd : ret 0x8d89
0x00000000000313dd : ret 0x8d8b
0x0000000000028cd5 : ret 0x8e0f
0x00000000000ffbee : ret 0x8e5
0x00000000000e2756 : ret 0x8f0f
0x00000000000fe5ed : ret 0x8feb
0x00000000001a0690 : ret 0x900e
0x00000000000f48ad : ret 0x9066
0x000000000002dd6d : ret 0x90c3
0x000000000013fb15 : ret 0x90f3
0x00000000000b7777 : ret 0x91e9
0x00000000000e7582 : ret 0x930f
0x0000000000087bbe : ret 0x93be
0x000000000003d42c : ret 0x941
0x00000000000214a6 : ret 0x944
0x00000000000d90ff : ret 0x947c
0x00000000000410e7 : ret 0x948
0x000000000008d598 : ret 0x94c
0x00000000000f3650 : ret 0x94e9
0x00000000000e355b : ret 0x94eb
0x0000000000047827 : ret 0x950f
0x000000000003092b : ret 0x953d
0x0000000000183753 : ret 0x9576
0x00000000000d1ec0 : ret 0x9588
0x00000000000d1cef : ret 0x9589
0x000000000007ea0a : ret 0x961
0x00000000000e30e9 : ret 0x96eb
0x00000000000eacd9 : ret 0x970f
0x000000000009c69f : ret 0x974
0x000000000000375c : ret 0x975
0x00000000000fb8e3 : ret 0x97e8
0x00000000000898f5 : ret 0x9874
0x00000000000531c3 : ret 0x98e9
0x000000000007919c : ret 0x98eb
0x00000000000ce473 : ret 0x9aeb
0x00000000000888bc : ret 0x9b75
0x00000000000c77d1 : ret 0x9ce9
0x0000000000072759 : ret 0x9ceb
0x00000000000a55c0 : ret 0x9d72
0x00000000000d9f7b : ret 0x9d7c
0x000000000006c382 : ret 0x9de9
0x000000000004842b : ret 0x9e0f
0x000000000012c19a : ret 0x9e74
0x000000000009727c : ret 0x9ee8
0x00000000000725c0 : ret 0x9eeb
0x0000000000077014 : ret 0x9feb
0x0000000000080b1c : ret 0xa
0x00000000001b8103 : ret 0xa01
0x00000000001aea9c : ret 0xa04
0x0000000000122949 : ret 0xa1e8
0x000000000007241b : ret 0xa1eb
0x00000000000b4d98 : ret 0xa2e8
0x00000000000254db : ret 0xa2e9
0x00000000000ec9ad : ret 0xa3eb
0x00000000000698c2 : ret 0xa4eb
0x0000000000183443 : ret 0xa514
0x000000000006f93a : ret 0xa52
0x000000000006c37a : ret 0xa5e9
0x00000000000ad417 : ret 0xa6eb
0x00000000000d2266 : ret 0xa76
0x0000000000082f24 : ret 0xa7e
0x0000000000107bd3 : ret 0xa7e8
0x000000000002b7a9 : ret 0xa7e9
0x00000000000ea4fa : ret 0xa92
0x00000000001838c7 : ret 0xac65
0x0000000000184284 : ret 0xacfc
0x000000000006db45 : ret 0xade9
0x0000000000060fc1 : ret 0xae9
0x00000000001422f7 : ret 0xaee9
0x000000000006841a : ret 0xaf
0x00000000000d7e06 : ret 0xafeb
0x00000000000befdd : ret 0xb07d
0x00000000000889a9 : ret 0xb1e8
0x00000000000ba3fe : ret 0xb3eb
0x00000000000365ac : ret 0xb48
0x0000000000081ed9 : ret 0xb48b
0x000000000006fee2 : ret 0xb4e9
0x000000000011f7b5 : ret 0xb5e8
0x000000000002f4e9 : ret 0xb60f
0x00000000000fe148 : ret 0xb6e9
0x00000000000bb808 : ret 0xb70f
0x00000000000f9271 : ret 0xb74
0x0000000000107ac3 : ret 0xb7e8
0x0000000000020fc7 : ret 0xb8
0x0000000000034611 : ret 0xb848
0x0000000000053353 : ret 0xb850
0x00000000000413b6 : ret 0xb901
0x000000000018378e : ret 0xb9b9
0x00000000000bc080 : ret 0xba64
0x0000000000069275 : ret 0xba66
0x00000000000c8203 : ret 0xbb
0x000000000006244a : ret 0xbce9
0x0000000000002468 : ret 0xbd07
0x000000000002c140 : ret 0xbd74
0x000000000004b3e0 : ret 0xbd83
0x00000000000c14f9 : ret 0xbe0f
0x00000000001834e4 : ret 0xbe57
0x0000000000084baf : ret 0xbe76
0x00000000000cf392 : ret 0xbf0f
0x0000000000134448 : ret 0xbfeb
0x000000000017c568 : ret 0xc
0x000000000004a85b : ret 0xc0
0x000000000008af29 : ret 0xc000
0x0000000000041972 : ret 0xc002
0x0000000000123d41 : ret 0xc019
0x000000000005067b : ret 0xc031
0x000000000012bc12 : ret 0xc069
0x00000000000bbba6 : ret 0xc06b
0x0000000000044f4e : ret 0xc083
0x000000000003494d : ret 0xc084
0x000000000008d565 : ret 0xc085
0x000000000001f5af : ret 0xc139
0x00000000000345db : ret 0xc148
0x0000000000049588 : ret 0xc149
0x000000000012bb47 : ret 0xc166
0x0000000000041a7d : ret 0xc189
0x00000000000f5db9 : ret 0xc1e8
0x0000000000053a9a : ret 0xc1e9
0x000000000004b6ad : ret 0xc220
0x000000000003a996 : ret 0xc229
0x00000000000c2cd2 : ret 0xc26b
0x000000000007e0f3 : ret 0xc275
0x00000000000f5efa : ret 0xc283
0x000000000016f0e4 : ret 0xc2b2
0x000000000003d986 : ret 0xc2eb
0x000000000011f974 : ret 0xc304
0x000000000003a4e8 : ret 0xc35b
0x0000000000050e90 : ret 0xc375
0x0000000000101e53 : ret 0xc383
0x0000000000181302 : ret 0xc4c3
0x000000000006e840 : ret 0xc4f6
0x0000000000183098 : ret 0xc4ff
0x00000000000d8e68 : ret 0xc57f
0x000000000014d5f8 : ret 0xc580
0x00000000000ad3f8 : ret 0xc5eb
0x000000000010e1ca : ret 0xc601
0x000000000012322d : ret 0xc602
0x000000000001f8f6 : ret 0xc639
0x000000000001f543 : ret 0xc674
0x00000000000e407e : ret 0xc683
0x00000000000da985 : ret 0xc689
0x0000000000051da7 : ret 0xc701
0x000000000012f776 : ret 0xc707
0x0000000000036771 : ret 0xc74
0x0000000000037131 : ret 0xc748
0x00000000000a9e41 : ret 0xc75
0x0000000000034989 : ret 0xc764
0x000000000008221a : ret 0xc789
0x000000000006e09a : ret 0xc839
0x0000000000073098 : ret 0xc883
0x000000000012be74 : ret 0xc889
0x00000000000e6b1a : ret 0xc89
0x00000000001056c2 : ret 0xc8e8
0x00000000000e1d3f : ret 0xc8e9
0x000000000003d0d4 : ret 0xc931
0x0000000000097720 : ret 0xc984
0x00000000001218f9 : ret 0xc985
0x0000000000089966 : ret 0xc9ff
0x00000000001afe21 : ret 0xca
0x000000000004db36 : ret 0xca20
0x000000000004594b : ret 0xca38
0x000000000014a07f : ret 0xca39
0x00000000000c4e2c : ret 0xca6b
0x00000000000eb00c : ret 0xca83
0x000000000001f5b9 : ret 0xcaeb
0x000000000005b24d : ret 0xcb73
0x00000000000d5667 : ret 0xcb8
0x00000000000394e3 : ret 0xcc80
0x0000000000182b2a : ret 0xcca7
0x00000000000bbca7 : ret 0xcceb
0x0000000000184c0d : ret 0xcd11
0x00000000000a5590 : ret 0xcd72
0x0000000000031e01 : ret 0xce80
0x00000000000bec52 : ret 0xd008
0x00000000000d77e0 : ret 0xd009
0x0000000000020dff : ret 0xd020
0x00000000000cc19a : ret 0xd029
0x000000000014d46c : ret 0xd073
0x000000000002a300 : ret 0xd089
0x0000000000110734 : ret 0xd0f7
0x00000000000eedb1 : ret 0xd101
0x00000000000feaf4 : ret 0xd108
0x00000000000d63ea : ret 0xd138
0x00000000000bb8d5 : ret 0xd184
0x00000000000b91fa : ret 0xd189
0x000000000002f9e6 : ret 0xd1e9
0x0000000000033bdb : ret 0xd231
0x00000000000c136b : ret 0xd269
0x0000000000020a7d : ret 0xd284
0x00000000000e9ffd : ret 0xd2e9
0x0000000000134b94 : ret 0xd301
0x000000000003c158 : ret 0xd349
0x000000000009891e : ret 0xd374
0x0000000000045963 : ret 0xd3e9
0x000000000000089a : ret 0xd5a4
0x00000000000c1238 : ret 0xd629
0x00000000000daf6f : ret 0xd675
0x00000000001082be : ret 0xd6e9
0x00000000001059e6 : ret 0xd74
0x00000000000f74a3 : ret 0xd7e8
0x00000000000c2244 : ret 0xd801
0x00000000000ff3c2 : ret 0xd88
0x00000000001846a5 : ret 0xd8f
0x0000000000114e3c : ret 0xd975
0x00000000000db03d : ret 0xd9eb
0x0000000000133cb5 : ret 0xda09
0x00000000000da412 : ret 0xda39
0x0000000000114f03 : ret 0xda75
0x00000000000a98a6 : ret 0xda89
0x0000000000044c80 : ret 0xdaf7
0x000000000009580a : ret 0xdb75
0x00000000000b9dc1 : ret 0xdc00
0x00000000000c6e51 : ret 0xdc72
0x0000000000184786 : ret 0xdcd9
0x000000000004589a : ret 0xdce9
0x00000000001152bc : ret 0xdceb
0x0000000000183702 : ret 0xde5d
0x0000000000075a65 : ret 0xde74
0x0000000000044d2d : ret 0xde8
0x00000000000f660d : ret 0xde9
0x0000000000182491 : ret 0xde9e
0x00000000000b03b0 : ret 0xdeb
0x00000000000e2e76 : ret 0xdeeb
0x000000000008ade9 : ret 0xe000
0x000000000019d52a : ret 0xe03
0x0000000000170159 : ret 0xe074
0x0000000000024514 : ret 0xe077
0x0000000000083084 : ret 0xe083
0x00000000001a0cf7 : ret 0xe0a
0x000000000012ddea : ret 0xe0ff
0x00000000000d4d30 : ret 0xe175
0x0000000000028cde : ret 0xe183
0x00000000000a543a : ret 0xe1e
0x00000000000fc399 : ret 0xe1e8
0x00000000000253c7 : ret 0xe277
0x000000000003393c : ret 0xe281
0x0000000000027a72 : ret 0xe283
0x0000000000020f8c : ret 0xe2ff
0x00000000001237ea : ret 0xe37f
0x0000000000095ca6 : ret 0xe3e9
0x000000000002617e : ret 0xe675
0x00000000001848a6 : ret 0xe71f
0x0000000000028e85 : ret 0xe775
0x00000000000d5cad : ret 0xe781
0x0000000000020f34 : ret 0xe783
0x00000000000f7293 : ret 0xe7e8
0x00000000000705d2 : ret 0xe8
0x00000000000fb2ee : ret 0xe801
0x00000000000d73b5 : ret 0xe875
0x0000000000050695 : ret 0xe87f
0x000000000004d8d0 : ret 0xe883
0x00000000000465b3 : ret 0xe8c1
0x000000000004659f : ret 0xe8d1
0x00000000000456c3 : ret 0xe901
0x000000000002f998 : ret 0xe902
0x0000000000027639 : ret 0xe904
0x00000000000ba349 : ret 0xe907
0x000000000005ce62 : ret 0xe908
0x00000000001466b6 : ret 0xe910
0x0000000000182c07 : ret 0xe970
0x00000000000d5739 : ret 0xe975
0x000000000004a4f4 : ret 0xe9c0
0x00000000000dae3e : ret 0xea29
0x00000000000a9a4a : ret 0xea81
0x000000000013c1c2 : ret 0xea83
0x00000000000558a0 : ret 0xeac0
0x000000000012e04c : ret 0xeac1
0x000000000005fce5 : ret 0xeae9
0x00000000000bd7b7 : ret 0xeb01
0x00000000000db149 : ret 0xeb04
0x0000000000048cc6 : ret 0xeb08
0x00000000001446f6 : ret 0xeb10
0x00000000000c8ad2 : ret 0xeb11
0x000000000003b52a : ret 0xeb75
0x00000000001853b8 : ret 0xec2
0x00000000000da507 : ret 0xec72
0x00000000000db391 : ret 0xec7f
0x00000000000c683f : ret 0xed31
0x00000000000da265 : ret 0xed72
0x0000000000023450 : ret 0xed75
0x00000000000287fe : ret 0xed85
0x000000000009a6b0 : ret 0xee75
0x000000000012dcdc : ret 0xee8
0x00000000000afd0c : ret 0xee9
0x00000000000adb8f : ret 0xeeb
0x00000000000301fc : ret 0xeee8
0x000000000018505a : ret 0xef32
0x0000000000073e1e : ret 0xef75
0x00000000000d1bfc : ret 0xef7c
0x0000000000020f27 : ret 0xefc1
0x000000000004016c : ret 0xf
0x000000000011ab5a : ret 0xf0
0x000000000008aca9 : ret 0xf000
0x000000000002f49a : ret 0xf01
0x000000000007d093 : ret 0xf02
0x000000000006d97a : ret 0xf039
0x000000000002caef : ret 0xf04
0x00000000000a00f3 : ret 0xf077
0x000000000001ff8d : ret 0xf08
0x0000000000120bea : ret 0xf0d4
0x0000000000089e42 : ret 0xf10
0x000000000009f7cc : ret 0xf188
0x00000000000a03f4 : ret 0xf20
0x00000000000f470c : ret 0xf2bd
0x00000000000374b4 : ret 0xf301
0x0000000000187d54 : ret 0xf36e
0x000000000010f3ba : ret 0xf375
0x00000000000e63fa : ret 0xf390
0x0000000000124168 : ret 0xf3c3
0x00000000000effba : ret 0xf3ea
0x00000000000a03fd : ret 0xf40
0x00000000000ce11d : ret 0xf41
0x0000000000061378 : ret 0xf44
0x00000000001888c4 : ret 0xf443
0x00000000001888fc : ret 0xf445
0x00000000000dac9a : ret 0xf447
0x000000000003c9e6 : ret 0xf48
0x000000000005219e : ret 0xf4c
0x0000000000080db5 : ret 0xf539
0x00000000000d120a : ret 0xf5cc
0x00000000000c0317 : ret 0xf601
0x00000000000c736f : ret 0xf631
0x000000000010b66a : ret 0xf636
0x00000000000bb49a : ret 0xf63f
0x00000000000521c4 : ret 0xf641
0x00000000000493c6 : ret 0xf66
0x00000000000a967c : ret 0xf685
0x000000000003c111 : ret 0xf701
0x00000000000466ef : ret 0xf741
0x000000000008f69c : ret 0xf748
0x00000000000ff71a : ret 0xf782
0x00000000000ff360 : ret 0xf783
0x00000000000f7c83 : ret 0xf7e8
0x000000000014d51e : ret 0xf80
0x000000000008ab69 : ret 0xf800
0x0000000000182370 : ret 0xf869
0x000000000008b315 : ret 0xf883
0x0000000000109f39 : ret 0xf889
0x00000000000349b5 : ret 0xf8c1
0x000000000009f8ea : ret 0xf8e7
0x000000000003156d : ret 0xf929
0x00000000000b387a : ret 0xf940
0x00000000000bec44 : ret 0xf980
0x00000000000bab74 : ret 0xf983
0x000000000002c076 : ret 0xfa09
0x00000000000c2fcd : ret 0xfa29
0x000000000003ab30 : ret 0xfa69
0x000000000010f44e : ret 0xfa80
0x000000000003e296 : ret 0xfa81
0x000000000002a12a : ret 0xfa83
0x00000000000e080a : ret 0xfaae
0x0000000000032782 : ret 0xfac1
0x00000000000e7570 : ret 0xfb83
0x00000000000bd33a : ret 0xfbbe
0x000000000008aa29 : ret 0xfc00
0x000000000003ee72 : ret 0xfc02
0x00000000000fff01 : ret 0xfc07
0x00000000000cdf9a : ret 0xfc13
0x000000000008b3ba : ret 0xfc3
0x0000000000085f3a : ret 0xfc37
0x00000000001966bc : ret 0xfc4a
0x0000000000196de0 : ret 0xfc62
0x0000000000196dd8 : ret 0xfc63
0x0000000000196dd0 : ret 0xfc64
0x0000000000196dc8 : ret 0xfc65
0x0000000000136faa : ret 0xfc66
0x00000000000cd82a : ret 0xfc6b
0x00000000001972f0 : ret 0xfc86
0x00000000001972e8 : ret 0xfc87
0x00000000001970e0 : ret 0xfc92
0x000000000005daea : ret 0xfd05
0x000000000007aa44 : ret 0xfd81
0x00000000000a97a7 : ret 0xfd83
0x0000000000195e54 : ret 0xfd8a
0x000000000009fbfd : ret 0xfde8
0x0000000000062509 : ret 0xfde9
0x000000000002f478 : ret 0xfdf
0x00000000000af2ea : ret 0xfdfc
0x000000000008a8e9 : ret 0xfe00
0x0000000000118dea : ret 0xfe2a
0x00000000000f57fb : ret 0xfe8
0x00000000000a97ae : ret 0xfe83
0x00000000000d58d7 : ret 0xfeb
0x000000000014d43e : ret 0xfec5
0x000000000012dcec : ret 0xfee8
0x0000000000045d78 : ret 0xfee9
0x000000000008a7a9 : ret 0xff00
0x000000000001ff23 : ret 0xff04
0x000000000015a401 : ret 0xff2
0x00000000000b595c : ret 0xff25
0x000000000009fdba : ret 0xff3
0x00000000000892f5 : ret 0xff31
0x000000000009ee5e : ret 0xff41
0x000000000002adfa : ret 0xff46
0x00000000000898a4 : ret 0xff48
0x000000000008a669 : ret 0xff80
0x0000000000126750 : ret 0xff81
0x000000000003bf92 : ret 0xff82
0x000000000012414e : ret 0xff83
0x00000000000dcffa : ret 0xff84
0x00000000000e29b3 : ret 0xff85
0x00000000000802ba : ret 0xff86
0x0000000000136bba : ret 0xff98
0x0000000000059e6b : ret 0xffb6
0x0000000000075a5e : ret 0xffb8
0x000000000006761a : ret 0xffbb
0x00000000000d88ca : ret 0xffbc
0x000000000005966b : ret 0xffbe
0x0000000000041898 : ret 0xffbf
0x000000000008a529 : ret 0xffc0
0x00000000000834ca : ret 0xffd1
0x0000000000060161 : ret 0xffd3
0x000000000005fd32 : ret 0xffd4
0x000000000008a3e9 : ret 0xffe0
0x0000000000040f6a : ret 0xffe4
0x00000000000c5fd0 : ret 0xffea
0x00000000001431b1 : ret 0xffed
0x000000000004bd80 : ret 0xffee
0x000000000003b349 : ret 0xffef
0x000000000008a2a9 : ret 0xfff0
0x00000000001127d7 : ret 0xfff1
0x00000000000f319a : ret 0xfff2
0x00000000000d36d8 : ret 0xfff3
0x0000000000031d61 : ret 0xfff4
0x00000000001895b9 : ret 0xfff5
0x0000000000111777 : ret 0xfff6
0x000000000002f43a : ret 0xfff8
0x00000000000ed796 : ret 0xfff9
0x0000000000073200 : ret 0xfffa
0x00000000001961b5 : ret 0xfffb
0x00000000000340ae : ret 0xfffc
0x0000000000031195 : ret 0xfffd
0x0000000000026c4c : ret 0xfffe
0x000000000002dd65 : ret 0xffff
0x0000000000009f20 : ret 1
0x000000000003cf7e : ret 2
0x00000000000290ca : ret 3
0x00000000000013ac : ret 4
0x0000000000001588 : ret 5
0x0000000000001728 : ret 6
0x0000000000004f69 : ret 7
0x000000000008ec35 : ret 8
0x00000000000effb1 : ret 9
0x00000000001152b5 : retf -0x580 ; cmove eax, r10d ; jmp 0x1152a2
0x000000000007e6c0 : retf -0x76b8 ; out dx, eax ; neg rdi ; call qword ptr [r15]
0x0000000000092bdf : retf -0x7af1 ; call qword ptr [rsi]
0x00000000001883e5 : retf -0xd ; cli ; leave ; call rbx
0x0000000000102a66 : retf -0xf ; mov rdi, qword ptr [r13] ; call rbx
0x0000000000102a59 : retf -0xf ; mov rdi, qword ptr [r14] ; call rbx
0x0000000000196185 : retf -5 ; adc ah, cl ; sti ; call qword ptr [rax]
0x0000000000198815 : retf 0 ; adc al, 9 ; out dx, al ; call rsp
0x00000000000f20a2 : retf 4 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000019b25d : retf ; add dword ptr [rax], eax ; adc al, r15b ; jmp rsp
0x0000000000198649 : retf ; in eax, dx ; call rsp
0x00000000001aa689 : retf ; int1 ; call qword ptr [rbx]
0x00000000001aa671 : retf ; int1 ; call qword ptr [rsi]
0x000000000018822c : retf ; movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rcx]
0x0000000000142ff3 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x00000000001961c9 : retf ; sti ; call qword ptr [rax + 0x20fffbcd]
0x00000000001960e5 : retf ; sti ; call qword ptr [rax]
0x00000000001961a9 : retf ; sti ; call rax
0x00000000000a9355 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000a9b8e : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000009f1fc : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009f66d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000012493d : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x00000000000abc3d : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000742bc : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008ecad : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000003a4b7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000110769 : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x00000000000bc03e : rol byte ptr [rax + 0x48000151], 1 ; ret
0x000000000009fd92 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008b9d2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000013a8 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000bec4c : rol byte ptr [rax - 0x6bf0dc07], 1 ; ret 0xd008
0x00000000000ab80d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00000000000ee11a : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x6348ff55], cl ; ret 0x8d48
0x000000000016e00d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000018760c : rol byte ptr [rax], 0xf2 ; call rax
0x00000000000bb337 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006cd80 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000105117 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c6ba0 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000354df : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000187610 : rol byte ptr [rax], 1 ; jmp rax
0x000000000008d7db : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x0000000000096682 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000008b9f9 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000360b9 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x0000000000103277 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000531c0 : rol byte ptr [rbp - 0x77], 1 ; ret 0x98e9
0x0000000000119755 : rol byte ptr [rbp - 0x77], cl ; call 0x1165a4a
0x000000000011ab55 : rol byte ptr [rbp - 0x77], cl ; loopne 0x11ab47 ; ret 0xf0
0x00000000000c1671 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6348
0x0000000000188af0 : rol byte ptr [rbp - 0xc], 1 ; jmp qword ptr [rax]
0x0000000000188ae8 : rol byte ptr [rbp - 0xc], 1 ; jmp rax
0x00000000000ec8d7 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x00000000000ec9a6 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0xa3eb
0x00000000000ac9c6 : rol byte ptr [rbx + rcx*4], 0x10 ; cmp edx, esi ; jne 0xac9c9 ; ret
0x00000000000bba12 : rol byte ptr [rbx - 0x157cfd1e], cl ; add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8941
0x000000000004747b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000118e59 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x00000000000d592f : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000010a214 : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000002e3a1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000d0015 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x00000000000b2eff : rol byte ptr [rbx - 0x78f0f606], 1 ; ret
0x0000000000196fb0 : rol byte ptr [rbx - 4], 1 ; call qword ptr [rax]
0x00000000000aae72 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000012338d : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012dc35 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x00000000000c1537 : rol byte ptr [rcx + 0x29], 1 ; ret 0x145
0x00000000000a9a41 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000002149d : rol byte ptr [rcx + 0xf], 0x94 ; sar dword ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x000000000009745b : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x0000000000097383 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x00000000000b7221 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x0000000000102f73 : rol byte ptr [rcx + 0xf], cl ; lahf ; ret 0x3845
0x00000000000655be : rol byte ptr [rcx + rax*2], 0x83 ; ret
0x00000000001246da : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000c1514 : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x0000000000053a97 : rol byte ptr [rcx - 0x77], 1 ; ret 0xc1e9
0x00000000000aae52 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000012fd16 : rol byte ptr [rcx], 0 ; add byte ptr [rcx - 0x7f], cl ; ret
0x00000000000e7841 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000046dac : rol byte ptr [rcx], 0x39 ; ret 0x8949
0x00000000000d73b2 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000e950a : rol byte ptr [rcx], 0x39 ; ret 0xe87f
0x00000000000470a2 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x470a1 ; xor eax, eax ; ret
0x000000000010946d : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000d706f : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002ba32 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000070278 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000116d6a : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x00000000000450cb : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000001021e7 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00000000000a98a2 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xda89
0x000000000014d46e : rol byte ptr [rcx], 1 ; ret 0x148
0x00000000000f6c9c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000d5732 : rol byte ptr [rdi - 0x75], 4 ; test byte ptr [rbp + 0x39], al ; ret 0xe975
0x00000000000aaeb2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000111b49 : rol byte ptr [rdi], 1 ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001bad00 : rol byte ptr [rdi], 1 ; clc ; jmp qword ptr [rbx]
0x00000000001a3f87 : rol byte ptr [rdx + rax], 1 ; ret 0xe0a
0x00000000001aba40 : rol byte ptr [rdx + rsi*8 - 1], 1 ; ret 0
0x00000000000d8e6d : rol byte ptr [rdx - 0x77], 0x14 ; xchg byte ptr [rcx - 0x7d], al ; ret 0xf01
0x00000000000aae62 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000106ee5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cbafa : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000001aea99 : rol byte ptr [rdx], 3 ; ret 0xa04
0x00000000000be2ef : rol byte ptr [rip + 0x16e], 1 ; ret
0x00000000000aaea2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000181300 : rol cl, 0xc2 ; ret
0x00000000000be81f : rol cl, 0xe0 ; add ebp, ecx ; ret 0xfffb
0x0000000000136e08 : rol cl, 1 ; call 0xffffffff80d66524
0x0000000000136fd2 : rol cl, 1 ; call 0xffffffff80d666ee
0x000000000013707f : rol cl, 1 ; call 0xffffffff80d6679b
0x00000000000c1529 : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000011d827 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000aadfc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000110741 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000134152 : rol dword ptr [rax + 0x748b0005], cl ; ret 0x4804
0x00000000001244e2 : rol dword ptr [rax + 0xf5501f9], cl ; xchg eax, esi ; ret 0x8341
0x000000000012321b : rol dword ptr [rax + rax], cl ; add dh, dh ; ret 0xf04
0x0000000000025322 : rol dword ptr [rax + rcx*2], -0x7d ; ret
0x00000000001986dd : rol dword ptr [rax], 0 ; je 0x1986ce ; in eax, dx ; call qword ptr [rdx + rax*8]
0x00000000001a9a0d : rol dword ptr [rax], 1 ; add byte ptr [rax + 4], dl ; int1 ; call qword ptr [rsi]
0x00000000001a9a3d : rol dword ptr [rax], 1 ; add byte ptr [rax - 0x7f], al ; cld ; jmp qword ptr [rbx]
0x00000000001989b5 : rol dword ptr [rax], cl ; add ah, al ; sub ebp, esi ; jmp rsp
0x00000000001a9c35 : rol dword ptr [rax], cl ; add al, ch ; or ecx, esi ; call qword ptr [rcx]
0x00000000001a9bb5 : rol dword ptr [rax], cl ; add al, ch ; or ecx, esi ; jmp qword ptr [rcx]
0x00000000001a9c9d : rol dword ptr [rax], cl ; add byte ptr [rax], ah ; adc al, 0xf1 ; jmp qword ptr [rax]
0x000000000009f667 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000001f908 : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x0000000000055899 : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x000000000009771c : rol dword ptr [rcx + 0xf], -0x6c ; ret 0xc984
0x0000000000035bc6 : rol dword ptr [rcx], -9 ; ret 0
0x00000000000daf6c : rol dword ptr [rcx], 0x39 ; ret 0xd675
0x000000000001f5ad : rol dword ptr [rcx], 1 ; ret 0xc139
0x00000000000f6c5c : rol dword ptr [rcx], 1 ; ret 0xc148
0x00000000001b9c15 : rol dword ptr [rcx], cl ; add al, bh ; fcompi st(7) ; jmp rdx
0x00000000000a6fa9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x000000000012484e : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00000000001a9a0c : rol dword ptr fs:[rax], 1 ; add byte ptr [rax + 4], dl ; int1 ; call qword ptr [rsi]
0x0000000000035f15 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008b3f9 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000133304 : rol ecx, 1 ; jmp 0xffffffff80d62a20
0x0000000000133525 : rol ecx, 1 ; jmp 0xffffffff80d62c41
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008b3f8 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035f14 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001870bc : ror al, 0xf0 ; call qword ptr [rax]
0x0000000000119112 : ror ax, 8 ; ret
0x00000000001961a8 : ror bl, 1 ; sti ; call rax
0x0000000000035db4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000035f16 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008eb22 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8eb69 ; add rax, rdi ; ret
0x000000000003c7f6 : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x3c822
0x000000000003f6fb : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x3f72a
0x00000000000421cb : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x421fa
0x00000000000addfe : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0xade26
0x00000000000b0638 : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0xb065e
0x00000000000b2d08 : ror byte ptr [rax + 0x29], 0xc2 ; jmp 0xb2d2e
0x000000000008b87f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a03ce : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000244e2 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000013b4a3 : ror byte ptr [rax + 0x39], 0xca ; je 0x13b4bf ; ret
0x00000000000fcfb2 : ror byte ptr [rax + 0x39], 0xd6 ; ja 0xfcfe7 ; ret
0x00000000001145f8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f6c9e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000047f47 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000bb2b9 : ror byte ptr [rax + 0x3d], 1 ; ret 0x10
0x000000000009fada : ror byte ptr [rax + 0x48c17503], 0x83 ; ret
0x0000000000115fea : ror byte ptr [rax + 0x48e97507], 0x89 ; clc ; ret
0x00000000000d2a0e : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000045f75 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bb15f : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000001155d2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000128fec : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000978d7 : ror byte ptr [rax + 0xf], 1 ; ret
0x000000000002d114 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000006db88 : ror byte ptr [rax + 0xf], 1 ; ret 0x8349
0x000000000006dc16 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x000000000002d105 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000996d2 : ror byte ptr [rax + 0xf], 1 ; ret 0xd231
0x0000000000105498 : ror byte ptr [rax + 0xf], cl ; ret 0xc148
0x000000000009f7b3 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x000000000009655c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008d429 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000109a20 : ror byte ptr [rax + 1], 1 ; fmul dword ptr [rax - 0x77] ; ret 0xc148
0x000000000003bbef : ror byte ptr [rax + 1], 1 ; ret
0x0000000000124823 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000078009 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000addfb : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 0xc2 ; jmp 0xade29
0x00000000000b0635 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 0xc2 ; jmp 0xb0661
0x00000000000b2d05 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 0xc2 ; jmp 0xb2d31
0x000000000008b87c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000ba6af : ror byte ptr [rax + 1], cl ; ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x000000000005b0e2 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x000000000008eca5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002dd62 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000bf482 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc2953c93
0x00000000000bf46b : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000ba2f0 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cc4e0 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008eae2 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008eb12 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009f6a2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008eb02 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000011563c : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe8c ; call rax
0x00000000000cdcae : ror byte ptr [rax - 0x75], 0x54 ; ret
0x00000000000dde0a : ror byte ptr [rax - 0x75], 4 ; ret 0xf48
0x000000000007c6fa : ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000001057c9 : ror byte ptr [rax - 0x77], 0x45 ; test al, 0x48 ; mov edx, eax ; jmp 0x105803
0x0000000000105872 : ror byte ptr [rax - 0x77], 0x45 ; test al, 0x48 ; mov edx, eax ; jmp 0x1058ad
0x000000000009f2d9 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012e2f9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12e29b ; xor eax, eax ; pop rbx ; ret
0x00000000000978d4 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000132408 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000001154c2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000008827c : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000005129c : ror byte ptr [rax - 0x77], 1 ; ret 0x148
0x000000000007985c : ror byte ptr [rax - 0x77], 1 ; ret 0x3949
0x000000000002cac0 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000079f95 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000bde05 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000033939 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000131a19 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007b071 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7b086 ; ret
0x00000000001025aa : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000078852 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x0000000000095431 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000074b7f : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013aa41 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000136776 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f8b10 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000039dcd : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000443f4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000142fc0 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000132e21 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ba5a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000122a86 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f702 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f6e2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f6c2 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f709e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000083455 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2917c74
0x00000000000c1f95 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000039eb3 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000773b6 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000454e0 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000984af : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000010a699 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000a55b6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000002c300 : ror byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000026bc6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000bda6e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000ba39b : ror byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000000000004f65c : ror byte ptr [rax - 0x7d], cl ; ret 0x6408
0x0000000000078d9f : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000196610 : ror byte ptr [rax - 4], 0xff ; push rax ; cld ; jmp rax
0x0000000000195db8 : ror byte ptr [rax - 5], 1 ; jmp qword ptr [rax]
0x000000000007927d : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117643 : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000ba3f9 : ror byte ptr [rax], 0x48 ; mov ecx, dword ptr [rdx + rax*8] ; jmp 0xba3b9
0x00000000000aee22 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000006af32 : ror byte ptr [rax], 0xeb ; ret
0x000000000006b252 : ror byte ptr [rax], 0xeb ; ret 0x8b4c
0x000000000008d784 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b7161 : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00000000000a5436 : ror byte ptr [rbp + rcx*4 + 0x1d], cl ; ret 0xe1e
0x00000000000abf37 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000518ed : ror byte ptr [rbp - 0x77], 1 ; fild word ptr [rcx + 1] ; ret 0x54e9
0x00000000000b5d22 : ror byte ptr [rbx - 0x14bbdba4], 1 ; ret
0x00000000000cc28a : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xcc264 ; ret
0x0000000000029ff4 : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000f6f5f : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x00000000000253a6 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000000244f1 : ror byte ptr [rcx + 0x39], cl ; ret 0x2076
0x00000000000ab877 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000000ba8c7 : ror byte ptr [rcx + 0x4c402444], 0x89 ; out dx, al ; call r12
0x0000000000094a15 : ror byte ptr [rcx + rcx*4 + 7], 1 ; pop rbx ; ret
0x0000000000116fe0 : ror byte ptr [rcx + rdi - 0x17], 0xf ; xchg eax, ebx ; ret 0x830f
0x0000000000034d64 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000ff36d : ror byte ptr [rcx - 0x39188a2f], cl ; inc dword ptr [rax] ; ret
0x000000000003508e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00000000001238ae : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000ba6b2 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x0000000000094ce3 : ror byte ptr [rcx - 0x77], 1 ; sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000094f00 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4801
0x00000000000a519f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b80f4 : ror byte ptr [rcx - 0x7d], cl ; ret
0x000000000009c7d3 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000ab810 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000b9f30 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x0000000000079243 : ror byte ptr [rcx - 9], cl ; hlt ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010706c : ror byte ptr [rcx], 0xf8 ; ret
0x00000000001965a0 : ror byte ptr [rcx], 0xfc ; call qword ptr [rax]
0x000000000008f4d9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000003c02b : ror byte ptr [rdi], 0x1f ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a9c62 : ror byte ptr [rdi], 0x1f ; add byte ptr [rax], r8b ; ret
0x00000000000e951c : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + rcx*4 + 0xc], cl ; ret 0x8b49
0x0000000000105c20 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x00000000000f6c67 : ror byte ptr [rdi], 0x45 ; ret 0x3948
0x000000000003494a : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000ead50 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000bc10f : ror byte ptr [rdi], 0x48 ; ret 0x8341
0x00000000000559a8 : ror byte ptr [rdi], 0x48 ; ret 0x8941
0x000000000003a4e5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000013e338 : ror byte ptr [rdi], 0x82 ; ret
0x00000000000464cf : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000009706d : ror byte ptr [rdi], 0x84 ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000052c26 : ror byte ptr [rdi], 0x84 ; ret
0x000000000011da4f : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000401df : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000084d9b : ror byte ptr [rdi], 0x85 ; add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000016504a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000009f62c : ror byte ptr [rdi], 0x85 ; jge 0x9f63a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a3e01 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000a2416 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a0747 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000dd2f8 : ror byte ptr [rdi], 0x88 ; ret 0
0x00000000000cc197 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000008865d : ror byte ptr [rdi], 0x94 ; ret
0x00000000001363b6 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000baad9 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x0000000000034f8b : ror byte ptr [rdi], 0x94 ; ret 0x6cdb
0x0000000000020985 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000071329 : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000061375 : ror byte ptr [rdi], 0x94 ; ret 0xf44
0x00000000000d3ce1 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d7665 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x0000000000034199 : ror byte ptr [rdi], 0x95 ; ret 0x8440
0x00000000000bb8d2 : ror byte ptr [rdi], 0x95 ; ret 0xd184
0x0000000000044c7d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000e2567 : ror byte ptr [rdi], 0x95 ; ret 0xe183
0x00000000000ac751 : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ac469 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x0000000000074b4c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000be81c : ror byte ptr [rdi], 0xb6 ; rol cl, 0xe0 ; add ebp, ecx ; ret 0xfffb
0x00000000000cc4dd : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000ead4d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006c75b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ead2f : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8cfa : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000003394e : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33938 ; ret
0x00000000000daf2d : ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000000e5b01 : ror byte ptr [rdi], 1 ; ret 0x8489
0x00000000000e3dcd : ror byte ptr [rdi], 1 ; ret 0xc639
0x00000000000db4e7 : ror byte ptr [rdi], 1 ; ret 0xc839
0x000000000004db33 : ror byte ptr [rdi], 1 ; sahf ; ret 0xca20
0x0000000000097455 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009f3c3 : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret 0x840
0x000000000009f74d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000b17b3 : ror byte ptr [rdi], cl ; sahf ; ret 0x840
0x000000000008e38a : ror byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dh ; ret 0xe901
0x0000000000098b2b : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000080db2 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf539
0x00000000000b6454 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x00000000000c1674 : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6348
0x00000000000e2d1a : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x941
0x00000000000471e5 : ror byte ptr [rdx - 0x77], 1 ; add al, 0xd1 ; xor eax, eax ; pop rbx ; ret
0x000000000004704e : ror byte ptr [rdx - 0x77], 1 ; add al, 0xd6 ; xor eax, eax ; pop rbx ; ret
0x00000000001965e8 : ror byte ptr [rsp + rdi*8], 1 ; jmp qword ptr [rax]
0x00000000001961a4 : ror cl, 1 ; sti ; call rax
0x00000000001a6870 : ror dl, 1 ; cld ; call qword ptr [rdx]
0x000000000009c858 : ror dword ptr [r9 + 0x1ef8c1d8], -0x77 ; ret 0x8b48
0x00000000000824df : ror dword ptr [rax + 0x21], cl ; ret
0x00000000000bd800 : ror dword ptr [rax + 0x29], cl ; ret
0x0000000000149fd5 : ror dword ptr [rax + 1], -8 ; ret
0x0000000000149e99 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014a0ee : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x0000000000082a1e : ror dword ptr [rax + 1], cl ; fmul dword ptr [rax + 0x29] ; ret 0x348
0x00000000000b73f6 : ror dword ptr [rax - 0x3f], -0x19 ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000362b8 : ror dword ptr [rax - 0x75], 0x14 ; ret 0x2348
0x00000000000365a8 : ror dword ptr [rax - 0x75], 0x14 ; ret 0xb48
0x00000000000dcc9c : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000000000830d9 : ror dword ptr [rax - 0x77], -0x10 ; mov byte ptr [rsi + rbx], cl ; pop rbx ; ret
0x00000000000f583e : ror dword ptr [rax - 0x77], 1 ; add ecx, dword ptr [rax + 1] ; ret 0x8948
0x0000000000105a0d : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001426bb : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000014d4c2 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000072fdd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x72fd7 ; ret
0x000000000007bc1d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7bc17 ; ret
0x00000000000e9507 : ror dword ptr [rax - 0x7d], -0x40 ; add dword ptr [rcx], edi ; ret 0xe87f
0x0000000000048962 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x4801
0x00000000000c0314 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000008efdd : ror dword ptr [rax - 9], cl ; fadd dword ptr [rbx + 0x294807e0] ; ret
0x00000000000405f8 : ror dword ptr [rax], -0x7d ; ret 0x4801
0x00000000000b8116 : ror dword ptr [rbp - 0x77], 1 ; ret
0x000000000013eadb : ror dword ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000009c859 : ror dword ptr [rcx + 0x1ef8c1d8], -0x77 ; ret 0x8b48
0x000000000010e761 : ror dword ptr [rcx + 0x5bd8f7c8], 0x5d ; pop r12 ; ret
0x00000000000e69f1 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x0000000000050683 : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000170157 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009f5c5 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000a98b4 : ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x0000000000034974 : ror dword ptr [rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x000000000003c155 : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x000000000004d8cd : ror dword ptr [rdi], -0x6c ; ret 0xe883
0x00000000000fc16c : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d63e7 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000056ec1 : ror dword ptr [rdi], -0x71 ; ret 0xfff4
0x000000000016e878 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ef84 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ed56 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000016fe80 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ecd6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016f014 : ror dword ptr [rdi], -0x7b ; je 0x16f024 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016eb0b : ror dword ptr [rdi], -0x7b ; jno 0x16eb20 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ebd3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000059668 : ror dword ptr [rdi], -0x7b ; ret 0xffbe
0x000000000016e850 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f8cdc : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x0000000000034973 : ror dword ptr cs:[rdi], -0x65 ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x0000000000119113 : ror eax, 8 ; ret
0x0000000000072fdc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x72fd8 ; ret
0x000000000007bc1c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7bc18 ; ret
0x00000000000698aa : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001981ed : sahf ; add byte ptr [rax], al ; xchg eax, esp ; stosd dword ptr [rdi], eax ; jmp 0x1981f9
0x00000000001102d7 : sahf ; call 0xffffffffc04202ec
0x00000000000ffe78 : sahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000189569 : sahf ; cmc ; call rbx
0x00000000000d8cbe : sahf ; hlt ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000001ae639 : sahf ; hlt ; jmp qword ptr [rcx]
0x00000000000025c6 : sahf ; jl 0x255b ; loop 0x25a6 ; ret 0x23cb
0x00000000000025c5 : sahf ; jl 0x255c ; loop 0x25a7 ; ret 0x23cb
0x00000000000c64ee : sahf ; nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000b2c9d : sahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000014ae1e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000e92f8 : sahf ; ret
0x0000000000182b65 : sahf ; ret 0x38ae
0x00000000000386fb : sahf ; ret 0x8348
0x00000000000af0de : sahf ; ret 0x840
0x0000000000038219 : sahf ; ret 0x8948
0x000000000004b6ac : sahf ; ret 0xc220
0x000000000004db35 : sahf ; ret 0xca20
0x000000000004842d : sahf ; ret 0xd108
0x0000000000060f21 : sahf ; ret 0xffff
0x00000000000f925e : sahf ; sar cl, cl ; dec dword ptr [rax + 0x39] ; ret
0x0000000000002443 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000001962e8 : sal ah, 1 ; sti ; call rax
0x00000000000be2ed : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000d5981 : sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000000fdc40 : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000136a49 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006c75e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006c72b : sal bh, 0xd8 ; ret
0x000000000008b067 : sal bh, 1 ; ret 0x8000
0x000000000008af27 : sal bh, 1 ; ret 0xc000
0x000000000008ade7 : sal bh, 1 ; ret 0xe000
0x000000000008aca7 : sal bh, 1 ; ret 0xf000
0x000000000008ab67 : sal bh, 1 ; ret 0xf800
0x000000000008aa27 : sal bh, 1 ; ret 0xfc00
0x000000000008a8e7 : sal bh, 1 ; ret 0xfe00
0x000000000008a7a7 : sal bh, 1 ; ret 0xff00
0x000000000008a667 : sal bh, 1 ; ret 0xff80
0x000000000008a527 : sal bh, 1 ; ret 0xffc0
0x000000000008a3e7 : sal bh, 1 ; ret 0xffe0
0x000000000008a2a7 : sal bh, 1 ; ret 0xfff0
0x000000000008a167 : sal bh, 1 ; ret 0xfff8
0x000000000008a027 : sal bh, 1 ; ret 0xfffc
0x0000000000089ee7 : sal bh, 1 ; ret 0xfffe
0x000000000004f76c : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000044a68 : sal bl, 1 ; ret
0x00000000000ab5ff : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x0000000000136095 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000001b1740 : sal byte ptr [rax - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000196afc : sal byte ptr [rax - 4], 0xff ; push rax ; jo 0x196b06 ; jmp rax
0x00000000000bc951 : sal byte ptr [rax], 1 ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000001731c7 : sal byte ptr [rbp + 0x1e], 0x49 ; mov edi, dword ptr [rbp] ; call 0x1f4c9
0x000000000008ead8 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000008d800 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006c120 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000050267 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000114607 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035167 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000012e1f4 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000114ce4 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007b074 : sal byte ptr [rbp + 9], cl ; ret
0x000000000012c246 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de74 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000133764 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x00000000000c8ef0 : sal byte ptr [rbp + rax*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000149fd0 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000114bf1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007d5e5 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009f075 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000000470a6 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x0000000000114f3e : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x0000000000089760 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000a94c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000072fe0 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009f37a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000001385c6 : sal byte ptr [rbp - 0x19], cl ; pop rbx ; ret
0x000000000009ff3b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000cff3f : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000009f400 : sal byte ptr [rbp - 0x23], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009f113 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033953 : sal byte ptr [rbp - 0x27], cl ; ret
0x00000000000fe1f0 : sal byte ptr [rbp - 0x33], 0x5b ; ret
0x00000000000fe3b1 : sal byte ptr [rbp - 0x34], 0x5b ; ret
0x00000000000ab4e2 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000008d7dd : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x0000000000115061 : sal byte ptr [rbp - 0x44], 0xc9 ; ret
0x00000000000fb86e : sal byte ptr [rbp - 0x61], 0x89 ; out dx, eax ; call 0xf7b07
0x000000000008980a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000974e9 : sal byte ptr [rbx + 0x5b], 0x5d ; ret
0x00000000000ff302 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x000000000008b9a2 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000097482 : sal byte ptr [rbx + rbx*2 + 0x5b], 0x5d ; ret
0x000000000012d862 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x0000000000033f41 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret
0x00000000000ffb35 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x0000000000137952 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000005407e : sal byte ptr [rbx + rsi*2 + 0x41], 0x39 ; ret 0x4675
0x000000000012ccbc : sal byte ptr [rcx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000097351 : sal byte ptr [rcx + rbp*8 + 0x31], 0xc0 ; ret
0x000000000010fc22 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000010daec : sal byte ptr [rcx + rdx*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001378dd : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f46f8 : sal byte ptr [rcx + rsi*4 + 0x48], 0x89 ; ret
0x0000000000186d04 : sal byte ptr [rcx - 0x12], 1 ; call rax
0x0000000000186d7c : sal byte ptr [rcx - 0x12], 1 ; inc eax ; je 0x186d78 ; call rax
0x00000000000bbc9f : sal byte ptr [rcx], 0xc0 ; xor edi, edi ; mov word ptr [rbp - 0x3e], ax ; jmp 0xbbc7e
0x00000000000bbca1 : sal byte ptr [rcx], 0xff ; mov word ptr [rbp - 0x3e], ax ; jmp 0xbbc7c
0x00000000001145f6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000001036d2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000041acb : sal byte ptr [rdx + rbx*8 + 0x44], 9 ; ret 0x8941
0x000000000008b7b3 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x000000000006f94b : sal byte ptr [rdx + rcx*2 + 0x5b], 1 ; ret
0x00000000000a03d3 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000089a03 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009f74b : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000013d537 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x000000000013246a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132488 ; call rax
0x000000000013864a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138668 ; call rax
0x0000000000138d73 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138d91 ; call rax
0x000000000013468e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x134704 ; call rax
0x00000000001350ae : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135114 ; call rax
0x00000000000f1306 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc2985b1a
0x0000000000186d80 : sal byte ptr [rsi + rbp*8 - 1], 0xd0 ; jno 0x186d7c ; call rax
0x0000000000105a37 : sal byte ptr [rsi + rcx + 0x48], 0x39 ; ret
0x000000000010d9b9 : sal byte ptr [rsi + rcx + 0x48], 0x89 ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000112705 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; push rsp ; and al, 0x38 ; jmp 0x1126db
0x000000000008b757 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x00000000001871a0 : sal byte ptr [rsi - 4], 1 ; push rax ; ja 0x1871aa ; call qword ptr [rax]
0x0000000000082937 : sal byte ptr [rsp + rcx + 0x48], cl ; mov dword ptr [rsp + 0x30], eax ; call rdx
0x000000000008b4c1 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000123229 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x00000000000972f9 : sal byte ptr [rsp + rcx*2 + 0x31], 0xc0 ; ret
0x000000000002ffa1 : sal byte ptr [rsp + rdx + 0x48], 0x83 ; ret 0x4901
0x000000000019a691 : sal dh, 1 ; jmp rsp
0x00000000001962e4 : sal dl, 1 ; sti ; call rax
0x000000000009f16d : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x00000000000ff36f : sal dword ptr [rbp - 0x19], 1 ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000000ab038 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; ret
0x00000000000f237b : sal dword ptr [rbp - 0x2e], -0x7d ; ret 0xeb01
0x0000000000123e13 : sal dword ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000032bfe : sal dword ptr [rbp - 0x61], 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000da330 : sal dword ptr [rbx + 0x13], 1 ; rcl cl, 1 ; call 0x42d02c85
0x000000000013b5c6 : sal dword ptr [rbx + 7], 1 ; ret
0x000000000013b4a1 : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13b4c1 ; ret
0x000000000009f2d7 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000007c6f8 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000002c2fe : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000000000013c374 : sal eax, cl ; dec dword ptr [rax - 0x7d] ; in al, dx ; or byte ptr [rax + 0x29], cl ; ret
0x0000000000034bac : sal ebx, -0x3d ; nop ; addss xmm0, xmm1 ; ret
0x000000000014d4c5 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019aec9 : sal edi, 1 ; jmp rsp
0x00000000001b9759 : sal edi, cl ; jmp rdi
0x0000000000170196 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000013240b : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000150806 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000173121 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013fb44 : salc ; call 0x13bdb3
0x0000000000112e89 : salc ; call rax
0x00000000001722ab : salc ; clc ; ret
0x000000000011076c : salc ; cmovne eax, ecx ; ret
0x00000000001aee29 : salc ; hlt ; call qword ptr [rbx]
0x00000000001889b4 : salc ; hlt ; jmp rdi
0x00000000001a5d31 : salc ; in eax, dx ; call qword ptr [rsi]
0x0000000000186375 : salc ; in eax, dx ; call rsp
0x000000000004b4a0 : salc ; inc dword ptr [rax - 0x56c43] ; jmp qword ptr [rax]
0x00000000001247ef : salc ; ja 0x1247dc ; mov eax, 0xffffffff ; ret
0x00000000000fcfb5 : salc ; ja 0xfcfe4 ; ret
0x00000000000038a9 : salc ; jb 0x392b ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000001ad4c1 : salc ; jmp qword ptr [rcx]
0x0000000000047236 : salc ; jne 0x4722d ; xor eax, eax ; ret
0x0000000000074450 : salc ; mov eax, 0xffffffff ; ja 0x74469 ; ret
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000ab619 : salc ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x0000000000112707 : salc ; mov rdx, qword ptr [r12 + 0x38] ; jmp 0x1126d9
0x00000000000e3409 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000022d8 : salc ; ret
0x00000000000025ca : salc ; ret 0x23cb
0x0000000000187275 : salc ; std ; push qword ptr [rax] ; fscale ; call qword ptr [rax]
0x0000000000047052 : salc ; xor eax, eax ; pop rbx ; ret
0x00000000001874ec : sar al, 1 ; int1 ; push rax ; clc ; int1 ; call qword ptr [rax]
0x00000000001875c4 : sar bh, 0xf1 ; jmp rax
0x0000000000187538 : sar bl, 0xf1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x00000000001965b4 : sar bl, 0xfb ; call qword ptr [rax]
0x00000000001961b1 : sar bl, 0xff ; and dl, al ; sti ; push rax ; ret
0x0000000000140492 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002affb : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x000000000013bb81 : sar byte ptr [rax + 1], cl ; jne 0x13bb98 ; ret
0x000000000013bbc1 : sar byte ptr [rax + 1], cl ; jne 0x13bbd8 ; ret
0x0000000000085ab7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000076f0c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000027631 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000001968e8 : sar byte ptr [rbx], cl ; cld ; inc dword ptr [rdx + 0x3b] ; cld ; call rdx
0x000000000013b5c4 : sar byte ptr [rcx], 0xd1 ; jae 0x13b5d5 ; ret
0x000000000013b604 : sar byte ptr [rcx], 0xd1 ; jae 0x13b615 ; ret
0x00000000000e760e : sar byte ptr [rcx], cl ; ret
0x000000000010921f : sar byte ptr [rdi + 0x1b], cl ; call 0x35528
0x000000000002c129 : sar byte ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x0000000000106eb3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x0000000000002b69 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x0000000000103bfc : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cbacc : sar byte ptr [rsi + 9], 1 ; ret
0x00000000001834ff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000187580 : sar ch, 0xf1 ; call rax
0x0000000000187584 : sar ch, 1 ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000187508 : sar cl, 0xf1 ; jmp rax
0x00000000000f925f : sar cl, cl ; dec dword ptr [rax + 0x39] ; ret
0x00000000001875a4 : sar dh, 0xf1 ; jmp rax
0x000000000001f5b1 : sar dword ptr [rax - 1], 0xf ; ret 0xcaeb
0x00000000000feaef : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000dd082 : sar dword ptr [rbp + rbx*8 + 0x48], 0x63 ; ret 0x5489
0x0000000000127cc4 : sar dword ptr [rbx], 0xf ; xchg eax, ebp ; ret 0xd184
0x00000000000214a1 : sar dword ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x0000000000040af7 : sar dword ptr [rdx + 1], -0x77 ; ret
0x0000000000187c78 : sar dword ptr [rsi - 0xd], 1 ; lcall ptr [rdi - 0x7d] ; jmp rsp
0x0000000000034d33 : sar eax, 0x10 ; ret
0x00000000000c9609 : sar eax, 0x1f ; add rsp, 8 ; ret
0x000000000013fe84 : sar eax, 0x1f ; ret
0x0000000000034ceb : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x0000000000003aa9 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000007419c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000076a70 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000074929 : sar eax, 2 ; ret
0x0000000000118dcd : sar eax, 6 ; ret
0x00000000001960b1 : sar ebx, -1 ; nop ; ret
0x0000000000196111 : sar ebx, -1 ; ret
0x00000000001963b5 : sar ebx, cl ; call qword ptr [rax - 0x1f00042c]
0x000000000019bc79 : sar ecx, -1 ; adc al, 0x1a ; add al, byte ptr [rax] ; push rsp ; ret
0x0000000000183263 : sar ecx, 1 ; jnp 0x183224 ; ret
0x000000000005fd9f : sar edi, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000845cc : sar edi, cl ; dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000000349cb : sar edx, 0x1f ; not edx ; and eax, edx ; ret
0x000000000003a424 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000345ed : sar edx, 0x3f ; not edx ; and eax, edx ; ret
0x000000000003a437 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008eca7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000007419b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000074928 : sar rax, 2 ; ret
0x0000000000118dcc : sar rax, 6 ; ret
0x00000000000345ec : sar rdx, 0x3f ; not edx ; and eax, edx ; ret
0x000000000008eca6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001af488 : sbb ah, ah ; hlt ; jmp qword ptr [rcx]
0x000000000019e565 : sbb al, 0 ; add al, bl ; adc al, 0xe9 ; call qword ptr [rdx]
0x000000000019c8c4 : sbb al, 0 ; add byte ptr [rax], al ; pop rax ; sub ebp, eax ; call rax
0x00000000000f6b69 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000000103f1 : sbb al, 0 ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; call qword ptr [rbx]
0x000000000019e1c4 : sbb al, 0x19 ; add byte ptr [rax], al ; clc ; add ecx, ebp ; call qword ptr [rdx]
0x00000000001ae4c4 : sbb al, 0x1c ; add dword ptr [rax], eax ; cwde ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x0000000000112e8e : sbb al, 0x20 ; je 0x112ef6 ; xor eax, eax ; pop rbx ; ret
0x0000000000112e8d : sbb al, 0x20 ; je 0x112ef7 ; xor eax, eax ; pop rbx ; ret
0x0000000000187878 : sbb al, 0x22 ; jmp rsp
0x00000000001af5c4 : sbb al, 0x2d ; add dword ptr [rax], eax ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001afec4 : sbb al, 0x36 ; add dword ptr [rax], eax ; mov byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000044c21 : sbb al, 0x38 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000044b36 : sbb al, 0x38 ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000001363ad : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000002f6c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000001b16c4 : sbb al, 0x4e ; add dword ptr [rax], eax ; pop rax ; jo 0x1b16c7 ; jmp qword ptr [rcx]
0x00000000000ffe33 : sbb al, 0x83 ; ret
0x00000000001a4fc4 : sbb al, 0x87 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x13], dh ; call qword ptr [rcx]
0x00000000000fe258 : sbb al, 0x90 ; sub al, 0 ; ret
0x0000000000188d4c : sbb al, 0x9f ; hlt ; jmp qword ptr [rdi]
0x00000000000d43c3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a85c4 : sbb al, 0xbd ; add byte ptr [rax], al ; call 0x181a7fee
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001ab1c4 : sbb al, 0xe9 ; add byte ptr [rax], al ; sbb bh, dh ; int1 ; call qword ptr [rdx]
0x00000000001862a4 : sbb al, 0xec ; in eax, dx ; call rsp
0x00000000001862b8 : sbb al, 0xec ; in eax, dx ; lcall ptr [rsp + rbp*8] ; in eax, dx ; call rsp
0x00000000001963c4 : sbb al, 0xfb ; call rax
0x00000000001964a9 : sbb al, 0xfc ; jmp rax
0x00000000001ae50d : sbb al, 1 ; add al, ah ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae525 : sbb al, 1 ; add al, bh ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae4f5 : sbb al, 1 ; add al, cl ; xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000001ae555 : sbb al, 1 ; add byte ptr [rax - 0x69], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae56d : sbb al, 1 ; add byte ptr [rax - 0x69], dh ; hlt ; jmp qword ptr [rcx]
0x000000000019cbc4 : sbb al, 3 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x18], cl ; jmp qword ptr [rax]
0x00000000000b8a65 : sbb al, 5 ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000c035a : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000007ca0 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000ab60c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000001ae36d : sbb al, byte ptr [rcx] ; add al, al ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000000add27 : sbb al, ch ; ret
0x000000000017310f : sbb al, ch ; stosd dword ptr [rdi], eax ; ret
0x0000000000196418 : sbb bh, 0xfb ; call rax
0x00000000001af598 : sbb bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001964a5 : sbb bh, ah ; jmp rax
0x00000000000d437a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001ab1c8 : sbb bh, dh ; int1 ; call qword ptr [rdx]
0x00000000001a85c9 : sbb bh, dl ; call qword ptr [rdi]
0x00000000000f27ec : sbb bl, byte ptr [rax + rcx*2 - 0x7d] ; ret
0x0000000000181fe5 : sbb bl, byte ptr [rsi] ; ret
0x000000000013d959 : sbb bl, ch ; ret
0x0000000000034c90 : sbb bl, dh ; ret
0x0000000000094ce6 : sbb byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000077ffe : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000142eff : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013b521 : sbb byte ptr [r8 + 1], r15b ; ret
0x00000000001723cb : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013b8d6 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000a8fa4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a8fc6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9004 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x0000000000077fff : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007f972 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d4b6d : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000002d111 : sbb byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x0000000000142f00 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007e319 : sbb byte ptr [rax + 0x5be88948], dl ; pop rbp ; pop r12 ; ret
0x00000000000b8a64 : sbb byte ptr [rax + 0x75db8500], bl ; fsubr qword ptr [rcx] ; ret
0x00000000001175e3 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3af3b
0x000000000013b522 : sbb byte ptr [rax + 1], bh ; ret
0x000000000003c7f3 : sbb byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x3c825
0x000000000003f6f8 : sbb byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 0xc2 ; jmp 0x3f72d
0x00000000000d88c3 : sbb byte ptr [rax - 0x73], cl ; jl 0xd88f3 ; and al, ch ; ret 0xffbc
0x00000000000c7bff : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000002548b : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000dc967 : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007be31 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000010f104 : sbb byte ptr [rax - 0x77], cl ; ret
0x000000000010e91c : sbb byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000f05ca : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x0000000000089366 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000007fdc6 : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d45d6
0x000000000007fdc5 : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc28d45d7
0x0000000000079b49 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c8488 : sbb byte ptr [rax - 0x7d], cl ; ret
0x000000000009beb6 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009488e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000026cb4 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000846e7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009488d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000120ce1 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000019e135 : sbb byte ptr [rax], al ; add al, bh ; add ecx, ebp ; call qword ptr [rsi]
0x000000000007c68f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b8d7 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000078856 : sbb byte ptr [rax], al ; setne al ; ret
0x0000000000002444 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000001a3bf8 : sbb byte ptr [rax], dh ; in eax, dx ; jmp rbx
0x00000000000a8fa5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a8fc7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9005 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000004753a : sbb byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x000000000012c82a : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x00000000001374d1 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x00000000001a8238 : sbb byte ptr [rbp - 0x11], bh ; call qword ptr [rdi]
0x00000000000d6701 : sbb byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f70a2 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000077f69 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b9025 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000078017 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012cb0f : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000003499b : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000007d627 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001245bb : sbb byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; pop rbp ; ret
0x00000000000d313c : sbb byte ptr [rbx - 0x76b7bfb6], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000000df25c : sbb byte ptr [rbx - 0x7cdfdbbc], cl ; ret
0x00000000001bd47c : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000013b4bb : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x000000000009891b : sbb byte ptr [rcx + 0x38], al ; ret 0xd374
0x00000000000d9ba4 : sbb byte ptr [rcx + 0x39], al ; ret 0x1674
0x00000000000c7f56 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e3554 : sbb byte ptr [rcx + 0x48102474], cl ; mov edx, eax ; jmp 0xe34f9
0x000000000007400b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000013c723 : sbb byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000331ab : sbb byte ptr [rcx + rcx*4 + 0x4c], al ; and al, 0x38 ; call 0x1f468
0x00000000000cd79e : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ac548 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000038201 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000000ac2a0 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x0000000000113af3 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000009ee8e : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000e3286 : sbb byte ptr [rcx - 0x77], al ; cmp r11b, r13b ; ret
0x00000000000ab601 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001b12e8 : sbb byte ptr [rcx - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b1788 : sbb byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b31c0 : sbb byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001993e5 : sbb byte ptr [rcx], al ; add ah, ah ; push rbx ; int1 ; call rsp
0x00000000000f05c4 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf060c
0x00000000000fcd61 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000001ab8f8 : sbb byte ptr [rcx], bl ; call qword ptr [rax]
0x00000000001aff28 : sbb byte ptr [rcx], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000076557 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000117641 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x000000000010ea83 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000005238c : sbb byte ptr [rdi + 0xf4c0013], 0x44 ; ret 0xf4c
0x0000000000033bd7 : sbb byte ptr [rdi + rcx - 0x51], al ; ret 0xd231
0x000000000006c728 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013a238 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013ba5e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000326d9 : sbb byte ptr [rdi], cl ; test byte ptr [rax], bh ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012e3a8 : sbb byte ptr [rdi], cl ; test cl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000d17fd : sbb byte ptr [rdi], cl ; xchg dword ptr [rdi], esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000d372c : sbb byte ptr [rdi], cl ; xchg esi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000000204b : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000001b0b08 : sbb byte ptr [rdx - 0xb], dl ; jmp qword ptr [rcx]
0x00000000001a4368 : sbb byte ptr [rsi - 0x13], al ; call rbx
0x000000000019cbc8 : sbb byte ptr [rsi - 0x18], cl ; jmp qword ptr [rax]
0x0000000000109482 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000109481 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x00000000001993e4 : sbb byte ptr fs:[rcx], al ; add ah, ah ; push rbx ; int1 ; call rsp
0x0000000000197721 : sbb ch, cl ; jmp rsp
0x00000000001afec9 : sbb ch, dh ; jmp qword ptr [rcx]
0x00000000001988f9 : sbb ch, dh ; jmp rsp
0x00000000000f680e : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000f26b5 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x0000000000129513 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000000a59ff : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014509d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014720d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144c8d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144799 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144fa9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b1ba : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a9da : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014adca : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a5ea : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147d6d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014754d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000144a1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146d2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000144d5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145079 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a789 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145149 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014788d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014706d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014684d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147a2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000144efd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001446ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000144aed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014ac7a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a49a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b5aa : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144fcd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001447bd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146b8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014485f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144bbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146cc3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001479c3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001474e3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ab7b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014b4ab : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000147d03 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147003 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000146b23 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147823 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014accb : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a4eb : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144883 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000187d38 : sbb dh, byte ptr [rax - 0xd] ; call qword ptr [rsi]
0x00000000001b0001 : sbb dh, ch ; jmp qword ptr [rdx]
0x00000000001b2f21 : sbb dh, dh ; jmp qword ptr [rsi]
0x0000000000035b60 : sbb dh, dh ; ret 0x4402
0x000000000010eef2 : sbb dh, dh ; ret 0x7504
0x0000000000199531 : sbb dh, dl ; call rsp
0x00000000001b5dd0 : sbb dl, 0xf6 ; call qword ptr [rdi]
0x000000000019bf49 : sbb dl, bh ; call rsp
0x00000000000e9e42 : sbb dl, bh ; dec dword ptr [rax + 1] ; ret
0x0000000000186374 : sbb dl, dh ; in eax, dx ; call rsp
0x00000000001484c8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000007ffe6 : sbb dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000004d421 : sbb dword ptr [rax + 0x48fffffd], -0x7d ; ret 0x4901
0x00000000000d4353 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e984 : sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000001059c6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x0000000000098517 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000019e1c5 : sbb dword ptr [rax], eax ; add al, bh ; add ecx, ebp ; call qword ptr [rdx]
0x0000000000148451 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484c9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019e23d : sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; add ch, cl ; call qword ptr [rbx]
0x000000000019e1dd : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add ch, cl ; call qword ptr [rbx]
0x000000000019e285 : sbb dword ptr [rax], eax ; add byte ptr [rax], bh ; add ch, cl ; call qword ptr [rbx]
0x000000000019e225 : sbb dword ptr [rax], eax ; add byte ptr [rax], bl ; add ch, cl ; call qword ptr [rbx]
0x000000000019e255 : sbb dword ptr [rax], eax ; add byte ptr [rax], ch ; add ch, cl ; call qword ptr [rbx]
0x000000000019e1f5 : sbb dword ptr [rax], eax ; add byte ptr [rax], cl ; add ch, cl ; call qword ptr [rdx]
0x000000000019e26d : sbb dword ptr [rax], eax ; add byte ptr [rax], dh ; add ch, cl ; call qword ptr [rdx]
0x000000000019e20d : sbb dword ptr [rax], eax ; add byte ptr [rax], dl ; add ch, cl ; call qword ptr [rbx]
0x00000000000cc2d5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x000000000018489d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001247aa : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000025237 : sbb dword ptr [rcx*2 + 0x394d078b], eax ; ret 0x860f
0x0000000000025236 : sbb dword ptr [rcx*2 + 0x394d078b], r8d ; ret 0x860f
0x00000000001ae1ed : sbb dword ptr [rcx], eax ; add byte ptr [rax - 0x71], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1ec : sbb dword ptr [rcx], r8d ; add byte ptr [rax - 0x71], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000a711e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb3 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce5 ; ret
0x00000000001059b3 : sbb dword ptr [rdx - 8], edi ; dec dword ptr [rax + 0x39] ; ret
0x000000000019bc65 : sbb dword ptr [rdx], eax ; add byte ptr [rcx + rax*8 - 7], dl ; call rsp
0x0000000000136a23 : sbb dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000019e20c : sbb dword ptr fs:[rax], eax ; add byte ptr [rax], dl ; add ch, cl ; call qword ptr [rbx]
0x000000000016c45c : sbb eax, -1 ; ret
0x000000000011565b : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000460c2 : sbb eax, 0x147f27 ; mov rax, rbx ; pop rbx ; ret
0x0000000000196449 : sbb eax, 0x1f50fffc ; cld ; jmp rax
0x0000000000109011 : sbb eax, 0x2bb2aa ; pop rbx ; ret
0x0000000000044baa : sbb eax, 0x39480038 ; ret
0x00000000000211eb : sbb eax, 0x3a8610 ; pop rbx ; ret
0x0000000000020e72 : sbb eax, 0x3a8989 ; pop rbx ; ret
0x00000000000a5a89 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000112e82 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000001ae695 : sbb eax, 0x51780001 ; stc ; call qword ptr [rax]
0x00000000000a71dd : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x0000000000077ea6 : sbb eax, 0x8148fffd ; ret
0x0000000000065386 : sbb eax, 0x83480000 ; ret 0x4804
0x0000000000105a4a : sbb eax, 0x8859f ; mov rax, rbx ; pop rbx ; ret
0x00000000001ae635 : sbb eax, 0x9e980001 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae64d : sbb eax, 0x9eb00001 ; hlt ; jmp qword ptr [rcx]
0x00000000001ae665 : sbb eax, 0x9ec80001 ; hlt ; jmp qword ptr [rcx]
0x0000000000148271 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001482e9 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000004550 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000109221 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x35526
0x000000000013d952 : sbb eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x18 ; jmp 0x13d928
0x0000000000043e0d : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000043e1c : sbb eax, dword ptr [rax] ; add cl, ch ; ret 0xfff8
0x00000000001ae45d : sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0x6b], ah ; hlt ; jmp qword ptr [rcx]
0x000000000019bcad : sbb eax, dword ptr [rdx] ; add byte ptr [rsi + rcx*8 - 7], al ; call rsp
0x0000000000043e0c : sbb eax, dword ptr fs:[rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000001326b0 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000d592e : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004747a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d5980 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x0000000000123d42 : sbb eax, eax ; ret
0x0000000000171b65 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001aff11 : sbb ebp, esi ; jmp qword ptr [rcx]
0x00000000000ba79c : sbb ebx, 0x89000001 ; ret
0x0000000000133240 : sbb ebx, 3 ; call 0x1f465
0x000000000006fd94 : sbb ecx, dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000540b0 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012ccc1 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009a477 : sbb ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002a57c : sbb ecx, dword ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1276
0x000000000012b9a3 : sbb ecx, ebx ; sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000195d61 : sbb edi, ebx ; inc dword ptr [rax + 0x1d] ; sti ; jmp rax
0x0000000000196485 : sbb edi, esp ; call qword ptr [rax]
0x00000000001a85b1 : sbb edx, edi ; jmp qword ptr [rdi]
0x00000000001ab8f9 : sbb edx, esi ; call qword ptr [rax]
0x00000000000025c3 : sbb esi, dword ptr [rdx] ; sahf ; jl 0x255e ; loop 0x25a9 ; ret 0x23cb
0x00000000001153ce : sbb esi, ebx ; ret
0x00000000001b3149 : sbb esi, esi ; jmp qword ptr [rsi]
0x0000000000196481 : sbb esp, edi ; call qword ptr [rax]
0x00000000001964a1 : sbb esp, edi ; jmp rax
0x000000000019e1f4 : sbb qword ptr [rax], r8 ; add byte ptr [rax], cl ; add ch, cl ; call qword ptr [rdx]
0x000000000016c45b : sbb rax, -1 ; ret
0x00000000001aff58 : sbb rbp, rsi ; jmp qword ptr [rcx]
0x000000000013323f : sbb rbx, 3 ; call 0x1f466
0x00000000001b2f68 : sbb sil, sil ; jmp qword ptr [rsi]
0x00000000001461f2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b7795 : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; sub byte ptr [rdx - 9], cl ; call qword ptr [rdi]
0x000000000014b20e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000039af6 : scasb al, byte ptr [rdi] ; ret 0x38
0x000000000019623d : scasb al, byte ptr [rdi] ; sti ; call qword ptr [rax - 0x1f000451]
0x0000000000002f6a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014b30d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d00ea : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001a7825 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; mov ah, ah ; out dx, al ; jmp qword ptr [rsi]
0x00000000001175e6 : scasd eax, dword ptr [rdi] ; jmp 0x76d3af38
0x000000000013791c : scasd eax, dword ptr [rdi] ; pop rbx ; ret
0x00000000001860e0 : scasd eax, dword ptr [rdi] ; push rdx ; in eax, dx ; jmp qword ptr [rdx - 0x3d]
0x0000000000185e98 : scasd eax, dword ptr [rdi] ; push rsp ; in eax, dx ; call qword ptr [rcx]
0x00000000000371a0 : scasd eax, dword ptr [rdi] ; ret
0x00000000000754fc : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000a98b6 : scasd eax, dword ptr [rdi] ; ret 0x68e9
0x00000000000bba1a : scasd eax, dword ptr [rdi] ; ret 0x8941
0x0000000000037130 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000033bda : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000a98a5 : scasd eax, dword ptr [rdi] ; ret 0xda89
0x00000000000a98b3 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret 0x68e9
0x000000000019bbe1 : scasd eax, dword ptr [rdi] ; stc ; call rsp
0x0000000000196241 : scasd eax, dword ptr [rdi] ; sti ; jmp rax
0x0000000000002bb3 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efb5 ; ret
0x0000000000002590 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001094b5 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000f8cf8 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001145fc : setae al ; ret
0x000000000010a218 : setbe al ; ret
0x000000000012f250 : sete al ; movzx eax, al ; ret
0x000000000002e3a5 : sete al ; ret
0x00000000000ec9ab : sete dl ; jmp 0xec955
0x00000000000ec9aa : sete r10b ; jmp 0xec956
0x00000000000d4579 : setg dl ; jmp 0xd4502
0x00000000000ead4b : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x000000000006c759 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000ead2d : setne al ; movzx eax, al ; neg eax ; ret
0x000000000010265d : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035d76 : setne al ; movzx eax, al ; ret
0x0000000000078858 : setne al ; ret
0x00000000000adb8d : setne dl ; jmp 0xadba2
0x00000000000b03ae : setne dl ; jmp 0xb03c2
0x00000000000b2a86 : setne dl ; jmp 0xb2a9a
0x0000000000095f85 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001ad875 : sgdt ptr [rax] ; pop rdx ; sub al, 0xe7 ; jmp qword ptr [rax]
0x0000000000196428 : shl ah, 0xfb ; call qword ptr [rax]
0x0000000000187324 : shl ah, 1 ; int1 ; push rax ; in al, -0xf ; call qword ptr [rax]
0x000000000019641c : shl al, 1 ; sti ; jmp qword ptr [rax]
0x0000000000187384 : shl bh, 0xf1 ; call rax
0x0000000000187388 : shl bh, 1 ; int1 ; jmp rax
0x0000000000187304 : shl bl, 1 ; int1 ; push rax ; jrcxz 0x187303 ; call qword ptr [rax]
0x00000000000c0fd0 : shl byte ptr [rcx + rbp*2 - 0x2e], 0x90 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000019eda0 : shl byte ptr [rdx - 0x17], 1 ; jmp qword ptr [rsi]
0x00000000000a93df : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x00000000000346c6 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000170153 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000089c45 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016f20b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016f222 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000008d536 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d547 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000009f588 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000016f101 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bba01 : shl byte ptr [rsi - 0x77], cl ; push rbp ; ret 0x6348
0x0000000000187344 : shl ch, 1 ; int1 ; push rax ; in eax, -0xf ; call qword ptr [rax]
0x000000000017d7a0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000001833e8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000016f186 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000a923b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008d532 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001151d5 : shl dword ptr [rsi + 0xf], -0x2c ; ret 0xf66
0x000000000016f23d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f226 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f20f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016dccb : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f1a1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e8fc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009f7c8 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000016f061 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e59e1 : shl dword ptr [rsi - 0x7f], 1 ; loope 0xe59ec ; add esi, esi ; ret 0xf04
0x0000000000044a64 : shl eax, 0x1e ; or eax, edx ; ret
0x0000000000124a2a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000035ed3 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000047a3c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000479c7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000047996 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000020ad9 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a478 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000e418b : shl edx, 2 ; xor esi, esi ; call 0x8f209
0x000000000012489b : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x0000000000124a5c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000047a3b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000479c6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000047995 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000035ed2 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000020ad8 : shl rdi, 4 ; add rdi, rbp ; call rax
0x0000000000124a5b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000001a2241 : shr ah, 1 ; call qword ptr [rax]
0x00000000001a21c1 : shr ah, 1 ; jmp qword ptr [rax]
0x0000000000112265 : shr al, 0x65 ; ret
0x0000000000112213 : shr al, 0xb7 ; ret
0x00000000001873c4 : shr al, 0xf1 ; call rax
0x0000000000114576 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000143781 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000bdbcd : shr bl, cl ; add ecx, dword ptr [rax - 0x77] ; ret 0x8d4c
0x00000000000c6e70 : shr bl, cl ; ret 0x1f0f
0x00000000000d1c8b : shr bl, cl ; ret 0x8b4c
0x0000000000196d14 : shr byte ptr [rbp - 4], 0xff ; push rax ; insd dword ptr [rdi], dx ; cld ; jmp rax
0x0000000000187180 : shr byte ptr [rbp - 4], 1 ; push rax ; outsb dx, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x000000000009ff3f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b8baf : shr byte ptr [rcx], 1 ; ret
0x000000000008ecab : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000f8cfd : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000196cf0 : shr byte ptr [rdx - 4], 1 ; inc dword ptr [rax + 0x71] ; cld ; call rax
0x000000000005fd9c : shr cl, 0x9c ; sar edi, 1 ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000ec96d : shr cl, 0xd4 ; idiv bh ; inc dword ptr [rcx - 0x77] ; ret
0x00000000000ebf71 : shr cl, 1 ; ret
0x0000000000067035 : shr cl, cl ; pop rdx ; ret 0xffff
0x0000000000187438 : shr dl, 0xf1 ; call rax
0x000000000018743c : shr dl, 1 ; int1 ; jmp rax
0x00000000000bc26a : shr dword ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000e6e54 : shr dword ptr [rip + 0x28b4800], 1 ; mov qword ptr [rdx], rdi ; ret
0x00000000001191a8 : shr eax, 0x18 ; ret
0x00000000000349f1 : shr eax, 0x1f ; ret
0x00000000001700cc : shr eax, 0x20 ; cmp ecx, eax ; jne 0x1700df ; xor eax, eax ; ret
0x0000000000034620 : shr eax, 0x3f ; ret
0x0000000000107068 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000a9aca : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000114577 : shr eax, 0xe ; and eax, 1 ; ret
0x0000000000078fb2 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000124a30 : shr eax, 4 ; ret
0x0000000000078fc2 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a9aa9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000035d8f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000109f80 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x000000000010a5ab : shr eax, cl ; and eax, 1 ; ret
0x0000000000094a11 : shr eax, cl ; or r8, r10 ; mov qword ptr [rdi], r8 ; pop rbx ; ret
0x0000000000197a71 : shr ecx, 1 ; jmp rsp
0x0000000000142921 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001246c8 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035de7 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000047b4c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000047ad1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000047aa0 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000199089 : shr edi, cl ; call rsp
0x00000000001732c7 : shr edx, -1 ; ret
0x00000000000742a3 : shr edx, 2 ; sub eax, edx ; ret
0x000000000013bdca : shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000076dd0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000076ed0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002ded9 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2def0 ; ret
0x00000000001745b9 : shr edx, cl ; jmp rsp
0x00000000001745b5 : shr edx, cl ; push qword ptr [rbx + rdx*8 - 0x16] ; jmp rsp
0x00000000001a7611 : shr esi, cl ; jmp qword ptr [rsi]
0x0000000000047b4b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000047ad0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000047a9f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003461f : shr rax, 0x3f ; ret
0x0000000000107067 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000124a2f : shr rax, 4 ; ret
0x00000000000742a2 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000013bdc9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000001745b4 : shr rdx, cl ; push qword ptr [rbx + rdx*8 - 0x16] ; jmp rsp
0x000000000009f021 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ef91 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000992ef : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000e709 : sldt word ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000072417 : sldt word ptr [rax] ; mov edx, eax ; jmp 0x723c3
0x000000000017c965 : sldt word ptr [rax] ; ret 0xf
0x000000000003cb46 : stc ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000003d190 : stc ; add ch, cl ; ret 0xfffd
0x00000000001bc205 : stc ; add dword ptr [rax], eax ; sub byte ptr [rdi - 8], ah ; call rcx
0x00000000001244e4 : stc ; add dword ptr [rbp + 0xf], edx ; xchg eax, esi ; ret 0x8341
0x00000000000458a7 : stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x543a
0x00000000000ffa27 : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000000bec4e : stc ; and ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xd008
0x00000000001a7422 : stc ; call qword ptr [rax]
0x00000000000ac2a6 : stc ; call rbx
0x000000000019b78a : stc ; call rsp
0x0000000000195cf9 : stc ; cli ; push qword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x00000000000f6805 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000884d6 : stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105a33 : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsi + rcx + 0x48], 0x39 ; ret
0x00000000000f90d2 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000019ba22 : stc ; dec dword ptr [rcx + rcx + 0x6fc40002] ; stc ; call rsp
0x00000000000f97a2 : stc ; dec dword ptr [rcx - 0x73] ; add qword ptr [rax - 0x77], r9 ; ret 0x3948
0x00000000000fac4d : stc ; dec dword ptr [rcx - 0x77] ; ret 0x8d4b
0x000000000019b7ca : stc ; dec esp ; add dword ptr [rax], eax ; test byte ptr [rsi], dl ; stc ; jmp rsp
0x000000000019bdd2 : stc ; inc dword ptr [rbx - 0x32bfffe] ; stc ; call rsp
0x000000000019b782 : stc ; inc dword ptr [rcx + rsi*8 + 0xec40001] ; stc ; call rsp
0x00000000001ab2e9 : stc ; int1 ; call qword ptr [rax]
0x0000000000187505 : stc ; int1 ; inc eax ; stc ; int1 ; jmp rax
0x0000000000187509 : stc ; int1 ; jmp rax
0x000000000014a2c2 : stc ; je 0x14a28e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b952 : stc ; je 0x14b91e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001b2ffa : stc ; jmp qword ptr [rsi]
0x000000000019b7a2 : stc ; jmp rsp
0x0000000000183264 : stc ; jnp 0x183223 ; ret
0x000000000019b9fa : stc ; lcall ptr [rax + rcx + 0x6c440002] ; stc ; call rsp
0x000000000019b8d2 : stc ; ljmp ptr [rax + rax + 0x44d40002] ; stc ; jmp rsp
0x0000000000152fe8 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009f2c5 : stc ; mov qword ptr [rdx], rcx ; ret
0x000000000012798a : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ef0b : stc ; mov rax, rdi ; ret
0x00000000000c4025 : stc ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000047b8d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000019b922 : stc ; push qword ptr [rdx + rax + 0x50740002] ; stc ; jmp rsp
0x00000000001730c3 : stc ; ret
0x000000000008d973 : stc ; ret 0x33
0x00000000001722aa : stc ; salc ; clc ; ret
0x000000000008b365 : stc ; xor byte ptr [rcx - 0x6bf0be32], cl ; ret 0xf883
0x00000000000bec40 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf980
0x0000000000198fe5 : std ; add byte ptr [rax], al ; xor al, 0x7e ; out dx, eax ; jmp rsp
0x00000000000a97a9 : std ; add eax, dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xfe83
0x00000000000dee48 : std ; add rax, rdx ; jmp rax
0x000000000018727a : std ; call qword ptr [rax]
0x0000000000195e96 : std ; call qword ptr [rcx + 0x21fffd90]
0x0000000000195fce : std ; call qword ptr [rcx]
0x0000000000195ede : std ; call qword ptr [rsi + 0x26fffd91]
0x0000000000195e4e : std ; call qword ptr [rsi]
0x000000000019c84a : std ; call qword ptr [rsp + rdi + 2]
0x0000000000195e66 : std ; call rax
0x000000000019c752 : std ; call rsp
0x0000000000195d0d : std ; cli ; jmp rax
0x0000000000195d09 : std ; cli ; push rax ; std ; cli ; jmp rax
0x00000000001b2cd9 : std ; cmc ; jmp qword ptr [rsi]
0x00000000000f6671 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012e869 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000077ea7 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000195f2a : std ; dec dword ptr [rbx - 0x6d] ; std ; call rax
0x000000000019c85a : std ; dec dword ptr [rsi + rdi] ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001960ae : std ; dec eax ; sar ebx, -1 ; nop ; ret
0x000000000019c812 : std ; dec esp ; mov ebp, 0xc0740001 ; std ; jmp rsp
0x0000000000034e8d : std ; fstp st(1) ; ret
0x00000000001a2fd9 : std ; in al, dx ; jmp qword ptr [rax]
0x0000000000195f56 : std ; inc dword ptr [rax - 0x70] ; std ; call rax
0x0000000000195ea2 : std ; inc dword ptr [rcx - 0x6e] ; std ; jmp rcx
0x0000000000195e3e : std ; inc dword ptr [rcx - 0x76] ; std ; call qword ptr [rax]
0x0000000000195e92 : std ; inc dword ptr [rcx] ; nop ; std ; call qword ptr [rcx + 0x21fffd90]
0x0000000000195eda : std ; inc dword ptr [rsi] ; xchg eax, ecx ; std ; call qword ptr [rsi + 0x26fffd91]
0x0000000000187589 : std ; int1 ; call qword ptr [rax]
0x0000000000187581 : std ; int1 ; call rax
0x000000000018757d : std ; int1 ; inc eax ; std ; int1 ; call rax
0x000000000018755d : std ; int1 ; jmp qword ptr [rax]
0x0000000000187559 : std ; int1 ; push qword ptr [rax - 3] ; int1 ; jmp qword ptr [rax]
0x0000000000187585 : std ; int1 ; push rax ; std ; int1 ; call qword ptr [rax]
0x0000000000195e32 : std ; jmp qword ptr [rax]
0x0000000000195e9a : std ; jmp qword ptr [rcx]
0x000000000019da5a : std ; jmp qword ptr [rdi]
0x000000000019cf82 : std ; jmp qword ptr [rdx]
0x0000000000195ee2 : std ; jmp qword ptr [rsi]
0x000000000018723a : std ; jmp rax
0x0000000000195ea6 : std ; jmp rcx
0x0000000000195eee : std ; jmp rdi
0x0000000000195ec2 : std ; jmp rsi
0x00000000001997b1 : std ; jmp rsp
0x00000000000cc28f : std ; jne 0xcc25f ; ret
0x0000000000195f26 : std ; ljmp ptr [rbx + 0x4bfffd92] ; xchg eax, ebx ; std ; call rax
0x000000000015280b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000019c78a : std ; push qword ptr [0xffffffffb8d40000] ; std ; call rsp
0x0000000000195f52 : std ; push qword ptr [rax + 0x40fffd8f] ; nop ; std ; call rax
0x0000000000187276 : std ; push qword ptr [rax] ; fscale ; call qword ptr [rax]
0x0000000000195e5e : std ; push qword ptr [rax] ; mov bh, ch ; jmp rax
0x0000000000195e9e : std ; push qword ptr [rcx + 0x41fffd91] ; xchg eax, edx ; std ; jmp rcx
0x0000000000195fca : std ; push qword ptr [rcx - 0x5f] ; std ; call qword ptr [rcx]
0x000000000019606a : std ; push qword ptr [rcx - 0x5f] ; std ; call rax
0x0000000000195f9a : std ; push qword ptr [rcx - 0x5f] ; std ; jmp qword ptr [rax]
0x000000000019602a : std ; push qword ptr [rcx - 0x5f] ; std ; jmp rdi
0x0000000000195fc6 : std ; push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; call qword ptr [rcx]
0x0000000000196066 : std ; push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; call rax
0x0000000000195f96 : std ; push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; jmp qword ptr [rax]
0x0000000000196026 : std ; push qword ptr [rcx - 0x5f] ; std ; push qword ptr [rcx - 0x5f] ; std ; jmp rdi
0x000000000018727e : std ; push rax ; fcomi st(1) ; inc dword ptr [rax] ; fdivr st(1), st(0) ; call qword ptr [rax]
0x0000000000187272 : std ; push rax ; salc ; std ; push qword ptr [rax] ; fscale ; call qword ptr [rax]
0x000000000006f3e5 : std ; push rbx ; mov rbx, rsi ; call 0x8b6d7
0x00000000000b5e7f : std ; ret
0x0000000000060ec2 : std ; ret 0xffff
0x00000000000adb8c : std ; setne dl ; jmp 0xadba3
0x00000000000b03ad : std ; setne dl ; jmp 0xb03c3
0x00000000000b2a85 : std ; setne dl ; jmp 0xb2a9b
0x00000000000d0f2a : std ; sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8341
0x00000000001036d0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000000ba8fb : sti ; add al, byte ptr [rcx - 0x7f] ; ret
0x000000000019b85d : sti ; add dword ptr [rax], eax ; test byte ptr [rsi], bh ; stc ; call rsp
0x000000000009a58b : sti ; add dword ptr [rbp + 0x19], ecx ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000000c156d : sti ; add eax, 0x2941c229 ; ret
0x0000000000195de6 : sti ; call qword ptr [rax + 0x20fffb58]
0x00000000001961ca : sti ; call qword ptr [rax + 0x20fffbcd]
0x000000000019614a : sti ; call qword ptr [rax + 0x20fffbce]
0x0000000000196582 : sti ; call qword ptr [rax - 0x1f000400]
0x000000000019640a : sti ; call qword ptr [rax - 0x1f000425]
0x00000000001963b6 : sti ; call qword ptr [rax - 0x1f00042c]
0x000000000019623e : sti ; call qword ptr [rax - 0x1f000451]
0x000000000019622a : sti ; call qword ptr [rax - 0x2f000443]
0x0000000000196146 : sti ; call qword ptr [rax - 0x6f000434]
0x000000000019635e : sti ; call qword ptr [rax]
0x0000000000195d8e : sti ; call rax
0x00000000001bc35a : sti ; call rcx
0x00000000001b6992 : sti ; call rsi
0x0000000000199779 : sti ; call rsp
0x0000000000195d01 : sti ; cli ; call qword ptr [rax]
0x00000000000cadce : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cadb8 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006e7c1 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x0000000000195e2e : sti ; dec dword ptr [rdi - 0x76] ; std ; jmp qword ptr [rax]
0x0000000000195d42 : sti ; inc dword ptr [rax + 0x10] ; sti ; jmp rax
0x0000000000195d62 : sti ; inc dword ptr [rax + 0x1d] ; sti ; jmp rax
0x000000000019610e : sti ; inc dword ptr [rax + 0x40fffbc1] ; ret
0x0000000000195de2 : sti ; inc dword ptr [rax + 0x57] ; sti ; call qword ptr [rax + 0x20fffb58]
0x0000000000196406 : sti ; inc dword ptr [rax - 0x26] ; sti ; call qword ptr [rax - 0x1f000425]
0x00000000001963b2 : sti ; inc dword ptr [rax - 0x2d] ; sti ; call qword ptr [rax - 0x1f00042c]
0x0000000000196416 : sti ; inc dword ptr [rax - 0x2f000421] ; loopne 0x196423 ; jmp qword ptr [rax]
0x00000000001963c2 : sti ; inc dword ptr [rax - 0x2f000428] ; fsincos ; jmp qword ptr [rax]
0x000000000019624a : sti ; inc dword ptr [rax - 0x2f00044d] ; mov ah, 0xfb ; jmp qword ptr [rax]
0x00000000001961f6 : sti ; inc dword ptr [rax - 0x2f000454] ; lodsd eax, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x0000000000195db2 : sti ; inc dword ptr [rax - 0x2f0004b9] ; sti ; jmp qword ptr [rax]
0x000000000019617e : sti ; inc dword ptr [rax - 0x38] ; sti ; call qword ptr [rax]
0x00000000001960da : sti ; inc dword ptr [rax - 0x39] ; sti ; jmp qword ptr [rax]
0x00000000001960f6 : sti ; inc dword ptr [rax - 0x3b] ; sti ; jmp qword ptr [rax]
0x0000000000196196 : sti ; inc dword ptr [rax - 0x3c] ; sti ; jmp qword ptr [rax]
0x0000000000196112 : sti ; inc dword ptr [rax - 0x3d] ; sti ; jmp qword ptr [rax]
0x0000000000196226 : sti ; inc dword ptr [rax - 0x44] ; sti ; call qword ptr [rax - 0x2f000443]
0x0000000000195d26 : sti ; inc dword ptr [rax - 0x4f0004fc] ; idiv dl ; jmp qword ptr [rax]
0x000000000019623a : sti ; inc dword ptr [rax - 0x52] ; sti ; call qword ptr [rax - 0x1f000451]
0x0000000000196286 : sti ; inc dword ptr [rax - 0xb] ; sti ; inc dword ptr [rax - 9] ; sti ; call rax
0x000000000019657e : sti ; inc dword ptr [rax - 1] ; sti ; call qword ptr [rax - 0x1f000400]
0x000000000019628a : sti ; inc dword ptr [rax - 9] ; sti ; call rax
0x000000000019619e : sti ; inc dword ptr [rax] ; enter -5, -0x30 ; leave ; sti ; call rax
0x0000000000196376 : sti ; inc dword ptr [rax] ; in al, dx ; sti ; jmp rax
0x00000000001962f6 : sti ; inc dword ptr [rax] ; in eax, dx ; sti ; jmp rax
0x0000000000196426 : sti ; inc eax ; in al, -5 ; call qword ptr [rax]
0x0000000000196206 : sti ; inc eax ; mov cl, 0xfb ; call qword ptr [rax]
0x0000000000195dc2 : sti ; inc eax ; sti ; call qword ptr [rax]
0x00000000001965b2 : sti ; inc eax ; sti ; sti ; call qword ptr [rax]
0x0000000000189ad8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x000000000018753d : sti ; int1 ; jmp qword ptr [rax]
0x0000000000187539 : sti ; int1 ; push rax ; sti ; int1 ; jmp qword ptr [rax]
0x000000000019638a : sti ; jmp qword ptr [rax + 0x30fffbf5]
0x0000000000195d5e : sti ; jmp qword ptr [rax + 0x40fffb1b]
0x00000000001963ea : sti ; jmp qword ptr [rax - 0x1f00041b]
0x00000000001960f2 : sti ; jmp qword ptr [rax - 0x3d]
0x0000000000195d4e : sti ; jmp qword ptr [rax]
0x000000000018bc2a : sti ; jmp qword ptr [rdx]
0x0000000000195d46 : sti ; jmp rax
0x000000000019c67a : sti ; jmp rsp
0x00000000000d56a0 : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000bbc89 : sti ; mov al, 0x30 ; add byte ptr [rax + 1], cl ; ret
0x0000000000152be8 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009eeed : sti ; mov rax, rdi ; ret
0x000000000011d73a : sti ; or dword ptr [rdi], ecx ; ret
0x0000000000195dbe : sti ; push qword ptr [rax + 0x4b] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000195e2a : sti ; push qword ptr [rax + 0x5b] ; sti ; dec dword ptr [rdi - 0x76] ; std ; jmp qword ptr [rax]
0x0000000000196422 : sti ; push qword ptr [rax - 0x1d] ; sti ; inc eax ; in al, -5 ; call qword ptr [rax]
0x0000000000196202 : sti ; push qword ptr [rax - 0x50] ; sti ; inc eax ; mov cl, 0xfb ; call qword ptr [rax]
0x0000000000195da2 : sti ; push qword ptr [rax] ; cmp al, 0xfb ; call qword ptr [rax]
0x00000000001962d6 : sti ; push qword ptr [rax] ; in eax, dx ; sti ; call qword ptr [rax]
0x000000000019629e : sti ; push qword ptr [rax] ; int1 ; sti ; jmp qword ptr [rax]
0x000000000019635a : sti ; push qword ptr [rax] ; out dx, al ; sti ; call qword ptr [rax]
0x00000000001962ba : sti ; push qword ptr [rax] ; out dx, eax ; sti ; call qword ptr [rax]
0x00000000000d560b : sti ; push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019c672 : sti ; push qword ptr [rsp + rcx - 0x6d3bffff] ; sti ; jmp rsp
0x00000000001961b6 : sti ; push rax ; ret
0x0000000000195d8a : sti ; push rax ; xor bl, bh ; call rax
0x0000000000102021 : sti ; push rsp ; sub al, 0 ; add rsp, 0x18 ; ret
0x00000000001833ea : sti ; ret
0x0000000000041897 : sti ; ret 0xffbf
0x00000000001965b5 : sti ; sti ; call qword ptr [rax]
0x000000000002cbf7 : sti ; test rax, rax ; je 0x2cc05 ; call rax
0x00000000000af567 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd8a86
0x00000000000b1c07 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccdb126
0x00000000000b4867 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccddd86
0x0000000000102900 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000000f05fc : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001a738d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; push rax ; test dh, ch ; call qword ptr [rcx]
0x000000000008de3d : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000019c3e1 : stosb byte ptr [rdi], al ; cli ; call rsp
0x00000000001838c4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000000331b2 : stosb byte ptr [rdi], al ; ret 0xfffe
0x0000000000089464 : stosb byte ptr [rdi], al ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001983ad : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; hlt ; jns 0x1983a6 ; call rsp
0x00000000001a747d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; nop ; test esi, ebp ; call qword ptr [rax]
0x00000000000244ec : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2076
0x00000000001b23a1 : stosd dword ptr [rdi], eax ; cmc ; call rdi
0x00000000001a1c49 : stosd dword ptr [rdi], eax ; in al, dx ; jmp qword ptr [rcx]
0x00000000001981f1 : stosd dword ptr [rdi], eax ; jmp 0x1981f5
0x00000000001246cd : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000035dec : stosd dword ptr [rdi], eax ; ret
0x000000000011d971 : stosd dword ptr [rdi], eax ; ret 0
0x0000000000195f28 : stosd dword ptr [rdi], eax ; xchg eax, edx ; std ; dec dword ptr [rbx - 0x6d] ; std ; call rax
0x00000000000893ac : stosd dword ptr [rdi], eax ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000001246cc : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035deb : stosq qword ptr [rdi], rax ; ret
0x0000000000135735 : str word ptr [rax - 0x77] ; ret 0x8348
0x0000000000184db1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000102023 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fe08f : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe41b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8e54] ; ret
0x00000000000fe253 : sub al, 0 ; lea rax, qword ptr [rip + 0x2c901c] ; ret
0x00000000000ff3b2 : sub al, 0 ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000001026a5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fe5e9 : sub al, 0 ; mov rdx, rax ; jmp 0xfe583
0x0000000000101fcf : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000ff680 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001019dc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f99 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe25a : sub al, 0 ; ret
0x000000000019ebd4 : sub al, 0x23 ; add byte ptr [rax], al ; sub byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x000000000010157d : sub al, 0x2c ; add bl, dh ; ret
0x00000000000db4e5 : sub al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0xc839
0x00000000000aaae2 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x0000000000188838 : sub al, 0x45 ; hlt ; jmp qword ptr [rdx]
0x00000000001b10d4 : sub al, 0x48 ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x00000000000c74c3 : sub al, 0x4c ; mov edi, edi ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001b2cd4 : sub al, 0x64 ; add dword ptr [rax], eax ; cmp ch, bh ; cmc ; jmp qword ptr [rsi]
0x00000000001b31d4 : sub al, 0x69 ; add dword ptr [rax], eax ; cwde ; sbb esi, esi ; jmp qword ptr [rsi]
0x0000000000186dbc : sub al, 0x74 ; out dx, al ; jmp rsp
0x0000000000186dd0 : sub al, 0x74 ; out dx, al ; ljmp ptr [rsp + rsi*2] ; out dx, al ; jmp rsp
0x00000000000aaae5 : sub al, 0x75 ; pop rax ; ret
0x000000000013e8f9 : sub al, 0x75 ; sub al, 0x83 ; ret
0x000000000013e8fb : sub al, 0x83 ; ret
0x000000000006877b : sub al, 0x83 ; ret 0x8308
0x000000000016e853 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001ad4d4 : sub al, 0xc ; add dword ptr [rax], eax ; sub dh, dl ; jmp qword ptr [rcx]
0x00000000001ad879 : sub al, 0xe7 ; jmp qword ptr [rax]
0x00000000001bb4d4 : sub al, 0xec ; add dword ptr [rax], eax ; call 0x231bb067
0x0000000000127cc1 : sub al, 0xf ; xchg eax, ebp ; sar dword ptr [rbx], 0xf ; xchg eax, ebp ; ret 0xd184
0x0000000000102055 : sub al, 0xf5 ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000db97b : sub al, 0xf6 ; ret
0x00000000001af4e5 : sub al, 1 ; add al, bl ; in al, -0xc ; jmp qword ptr [rcx]
0x00000000001af4b5 : sub al, 1 ; add byte ptr [rax - 0x1c], bh ; hlt ; jmp qword ptr [rcx]
0x000000000019c9d4 : sub al, 1 ; add byte ptr [rax], al ; mov byte ptr [rcx - 0x18], al ; call qword ptr [rax]
0x00000000001af595 : sub al, 1 ; add byte ptr [rax], bl ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001996dd : sub al, 1 ; add byte ptr [rcx + rcx*8], dh ; jmp rsp
0x000000000012d532 : sub al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; call rbx
0x0000000000033c2a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x00000000001190aa : sub al, byte ptr [rax] ; add rsp, 0x28 ; jmp rax
0x0000000000120c03 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000120416 : sub al, byte ptr [rax] ; call rax
0x000000000012146d : sub al, byte ptr [rax] ; ret
0x00000000001283ee : sub al, byte ptr [rax] ; test eax, eax ; je 0x1283fe ; ret
0x000000000005ae39 : sub al, byte ptr [rbx - 0x1d743] ; call qword ptr [rax]
0x00000000001894c0 : sub al, byte ptr [rcx - 0x7ed5000b] ; cmc ; jmp qword ptr [rax]
0x000000000018950c : sub al, byte ptr [rcx - 0x7ed5000b] ; cmc ; jmp rsi
0x00000000001af32d : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x1e], dl ; hlt ; jmp qword ptr [rbx]
0x000000000019befd : sub al, byte ptr [rdx] ; add byte ptr [rbx + rdx - 6], ah ; jmp rsp
0x0000000000033c87 : sub al, ch ; ret
0x00000000000bd338 : sub al, ch ; ret 0xfbbe
0x0000000000133292 : sub al, dl ; out dx, al ; dec dword ptr [rcx + rcx*4 - 9] ; call 0x1f4c9
0x000000000007347c : sub bh, bh ; loopne 0x73419 ; mov eax, 0xffffffff ; ret
0x00000000000cadcd : sub bh, bl ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cadb7 : sub bh, bl ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fcfb7 : sub bl, dh ; ret
0x00000000000aaad6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000078005 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x000000000013b851 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001426b1 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000140569 : sub byte ptr [r8], r8b ; add rsp, 8 ; ret
0x0000000000140737 : sub byte ptr [r8], r8b ; call qword ptr [rax]
0x000000000013b5c1 : sub byte ptr [r9], r14b ; sar byte ptr [rcx], 0xd1 ; jae 0x13b5d8 ; ret
0x000000000013b601 : sub byte ptr [r9], r14b ; sar byte ptr [rcx], 0xd1 ; jae 0x13b618 ; ret
0x0000000000079bdb : sub byte ptr [rax + 0x29], cl ; ret
0x0000000000042379 : sub byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000028cd2 : sub byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x000000000006dcb5 : sub byte ptr [rax + 0x39], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x8349
0x00000000000f5ef7 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000078006 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x0000000000134f9e : sub byte ptr [rax + 1], bh ; ret
0x0000000000048542 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x0000000000029ff1 : sub byte ptr [rax + 1], cl ; ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000013b852 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e3eb6 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x0000000000082e3a : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff4
0x0000000000049b1b : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000085234 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rcx
0x0000000000131ba8 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000081c4f : sub byte ptr [rax - 0x77], cl ; pop rdx ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000f23c5 : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000bd7ac : sub byte ptr [rax - 0x77], cl ; ret 0x3a80
0x00000000000fa093 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000f90d7 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000006e654 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000727d8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000078fe4 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rax + 0xf], al ; mov dh, 0xc7 ; ret
0x0000000000078fe3 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rax + 0xf], al ; mov dh, 0xc7 ; ret
0x00000000000c6573 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000c6572 : sub byte ptr [rax - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000ef560 : sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000029a65 : sub byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000022d5 : sub byte ptr [rax], 0x10 ; salc ; ret
0x000000000019f18d : sub byte ptr [rax], al ; add al, dh ; push 0xe9 ; jmp qword ptr [rcx]
0x000000000005b694 : sub byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rax ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001405af : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000137965 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014013b : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000138565 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138578 ; ret
0x00000000001406c5 : sub byte ptr [rax], al ; jmp rax
0x0000000000140929 : sub byte ptr [rax], al ; jne 0x14093f ; jmp 0x140959
0x0000000000142f55 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x100] ; jmp rax
0x00000000001406be : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2823b9] ; jmp rax
0x0000000000140614 : sub byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x000000000013d534 : sub byte ptr [rax], al ; test eax, eax ; je 0x13d548 ; xor eax, eax ; ret
0x0000000000143c04 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143c18 ; xor eax, eax ; ret
0x0000000000143c34 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143c48 ; xor eax, eax ; ret
0x0000000000143c64 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143c78 ; xor eax, eax ; ret
0x0000000000143c94 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143ca8 ; xor eax, eax ; ret
0x0000000000143cc4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143cd8 ; xor eax, eax ; ret
0x0000000000143cf4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x143d08 ; xor eax, eax ; ret
0x00000000000022d6 : sub byte ptr [rax], dl ; salc ; ret
0x00000000000aaada : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000aaad9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000bc44c : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000208cc : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006c0ab : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000142e43 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000142e42 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000001a3f82 : sub byte ptr [rbx - 0x2ff1aafb], al ; add al, 2 ; ret 0xe0a
0x00000000001accb8 : sub byte ptr [rbx - 0xd], dh ; call qword ptr [rsi]
0x00000000001a3eb8 : sub byte ptr [rbx], bh ; in eax, dx ; jmp qword ptr [rbx]
0x00000000000aaad7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000004255f : sub byte ptr [rcx + 0x39], cl ; ret
0x000000000013b927 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f0821 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000001126ca : sub byte ptr [rcx], ch ; ret 0x8941
0x000000000008537b : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000013b5c2 : sub byte ptr [rcx], dh ; sar byte ptr [rcx], 0xd1 ; jae 0x13b5d7 ; ret
0x000000000013b602 : sub byte ptr [rcx], dh ; sar byte ptr [rcx], 0xd1 ; jae 0x13b617 ; ret
0x00000000001a4fc8 : sub byte ptr [rdi - 0x13], dh ; call qword ptr [rcx]
0x000000000012e81c : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001bc0e8 : sub byte ptr [rdi - 8], ah ; call qword ptr [rdi]
0x00000000001bc208 : sub byte ptr [rdi - 8], ah ; call rcx
0x00000000001ab6a8 : sub byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000000ee65d : sub byte ptr [rdi], cl ; test dword ptr [rsi - 0x16000002], esp ; ret 0xfffd
0x00000000000add3a : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00000000001afe48 : sub byte ptr [rdi], dl ; cmc ; call qword ptr [rdx]
0x00000000001b7798 : sub byte ptr [rdx - 9], cl ; call qword ptr [rdi]
0x000000000019ebd8 : sub byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x000000000012c7a2 : sub byte ptr [rsi - 0x77], ah ; je 0x12c7d2 ; and ch, al ; ret
0x00000000001b10d8 : sub byte ptr [rsi - 0xb], ah ; jmp qword ptr [rcx]
0x0000000000002bf0 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001a14f1 : sub ch, bl ; call rdi
0x0000000000196cec : sub ch, byte ptr [rbx - 4] ; call rax
0x000000000006b79e : sub cl, 0x50 ; ret
0x00000000000347a1 : sub cl, al ; ret
0x00000000000aab86 : sub cl, byte ptr [rax + rax] ; ret
0x00000000000d0145 : sub cl, byte ptr [rax - 0x7d] ; ret
0x000000000007f801 : sub cl, ch ; ret 0xfffc
0x00000000001ab078 : sub cl, dh ; int1 ; jmp rdi
0x000000000010e2b5 : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10e282
0x00000000001048bd : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002622b : sub dh, dh ; ret
0x000000000002caed : sub dh, dh ; ret 0xf04
0x00000000001ad4d8 : sub dh, dl ; jmp qword ptr [rcx]
0x0000000000197d71 : sub dl, ch ; jmp rsp
0x000000000005a953 : sub dword ptr [rax - 0x7d], ecx ; ret 0x3c01
0x000000000012c5ed : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000128865 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128879 ; ret
0x000000000013788c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012dde5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000128af5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b8e6 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012c5d4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12c5e6 ; ret
0x0000000000168343 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x00000000001af1ed : sub dword ptr [rcx], eax ; add al, al ; fdivrp st(4) ; jmp qword ptr [rcx]
0x0000000000142fbe : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001af1ec : sub dword ptr [rcx], r8d ; add al, al ; fdivrp st(4) ; jmp qword ptr [rcx]
0x0000000000150e37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150e4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000150f87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x150f9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001510d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1510ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151227 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15123d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151377 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15138d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001514c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1514dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151617 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15162d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151767 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15177d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001518b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1518cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151a07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151a1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151b57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151b6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151ca7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151cbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151df7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151e0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151f47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151f5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152097 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1520ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15381d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15396d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153d47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153d5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153e97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153ead ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153fe7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153ffd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154137 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15414d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154287 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15429d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001543d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1543ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154527 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15453d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154677 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15468d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001547c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1547dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154917 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15492d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154a67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154a7d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001561d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1561ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156327 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15633d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156477 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15648d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001565c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1565dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156717 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15672d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156867 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15687d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001569b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1569cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156b07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156b1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156c57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156c6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156da7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156dbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156ef7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156f0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157047 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15705d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157197 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1571ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001572e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1572fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157437 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15744d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000000258f : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret 0x88ad
0x0000000000150d93 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000150d8f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000150e3d : sub dword ptr [rdi], esp ; jmp r9
0x000000000016fea9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f036 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000137986 : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000085369 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013b69a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e6e55 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000e7205 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x000000000018869c : sub eax, 0x40fff3cd ; hlt ; jmp rax
0x00000000000f3d91 : sub eax, 0x538d4800 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ea8e5 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034a09 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000f3bf3 : sub eax, 0x840f0200 ; ret 1
0x00000000000ea8c5 : sub eax, 0xd8b4800 ; ret 0x2dc8
0x00000000001af5ad : sub eax, 0xe7300001 ; hlt ; jmp qword ptr [rcx]
0x00000000001af5c5 : sub eax, 0xe7480001 ; hlt ; jmp qword ptr [rcx]
0x0000000000136b2e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002ae94 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004747f : sub eax, 1 ; ret
0x00000000001245b0 : sub eax, dword ptr [rax + rcx*4 + 0x43] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001090e3 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001090d6 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000005714d : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x733a9
0x0000000000114d52 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001091c8 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000010cb54 : sub eax, dword ptr [rax] ; call 0xf7b09
0x0000000000114eff : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x114ee8 ; ret
0x0000000000109062 : sub eax, dword ptr [rax] ; je 0x10906d ; pop rbp ; ret
0x000000000010b5af : sub eax, dword ptr [rax] ; jne 0x10b5c6 ; jmp 0x10b5e0
0x0000000000109e45 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001092f6 : sub eax, dword ptr [rax] ; mov qword ptr [rsp + 0x20], rax ; call 0x35529
0x00000000001096cd : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000001155dc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000109014 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000114634 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114648 ; xor eax, eax ; ret
0x0000000000114664 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114678 ; xor eax, eax ; ret
0x0000000000114694 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146a8 ; xor eax, eax ; ret
0x00000000001146c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1146d8 ; xor eax, eax ; ret
0x00000000001146f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114708 ; xor eax, eax ; ret
0x0000000000114724 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114738 ; xor eax, eax ; ret
0x0000000000114754 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114768 ; xor eax, eax ; ret
0x0000000000114784 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114798 ; xor eax, eax ; ret
0x00000000001147b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1147c8 ; xor eax, eax ; ret
0x00000000001147e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1147f8 ; xor eax, eax ; ret
0x0000000000114814 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114828 ; xor eax, eax ; ret
0x0000000000114844 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114858 ; xor eax, eax ; ret
0x0000000000114874 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114888 ; xor eax, eax ; ret
0x00000000001148a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1148b8 ; xor eax, eax ; ret
0x00000000001148d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1148e8 ; xor eax, eax ; ret
0x0000000000114904 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114918 ; xor eax, eax ; ret
0x0000000000114934 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114948 ; xor eax, eax ; ret
0x0000000000114964 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114978 ; xor eax, eax ; ret
0x0000000000114994 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1149a8 ; xor eax, eax ; ret
0x00000000001149c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1149d8 ; xor eax, eax ; ret
0x0000000000114a24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114a38 ; xor eax, eax ; ret
0x0000000000114a54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114a68 ; xor eax, eax ; ret
0x0000000000114a84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114a98 ; xor eax, eax ; ret
0x0000000000114ab4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ac8 ; xor eax, eax ; ret
0x0000000000114ae4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114af8 ; xor eax, eax ; ret
0x0000000000114b14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b28 ; xor eax, eax ; ret
0x0000000000114b44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b58 ; xor eax, eax ; ret
0x0000000000114b74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b88 ; xor eax, eax ; ret
0x0000000000114ba4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114bb8 ; xor eax, eax ; ret
0x00000000001150a5 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x1150b7 ; ret
0x000000000002eccf : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a9ca1 : sub eax, dword ptr [rcx + r8*4] ; je 0xa9c87 ; ret
0x00000000000a9ca2 : sub eax, dword ptr [rcx + rax*4] ; je 0xa9c86 ; ret
0x0000000000045944 : sub eax, dword ptr [rcx - 0x7d] ; cld ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca38
0x00000000001af46d : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; in al, -0xc ; jmp qword ptr [rcx]
0x00000000001af3dd : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; jrcxz 0x1af3dd ; jmp qword ptr [rcx]
0x00000000001af485 : sub eax, dword ptr [rcx] ; add byte ptr [rax], bl ; in al, -0xc ; jmp qword ptr [rcx]
0x000000000007de6e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000078945 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000078835 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000074925 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000078936 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078826 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000a9c5a : sub eax, dword ptr [rdx + rcx*4] ; je 0xa9c46 ; ret
0x000000000007d603 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000110768 : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00000000000ab03c : sub eax, eax ; ret
0x00000000000abdeb : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ac01b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007cd49 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004916d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f810a : sub eax, ecx ; mov rdi, r8 ; call 0x943f7
0x000000000008b0cc : sub eax, ecx ; ret
0x000000000008b881 : sub eax, edi ; ret
0x00000000001106ff : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x00000000000b5d21 : sub eax, edx ; mov ebx, dword ptr [rsp + 0x44] ; jmp 0xb5cf3
0x000000000003a429 : sub eax, edx ; ret
0x00000000000349ef : sub eax, edx ; shr eax, 0x1f ; ret
0x000000000003461d : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000172337 : sub eax, edx ; vzeroupper ; ret
0x000000000007c4da : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079fe8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b5d20 : sub eax, r10d ; mov ebx, dword ptr [rsp + 0x44] ; jmp 0xb5cf4
0x0000000000110767 : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00000000000ab03b : sub eax, r8d ; ret
0x0000000000188098 : sub ebp, dword ptr [rbp - 0x52f2000d] ; call rax
0x000000000019c8c9 : sub ebp, eax ; call rax
0x000000000018365e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001379c3 : sub ebp, eax ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a6c01 : sub ebp, esi ; jmp qword ptr [rcx]
0x00000000001989b9 : sub ebp, esi ; jmp rsp
0x00000000001820f5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f6b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000b8a6c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013324e : sub ebx, ebp ; mov r15, rax ; call 0x1f467
0x0000000000035de4 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000007fb85 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000048155 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a5741 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d2dee : sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8041
0x00000000000d0f2b : sub ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x8341
0x0000000000034cee : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000a9e6c : sub edi, 0x10 ; add rax, rdi ; ret
0x00000000000cadc5 : sub edi, ebx ; dec dword ptr [rax - 0x77] ; ret
0x000000000019bfb9 : sub edi, edx ; call rsp
0x000000000019ab89 : sub edi, esi ; call rsp
0x000000000007d630 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007d625 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008eb24 : sub edx, eax ; jbe 0x8eb67 ; add rax, rdi ; ret
0x000000000008eb34 : sub edx, eax ; jbe 0x8eb69 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb44 : sub edx, eax ; jbe 0x8eb69 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb54 : sub edx, eax ; jbe 0x8eb69 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000003c7f8 : sub edx, eax ; jmp 0x3c820
0x000000000003f6fd : sub edx, eax ; jmp 0x3f728
0x00000000000421cd : sub edx, eax ; jmp 0x421f8
0x00000000000ade00 : sub edx, eax ; jmp 0xade24
0x00000000000b063a : sub edx, eax ; jmp 0xb065c
0x00000000000b2d0a : sub edx, eax ; jmp 0xb2d2c
0x0000000000034d2f : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x0000000000075656 : sub edx, esi ; mov rdi, rbx ; call rax
0x00000000001244be : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000014255a : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b6b41 : sub esi, edi ; call rcx
0x0000000000036830 : sub esp, -0x80 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036781 : sub esp, -0x80 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f70a0 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f0d4 : sub esp, -0x80 ; pop rbx ; ret
0x000000000011f0e1 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000010e2b4 : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e283
0x0000000000114d51 : sub r8, qword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114efe : sub r8, qword ptr [r8] ; cmp rdx, rax ; jne 0x114ee9 ; ret
0x000000000007cd48 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000000f8109 : sub r8, rcx ; mov rdi, r8 ; call 0x943f8
0x0000000000120c02 : sub r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000012146c : sub r8b, byte ptr [r8] ; ret
0x0000000000137985 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000a9613 : sub rax, 1 ; ret
0x000000000007de6d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000078944 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000078834 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074924 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000078935 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000078825 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000149e9d : sub rax, r8 ; ret
0x00000000000ac01a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008b880 : sub rax, rdi ; ret
0x000000000003a43d : sub rax, rdx ; ret
0x000000000003461c : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000172336 : sub rax, rdx ; vzeroupper ; ret
0x000000000013324d : sub rbx, r13 ; mov r15, rax ; call 0x1f468
0x00000000000a9e6b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008eb23 : sub rdx, rax ; jbe 0x8eb68 ; add rax, rdi ; ret
0x000000000003c7f7 : sub rdx, rax ; jmp 0x3c821
0x000000000003f6fc : sub rdx, rax ; jmp 0x3f729
0x00000000000421cc : sub rdx, rax ; jmp 0x421f9
0x00000000000addff : sub rdx, rax ; jmp 0xade25
0x00000000000b0639 : sub rdx, rax ; jmp 0xb065d
0x00000000000b2d09 : sub rdx, rax ; jmp 0xb2d2d
0x0000000000075655 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000f709f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011f0d3 : sub rsp, -0x80 ; pop rbx ; ret
0x000000000011f0e0 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000034700 : subps xmm0, xmm1 ; ret
0x00000000000346ff : subsd xmm0, xmm1 ; ret
0x0000000000034a84 : subss xmm0, xmm1 ; ret
0x00000000001258d1 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f6b6d : syscall ; neg eax ; ret
0x0000000000114c17 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000cbb05 : syscall ; ret
0x0000000000106eaf : syscall ; test rax, rax ; jl 0x106efe ; je 0x106ec2 ; ret
0x0000000000088cff : sysenter
0x000000000006542e : test ah, ah ; and eax, 0x83480000 ; ret 0x4804
0x00000000000c6838 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed31
0x00000000000d33a8 : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001ade31 : test ah, dh ; call qword ptr [rax]
0x00000000001adde9 : test ah, dh ; call qword ptr [rsi]
0x000000000019b0d8 : test ah, dh ; idiv edi ; pushfq ; ret
0x00000000001a71a5 : test al, 0 ; add byte ptr [rax + 0x76], ch ; out dx, al ; call qword ptr [rax]
0x00000000001379e7 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000baf6c : test al, 0 ; add byte ptr [rax], al ; call r15
0x0000000000131a32 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000136219 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002d3e0 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000002a11f : test al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r14
0x0000000000089714 : test al, 0x33 ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x000000000006c0e7 : test al, 0x35 ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000003c8e : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d7e01 : test al, 0x45 ; cmp cl, bl ; jne 0xd7dce ; jmp 0xd7dbd
0x00000000000d7698 : test al, 0x48 ; add eax, edx ; jmp rax
0x000000000009fb4f : test al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000001178d2 : test al, 0x48 ; mov eax, edi ; add rsp, 8 ; ret
0x00000000000c78e3 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x00000000001057cd : test al, 0x48 ; mov edx, eax ; jmp 0x1057ff
0x00000000001057cc : test al, 0x48 ; mov edx, eax ; jmp 0x105800
0x0000000000105876 : test al, 0x48 ; mov edx, eax ; jmp 0x1058a9
0x0000000000105875 : test al, 0x48 ; mov edx, eax ; jmp 0x1058aa
0x00000000001a6ee8 : test al, 0x49 ; out dx, al ; jmp qword ptr [rax]
0x00000000001b0d68 : test al, 0x62 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0f88 : test al, 0x64 ; cmc ; jmp qword ptr [rcx]
0x00000000001aa188 : test al, 0x7c ; int1 ; call qword ptr [rax]
0x0000000000120414 : test al, 0x87 ; sub al, byte ptr [rax] ; call rax
0x00000000000d41fc : test al, 0x89 ; ret
0x00000000001829b7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001aa688 : test al, 0xcb ; int1 ; call qword ptr [rbx]
0x0000000000186f54 : test al, 0xe6 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001a1b91 : test al, 0xec ; jmp qword ptr [rax]
0x00000000000ab409 : test al, 0xf0 ; jne 0xab468 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ab408 : test al, 0xf0 ; jne 0xab469 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001ab238 : test al, 0xf7 ; int1 ; jmp qword ptr [rcx]
0x000000000019bb99 : test al, 0xf9 ; jmp rsp
0x00000000000f7896 : test al, 2 ; cmove eax, edx ; ret
0x000000000013434d : test al, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000097350 : test al, al ; je 0x97343 ; xor eax, eax ; ret
0x00000000000972f8 : test al, al ; je 0x9734e ; xor eax, eax ; ret
0x00000000000974e8 : test al, al ; je 0x974d5 ; pop rbx ; pop rbp ; ret
0x0000000000097481 : test al, al ; je 0x974e6 ; pop rbx ; pop rbp ; ret
0x000000000009f112 : test al, al ; jne 0x9f0f5 ; ret
0x000000000009f250 : test al, al ; jne 0x9f236 ; xor eax, eax ; ret
0x000000000009ff3a : test al, al ; jne 0x9ff28 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000115fe9 : test al, al ; mov byte ptr [rdi], al ; jne 0x115fe1 ; mov rax, rdi ; ret
0x00000000001161b9 : test al, al ; mov byte ptr [rdi], al ; jne 0x1161b1 ; mov rax, r10 ; ret
0x00000000000653a6 : test al, al ; sbb eax, 0x83480000 ; ret 0x4804
0x0000000000065384 : test al, bh ; sbb eax, 0x83480000 ; ret 0x4804
0x000000000013c508 : test al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000007ffeb : test al, dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000029fca : test al, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000000000e85d4 : test bh, ah ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x0000000000199031 : test bh, ch ; jmp rsp
0x0000000000198d00 : test bh, cl ; out dx, al ; jmp rsp
0x00000000000704d4 : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001ac02c : test bh, dh ; add byte ptr [rax], al ; mov al, 0x9c ; jmp qword ptr [rdi]
0x00000000001aa02c : test bh, dl ; add byte ptr [rax], al ; add byte ptr [rdx - 0xf], al ; jmp qword ptr [rcx]
0x000000000008020f : test bl, ch ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000760f0 : test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000cc60a : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x0000000000131905 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x0000000000134f25 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x000000000009ec31 : test byte ptr [rax + 0xffffff6], bh ; mov dh, 0x55 ; ret 0x8348
0x00000000001b312c : test byte ptr [rax + 1], ch ; add al, dh ; sbb dh, dh ; jmp qword ptr [rsi]
0x00000000001a5d2c : test byte ptr [rax + rax - 0x12294000], dl ; call qword ptr [rsi]
0x00000000000ee851 : test byte ptr [rax + rax - 0x7cb70000], dl ; ret 0x4118
0x000000000012faf7 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x0000000000045d71 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0xfee9
0x00000000000e3199 : test byte ptr [rax - 0x17f7dbac], 0xad ; ret 0xfff3
0x0000000000102f69 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000001036d4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x00000000000460b9 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x000000000012a627 : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000013b7b9 : test byte ptr [rax - 0x77], 0xef ; call r12
0x0000000000085e8f : test byte ptr [rax - 0x77], 0xef ; call rax
0x00000000000df0a6 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ba853 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000014333a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000017032a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000001684da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a4e6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a5e3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000016850a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a5e5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a5e6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d598a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000c730a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; ret
0x000000000006ecba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000012469a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000016854a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a5eaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007d8da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001684ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a5e4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x0000000000020789 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000076cda : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006c12a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003abaa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f71a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000326db : test byte ptr [rax], bh ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011020b : test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011039f : test byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x7510
0x000000000019bf48 : test byte ptr [rax], bl ; cli ; call rsp
0x00000000000bb203 : test byte ptr [rax], cl ; add byte ptr [rax - 0x39], cl ; ret 0
0x000000000009a573 : test byte ptr [rax], cl ; and al, 0 ; add bh, dh ; ret
0x000000000009a567 : test byte ptr [rax], cl ; and al, byte ptr [rax] ; add bh, dh ; ret
0x00000000000d5736 : test byte ptr [rbp + 0x39], al ; ret 0xe975
0x000000000009ec44 : test byte ptr [rbp + 0xffffff6], ah ; mov dh, 0x55 ; ret
0x0000000000025f24 : test byte ptr [rbp - 0xa000000], dh ; ret
0x000000000007efbf : test byte ptr [rbp - 0xa000000], dl ; ret
0x0000000000112e8c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x112ef8 ; xor eax, eax ; pop rbx ; ret
0x00000000000e7b5e : test byte ptr [rbx - 0x72b6fd40], 0x3c ; idiv byte ptr [rcx] ; ret
0x00000000000bab98 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x148
0x00000000001aec2c : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; loopne 0x1aec05 ; hlt ; jmp rbx
0x000000000009e80e : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000011f7a0 : test byte ptr [rbx], ch ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001ad42c : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; adc ch, 0xf3 ; jmp qword ptr [rcx]
0x0000000000020517 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019c024 : test byte ptr [rbx], dh ; add al, byte ptr [rax] ; xor r15d, edx ; jmp rsp
0x000000000009e75e : test byte ptr [rcx + 0xffffff3], al ; mov dh, 0x55 ; ret 0x8348
0x000000000008e38c : test byte ptr [rcx + rax - 0x7cb80000], dh ; ret 0xe901
0x0000000000087b4f : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000009e802 : test byte ptr [rcx + rax], bl ; add bh, dh ; ret 0
0x0000000000084bef : test byte ptr [rcx + rax], bl ; add dh, dh ; ret
0x000000000009706f : test byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000085eaf : test byte ptr [rcx + rax], cl ; add dh, dh ; ret
0x0000000000037752 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x0000000000102902 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000d76e2 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000c62fa : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000082282 : test byte ptr [rcx - 0x9fffffc], dh ; ret
0x000000000008180f : test byte ptr [rcx - 0xa000000], bl ; ret
0x0000000000084967 : test byte ptr [rcx - 0xa000000], dl ; ret
0x0000000000196644 : test byte ptr [rcx - 4], 0xff ; xchg byte ptr [rcx - 4], cl ; call qword ptr [rsi]
0x0000000000144886 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000002c10a : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009e681 : test byte ptr [rcx], dl ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x0000000000032748 : test byte ptr [rdi + 0x29480005], cl ; ret
0x000000000008b934 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x000000000019aca0 : test byte ptr [rdi + rsi*8], bh ; jmp rsp
0x00000000000ff714 : test byte ptr [rdi - 0x18000000], ah ; ret 0xf782
0x0000000000045074 : test byte ptr [rdi - 0x7cfffff9], dl ; ret 0x8b01
0x0000000000188728 : test byte ptr [rdi - 0xc], 0xff ; in al, dx ; hlt ; jmp rdx
0x000000000008b576 : test byte ptr [rdi], 0x84 ; ret
0x0000000000102d7a : test byte ptr [rdi], 0x84 ; ret 0
0x00000000000d6bba : test byte ptr [rdi], 0x88 ; ret 1
0x00000000000bab71 : test byte ptr [rdi], 0x94 ; ret 0xf983
0x0000000000121836 : test byte ptr [rdi], 0x95 ; ret 0x2041
0x0000000000078882 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078892 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000001af02c : test byte ptr [rdi], ah ; add dword ptr [rax], eax ; mov al, 0xda ; hlt ; jmp qword ptr [rcx]
0x0000000000097dfa : test byte ptr [rdi], ah ; or byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000a57e8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000000001271bf : test byte ptr [rdi], bh ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019b870 : test byte ptr [rdi], bh ; stc ; jmp rsp
0x0000000000081c71 : test byte ptr [rdi], ch ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001af82c : test byte ptr [rdi], ch ; add dword ptr [rax], eax ; add bh, ch ; hlt ; jmp qword ptr [rsi]
0x0000000000095f84 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000010273e : test byte ptr [rdx + 0x39000000], ah ; ret
0x000000000019c03c : test byte ptr [rdx + rax], dh ; add byte ptr [rdi + rsi], al ; cli ; jmp rsp
0x0000000000021377 : test byte ptr [rdx], bh ; add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x000000000019e32c : test byte ptr [rdx], bl ; add byte ptr [rax], al ; push rax ; add ch, cl ; call qword ptr [rcx]
0x00000000001af32c : test byte ptr [rdx], ch ; add dword ptr [rax], eax ; push rax ; loop 0x1af32e ; jmp qword ptr [rbx]
0x000000000009e675 : test byte ptr [rdx], dh ; add eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000019939c : test byte ptr [rip + 0x45c40001], dl ; int1 ; call rsp
0x000000000013382c : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x00000000001ade2c : test byte ptr [rip - 0x7befffff], dl ; hlt ; call qword ptr [rax]
0x000000000008377e : test byte ptr [rsi + rdi*8 - 0x7cb70001], bh ; jmp qword ptr [rax]
0x00000000001981ec : test byte ptr [rsi - 0x546c0000], bl ; jmp 0x1981fa
0x00000000000853fc : test byte ptr [rsi - 0xa000000], dl ; ret
0x00000000000e2d5f : test byte ptr [rsi], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001a472c : test byte ptr [rsi], bh ; add byte ptr [rax], ah ; in eax, dx ; jmp qword ptr [rsi]
0x000000000009eb54 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000019b860 : test byte ptr [rsi], bh ; stc ; call rsp
0x00000000001a172c : test byte ptr [rsi], cl ; add byte ptr [rax + 0x37], ah ; jmp 0x1a173a
0x000000000019b7d0 : test byte ptr [rsi], dl ; stc ; jmp rsp
0x00000000000e65c8 : test byte ptr [rsp + rcx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret
0x000000000018884c : test byte ptr [rsp + rsi*8 - 1], 0xec ; hlt ; jmp rdx
0x00000000000a9a92 : test ch, 0xf0 ; je 0xa9a8b ; movzx eax, cl ; pop rbx ; ret
0x0000000000060ed9 : test ch, ah ; ret 0xffff
0x000000000013bca5 : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001ab62c : test ch, ch ; add byte ptr [rax], al ; adc byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000000001a54d9 : test ch, ch ; jmp qword ptr [rax]
0x00000000001732c6 : test cl, 0xea ; push rbx ; ret
0x00000000000973ab : test cl, cl ; je 0x973f6 ; xor eax, eax ; ret
0x0000000000126716 : test cl, cl ; jne 0x12666c ; ret
0x0000000000097339 : test cl, cl ; jne 0x97312 ; mov rax, rdi ; ret
0x000000000009f0b8 : test cl, cl ; jne 0x9f0ad ; ret
0x000000000009f1f7 : test cl, cl ; jne 0x9f1ee ; xor eax, eax ; ret
0x00000000000a929f : test cl, cl ; jne 0xa9294 ; ret
0x00000000000a934f : test cl, cl ; jne 0xa9344 ; ret
0x00000000000a960f : test cl, cl ; jne 0xa9608 ; sub rax, 1 ; ret
0x000000000012e3aa : test cl, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a9aba : test dh, 0xf0 ; je 0xa9a89 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a9aba : test dh, 0xf0 ; je 0xa9a8b ; movzx eax, dl ; pop rbx ; ret
0x000000000012e398 : test dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000013db70 : test dh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000114061 : test dh, bh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1780 : test dh, bl ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x39], al ; ret
0x00000000001a7391 : test dh, ch ; call qword ptr [rcx]
0x000000000009f2b0 : test dh, dh ; jne 0x9f2a7 ; mov qword ptr [rdx], rcx ; ret
0x00000000000242b5 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000060ed0 : test dh, dh ; ret 0xffff
0x00000000001701b4 : test dl, 0x40 ; jne 0x170179 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001701e2 : test dl, 4 ; jne 0x170179 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000019b0bc : test dl, al ; add dword ptr [rax], eax ; hlt ; out dx, eax ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000000f20a1 : test dl, cl ; add al, 0 ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x0000000000033952 : test dl, dl ; jne 0x33934 ; ret
0x000000000009f074 : test dl, dl ; jne 0x9f06d ; ret
0x00000000000a94bf : test dl, dl ; jne 0xa94b8 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000cff3e : test dl, dl ; jne 0xcff26 ; ret
0x000000000008f7a9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a5b1b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a702b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a6f2b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x0000000000095157 : test dword ptr [rax + rax - 0x76b80000], esi ; ret 0xf748
0x000000000013f649 : test dword ptr [rax - 0x17000002], eax ; pop rbp ; ret 0xfffb
0x0000000000069484 : test dword ptr [rax - 0x17000002], edi ; ret 0x422
0x000000000005e294 : test dword ptr [rax - 0x17000003], edi ; ret 0x310
0x000000000005b0e5 : test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x0000000000004a90 : test dword ptr [rax], 0 ; add byte ptr [rax], al ; ret 0x26
0x00000000000704d5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x00000000001ac02d : test dword ptr [rax], 0xf29cb000 ; jmp qword ptr [rdi]
0x0000000000054f11 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001a4ded : test dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x1a4de6 ; jmp qword ptr [rcx]
0x00000000000857e7 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x00000000000bba51 : test dword ptr [rax], ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bb153 : test dword ptr [rax], ecx ; add byte ptr [rax - 0x39], cl ; ret 0x400
0x000000000004df9f : test dword ptr [rax], ecx ; ret 0xffff
0x00000000001a4dec : test dword ptr [rax], r8d ; add byte ptr [rax], al ; jno 0x1a4de7 ; jmp qword ptr [rcx]
0x00000000000857e6 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000125ebb : test dword ptr [rbp - 0x7c000002], eax ; ret
0x000000000009474f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009f62e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000aa9f0 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ab2f8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000168428 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000168408 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168320 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a7120 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016eb37 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016ef86 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b67 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x000000000003b77b : test dword ptr [rbx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009f598 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000db142 : test dword ptr [rbx], ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000008ea9a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008f4c0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000016812a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016eb0d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5702 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016ea1d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e92d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000aaa37 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000172067 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000aaa07 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000001684ca : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x00000000000379f1 : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000008f6aa : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x0000000000035d73 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000a5867 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a5847 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000094565 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000035f56 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000003b2bb : test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a5a01 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a6e09 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x000000000016fe82 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016e852 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004d2d1 : test dword ptr [rdx + rdi*8 + 0x1ffff], esp ; add byte ptr [rax], al ; jmp rax
0x000000000010373d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000001683e7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000633d9 : test dword ptr [rdx], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000125d35 : test dword ptr [rip - 0x7cfffffe], eax ; ret
0x00000000000ab39d : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001719f2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a5825 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a5805 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a571d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x000000000005629d : test dword ptr [rsi + rbp*8 + 0x1ffff], ebx ; add byte ptr [rax], al ; jmp rax
0x00000000000ee65f : test dword ptr [rsi - 0x16000002], esp ; ret 0xfffd
0x000000000009484e : test dword ptr [rsi - 0xc000005], esp ; ret
0x0000000000127885 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016ed58 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000098216 : test eax, 0x4bb ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001846a0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000158886 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034ab8 : test eax, 0x7fffff ; je 0x34ab1 ; ret
0x0000000000189ad6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000105c1f : test eax, eax ; cmove eax, edx ; ret
0x000000000003a4e4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00000000001050ac : test eax, eax ; je 0x105150 ; call rax
0x0000000000105223 : test eax, eax ; je 0x105328 ; call rax
0x00000000001150a8 : test eax, eax ; je 0x1150b4 ; ret
0x00000000001173ca : test eax, eax ; je 0x1173e0 ; add rsp, 8 ; ret
0x000000000012000d : test eax, eax ; je 0x12001d ; mov rdi, rbx ; call rax
0x00000000001202fd : test eax, eax ; je 0x12030d ; mov rdi, rbx ; call rax
0x00000000001283f0 : test eax, eax ; je 0x1283fc ; ret
0x000000000012b8b1 : test eax, eax ; je 0x12b8c1 ; mov rdi, rsp ; call rax
0x000000000012b98c : test eax, eax ; je 0x12b99c ; mov rdi, rsp ; call rax
0x000000000012c245 : test eax, eax ; je 0x12c255 ; mov rdi, rbp ; call rax
0x000000000012c5d6 : test eax, eax ; je 0x12c5e4 ; ret
0x000000000012d2c3 : test eax, eax ; je 0x12d2d3 ; mov rdi, r14 ; call rax
0x000000000012d861 : test eax, eax ; je 0x12d876 ; xor eax, eax ; ret
0x0000000000132288 : test eax, eax ; je 0x132298 ; mov rdi, r12 ; call rax
0x0000000000132469 : test eax, eax ; je 0x13247b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133763 : test eax, eax ; je 0x133773 ; mov rdi, r13 ; call rax
0x0000000000133956 : test eax, eax ; je 0x133966 ; mov rdi, rbp ; call rax
0x0000000000133b76 : test eax, eax ; je 0x133b86 ; mov rdi, rbp ; call rax
0x000000000013468d : test eax, eax ; je 0x13469f ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134d39 : test eax, eax ; je 0x134d49 ; mov rdi, r12 ; call rax
0x00000000001350ad : test eax, eax ; je 0x1350bf ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001378dc : test eax, eax ; je 0x1378ba ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001378ad : test eax, eax ; je 0x1378bd ; pop rbx ; ret
0x0000000000137919 : test eax, eax ; je 0x1378d1 ; pop rbx ; ret
0x0000000000138649 : test eax, eax ; je 0x13865b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138d72 : test eax, eax ; je 0x138d84 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013d536 : test eax, eax ; je 0x13d546 ; xor eax, eax ; ret
0x0000000000145293 : test eax, eax ; je 0x14529f ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146278 : test eax, eax ; je 0x146284 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000002b713 : test eax, eax ; je 0x2b71d ; call rax
0x000000000002cbf9 : test eax, eax ; je 0x2cc03 ; call rax
0x000000000007951d : test eax, eax ; je 0x7952d ; pop rbx ; ret
0x000000000007edf3 : test eax, eax ; je 0x7edfd ; call rax
0x0000000000082a68 : test eax, eax ; je 0x82a88 ; mov qword ptr [rsp + 8], rsi ; call rax
0x0000000000085809 : test eax, eax ; je 0x85813 ; call rax
0x000000000008b4c0 : test eax, eax ; je 0x8b4d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000caccc : test eax, eax ; je 0xcacd6 ; call rax
0x00000000000cae69 : test eax, eax ; je 0xcae77 ; call rax
0x00000000000fd54c : test eax, eax ; je 0xfd557 ; ret
0x00000000000ff301 : test eax, eax ; je 0xff310 ; mov qword ptr [rax], rdx ; ret
0x0000000000106eb2 : test eax, eax ; jl 0x106efb ; je 0x106ebf ; ret
0x0000000000114606 : test eax, eax ; jne 0x114619 ; mov eax, 1 ; ret
0x0000000000114636 : test eax, eax ; jne 0x114646 ; xor eax, eax ; ret
0x0000000000114666 : test eax, eax ; jne 0x114676 ; xor eax, eax ; ret
0x0000000000114696 : test eax, eax ; jne 0x1146a6 ; xor eax, eax ; ret
0x00000000001146c6 : test eax, eax ; jne 0x1146d6 ; xor eax, eax ; ret
0x00000000001146f6 : test eax, eax ; jne 0x114706 ; xor eax, eax ; ret
0x0000000000114726 : test eax, eax ; jne 0x114736 ; xor eax, eax ; ret
0x0000000000114756 : test eax, eax ; jne 0x114766 ; xor eax, eax ; ret
0x0000000000114786 : test eax, eax ; jne 0x114796 ; xor eax, eax ; ret
0x00000000001147b6 : test eax, eax ; jne 0x1147c6 ; xor eax, eax ; ret
0x00000000001147e6 : test eax, eax ; jne 0x1147f6 ; xor eax, eax ; ret
0x0000000000114816 : test eax, eax ; jne 0x114826 ; xor eax, eax ; ret
0x0000000000114846 : test eax, eax ; jne 0x114856 ; xor eax, eax ; ret
0x0000000000114876 : test eax, eax ; jne 0x114886 ; xor eax, eax ; ret
0x00000000001148a6 : test eax, eax ; jne 0x1148b6 ; xor eax, eax ; ret
0x00000000001148d6 : test eax, eax ; jne 0x1148e6 ; xor eax, eax ; ret
0x0000000000114906 : test eax, eax ; jne 0x114916 ; xor eax, eax ; ret
0x0000000000114936 : test eax, eax ; jne 0x114946 ; xor eax, eax ; ret
0x0000000000114966 : test eax, eax ; jne 0x114976 ; xor eax, eax ; ret
0x0000000000114996 : test eax, eax ; jne 0x1149a6 ; xor eax, eax ; ret
0x00000000001149c6 : test eax, eax ; jne 0x1149d6 ; xor eax, eax ; ret
0x0000000000114a26 : test eax, eax ; jne 0x114a36 ; xor eax, eax ; ret
0x0000000000114a56 : test eax, eax ; jne 0x114a66 ; xor eax, eax ; ret
0x0000000000114a86 : test eax, eax ; jne 0x114a96 ; xor eax, eax ; ret
0x0000000000114ab6 : test eax, eax ; jne 0x114ac6 ; xor eax, eax ; ret
0x0000000000114ae6 : test eax, eax ; jne 0x114af6 ; xor eax, eax ; ret
0x0000000000114b16 : test eax, eax ; jne 0x114b26 ; xor eax, eax ; ret
0x0000000000114b46 : test eax, eax ; jne 0x114b56 ; xor eax, eax ; ret
0x0000000000114b76 : test eax, eax ; jne 0x114b86 ; xor eax, eax ; ret
0x0000000000114ba6 : test eax, eax ; jne 0x114bb6 ; xor eax, eax ; ret
0x0000000000114bf0 : test eax, eax ; jne 0x114beb ; pop rdx ; pop r10 ; ret
0x0000000000114ce3 : test eax, eax ; jne 0x114cf5 ; ret
0x0000000000115060 : test eax, eax ; jne 0x115025 ; leave ; ret
0x000000000012886a : test eax, eax ; jne 0x128874 ; ret
0x0000000000132696 : test eax, eax ; jne 0x1326a4 ; ret
0x0000000000138856 : test eax, eax ; jne 0x138864 ; ret
0x0000000000143c06 : test eax, eax ; jne 0x143c16 ; xor eax, eax ; ret
0x0000000000143c36 : test eax, eax ; jne 0x143c46 ; xor eax, eax ; ret
0x0000000000143c66 : test eax, eax ; jne 0x143c76 ; xor eax, eax ; ret
0x0000000000143c96 : test eax, eax ; jne 0x143ca6 ; xor eax, eax ; ret
0x0000000000143cc6 : test eax, eax ; jne 0x143cd6 ; xor eax, eax ; ret
0x0000000000143cf6 : test eax, eax ; jne 0x143d06 ; xor eax, eax ; ret
0x00000000001734a6 : test eax, eax ; jne 0x1734b5 ; ret
0x0000000000035166 : test eax, eax ; jne 0x35175 ; ret
0x000000000006c11f : test eax, eax ; jne 0x6c138 ; mov rax, rbx ; pop rbx ; ret
0x000000000007d5e4 : test eax, eax ; jne 0x7d5dd ; ret
0x000000000007e6d5 : test eax, eax ; jne 0x7e70a ; xor edi, edi ; call qword ptr [r15]
0x000000000008975f : test eax, eax ; jne 0x89755 ; ret
0x000000000008d7dc : test eax, eax ; jne 0x8d7a6 ; add rsp, 8 ; ret
0x000000000008d7ff : test eax, eax ; jne 0x8d818 ; add rsp, 8 ; ret
0x000000000008ead7 : test eax, eax ; jne 0x8eb37 ; xor rax, rax ; ret
0x000000000009f668 : test eax, eax ; jne 0x9f6e6 ; xor eax, eax ; ret
0x00000000000ab4e1 : test eax, eax ; jne 0xab4b5 ; ret
0x00000000000ab5a6 : test eax, eax ; jne 0xab59e ; xor eax, eax ; ret
0x00000000000fb86d : test eax, eax ; jne 0xfb818 ; mov edi, ebp ; call 0xf7b08
0x00000000000fe1ef : test eax, eax ; jne 0xfe1c5 ; pop rbx ; ret
0x00000000000fe3b0 : test eax, eax ; jne 0xfe385 ; pop rbx ; ret
0x0000000000076f0b : test eax, eax ; js 0x76f1d ; ret
0x0000000000085ab6 : test eax, eax ; js 0x85ac5 ; ret
0x000000000007920e : test ebp, ebp ; jne 0x79228 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000adb88 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xadba7
0x00000000000b03a9 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb03c7
0x00000000000b2a81 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb2a9f
0x0000000000060ec1 : test ebp, edi ; ret 0xffff
0x00000000000ddb2b : test ebp, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x000000000008ea00 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000063268 : test ebx, ebx ; je 0x63284 ; mov rdi, qword ptr [rbx] ; call 0x1f4c9
0x0000000000173584 : test ebx, ebx ; mov rdx, rbx ; jne 0x173581 ; pop rbx ; ret
0x00000000001bb331 : test ebx, edi ; jmp qword ptr [rdx]
0x00000000000b5388 : test ebx, esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001701a2 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000002bbfc : test ecx, ecx ; je 0x2bc06 ; call rcx
0x000000000006c878 : test ecx, ecx ; je 0x6c885 ; ret
0x00000000000ab4cb : test ecx, ecx ; jne 0xab4c5 ; ret
0x00000000000ac979 : test ecx, ecx ; jne 0xac937 ; mov rax, rdx ; ret
0x00000000000a9cf3 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xa9cef ; ret
0x0000000000133266 : test edi, edi ; je 0x13327b ; mov rdi, r15 ; call 0x1f4c9
0x000000000013327f : test edi, edi ; je 0x13328e ; call 0x1f4c6
0x000000000013328d : test edi, edi ; je 0x13329c ; call 0x1f4c6
0x00000000001202e1 : test edi, edi ; jne 0x1202d5 ; pop rbx ; ret
0x000000000017325b : test edi, edi ; jne 0x17324f ; pop rbx ; ret
0x00000000001191a2 : test edi, edi ; js 0x1191b9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001a1059 : test edx, ebp ; call qword ptr [rdi]
0x00000000001a1071 : test edx, ebp ; jmp qword ptr [rdx]
0x000000000012de73 : test edx, edx ; je 0x12de83 ; mov rdi, rbp ; call rdx
0x0000000000172e54 : test edx, edx ; je 0x172e5e ; call rdx
0x0000000000172f67 : test edx, edx ; je 0x172f76 ; call rdx
0x0000000000078c8a : test edx, edx ; je 0x78ca1 ; mov eax, 0xffffffff ; ret
0x0000000000082936 : test edx, edx ; je 0x8294f ; mov qword ptr [rsp + 0x30], rax ; call rdx
0x000000000008b709 : test edx, edx ; je 0x8b717 ; bsf eax, edx ; ret
0x000000000008b709 : test edx, edx ; je 0x8b718 ; bsf eax, edx ; ret
0x000000000008b7b2 : test edx, edx ; je 0x8b7c7 ; bsf rax, rdx ; ret
0x000000000008b7b2 : test edx, edx ; je 0x8b7c8 ; bsf rax, rdx ; ret
0x000000000008b756 : test edx, edx ; je 0x8b7d8 ; bsf rax, rdx ; ret
0x000000000008b9a1 : test edx, edx ; je 0x8b9c7 ; bsf rax, rdx ; ret
0x000000000008b9a1 : test edx, edx ; je 0x8b9c8 ; bsf rax, rdx ; ret
0x00000000000caee9 : test edx, edx ; je 0xcaef7 ; call rdx
0x0000000000114f3d : test edx, edx ; jne 0x114f35 ; leave ; ret
0x00000000001385c5 : test edx, edx ; jne 0x1385b5 ; pop rbx ; ret
0x0000000000072fdf : test edx, edx ; jne 0x72fd5 ; ret
0x000000000007b073 : test edx, edx ; jne 0x7b084 ; ret
0x000000000007bc1f : test edx, edx ; jne 0x7bc15 ; ret
0x0000000000089809 : test edx, edx ; jne 0x89805 ; ret
0x00000000000ab80f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xab80f ; ret
0x00000000000b9f2f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xb9f30 ; ret
0x000000000013bb80 : test edx, edx ; mov eax, 1 ; jne 0x13bb99 ; ret
0x000000000013bbc0 : test edx, edx ; mov eax, 1 ; jne 0x13bbd9 ; ret
0x00000000000360ba : test edx, edx ; sete al ; ret
0x00000000001a7481 : test esi, ebp ; call qword ptr [rax]
0x00000000001a7499 : test esi, ebp ; jmp qword ptr [rsi]
0x000000000006ad5e : test esi, ebp ; ret
0x0000000000066e0d : test esi, ecx ; ret
0x0000000000170195 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000002ae49 : test esi, esi ; je 0x2ae55 ; pop rbx ; ret
0x000000000008b891 : test esi, esi ; jne 0x8b8a0 ; xor rax, rax ; ret
0x0000000000096a9e : test esi, esi ; jne 0x96ab1 ; jmp 0x96a6b
0x00000000000973fe : test esi, esi ; jne 0x973cc ; xor eax, eax ; ret
0x00000000001701af : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000897bf : test esp, esp ; jne 0x897f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035f55 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000897be : test r12, r12 ; jne 0x897f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011505f : test r8, r8 ; jne 0x115026 ; leave ; ret
0x000000000009f111 : test r8b, r8b ; jne 0x9f0f6 ; ret
0x000000000009f24f : test r8b, r8b ; jne 0x9f237 ; xor eax, eax ; ret
0x0000000000145292 : test r8d, r8d ; je 0x1452a0 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146277 : test r8d, r8d ; je 0x146285 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000ab4e0 : test r8d, r8d ; jne 0xab4b6 ; ret
0x00000000000973aa : test r9b, r9b ; je 0x973f7 ; xor eax, eax ; ret
0x00000000000973a9 : test r9b, r9b ; je 0x973f8 ; xor eax, eax ; ret
0x00000000000ac978 : test r9d, r9d ; jne 0xac938 ; mov rax, rdx ; ret
0x00000000001050ab : test rax, rax ; je 0x105151 ; call rax
0x0000000000105222 : test rax, rax ; je 0x105329 ; call rax
0x00000000001150a7 : test rax, rax ; je 0x1150b5 ; ret
0x00000000001173c9 : test rax, rax ; je 0x1173e1 ; add rsp, 8 ; ret
0x000000000012000c : test rax, rax ; je 0x12001e ; mov rdi, rbx ; call rax
0x00000000001202fc : test rax, rax ; je 0x12030e ; mov rdi, rbx ; call rax
0x000000000012b8b0 : test rax, rax ; je 0x12b8c2 ; mov rdi, rsp ; call rax
0x000000000012b98b : test rax, rax ; je 0x12b99d ; mov rdi, rsp ; call rax
0x000000000012c244 : test rax, rax ; je 0x12c256 ; mov rdi, rbp ; call rax
0x000000000012d2c2 : test rax, rax ; je 0x12d2d4 ; mov rdi, r14 ; call rax
0x0000000000132287 : test rax, rax ; je 0x132299 ; mov rdi, r12 ; call rax
0x0000000000132468 : test rax, rax ; je 0x13247c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133762 : test rax, rax ; je 0x133774 ; mov rdi, r13 ; call rax
0x0000000000133955 : test rax, rax ; je 0x133967 ; mov rdi, rbp ; call rax
0x0000000000133b75 : test rax, rax ; je 0x133b87 ; mov rdi, rbp ; call rax
0x000000000013468c : test rax, rax ; je 0x1346a0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000134d38 : test rax, rax ; je 0x134d4a ; mov rdi, r12 ; call rax
0x00000000001350ac : test rax, rax ; je 0x1350c0 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001378ac : test rax, rax ; je 0x1378be ; pop rbx ; ret
0x0000000000137918 : test rax, rax ; je 0x1378d2 ; pop rbx ; ret
0x0000000000138648 : test rax, rax ; je 0x13865c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000138d71 : test rax, rax ; je 0x138d85 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000002b712 : test rax, rax ; je 0x2b71e ; call rax
0x000000000002cbf8 : test rax, rax ; je 0x2cc04 ; call rax
0x000000000007951c : test rax, rax ; je 0x7952e ; pop rbx ; ret
0x000000000007edf2 : test rax, rax ; je 0x7edfe ; call rax
0x0000000000085808 : test rax, rax ; je 0x85814 ; call rax
0x000000000008b4bf : test rax, rax ; je 0x8b4d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000caccb : test rax, rax ; je 0xcacd7 ; call rax
0x00000000000cae68 : test rax, rax ; je 0xcae78 ; call rax
0x00000000000fd54b : test rax, rax ; je 0xfd558 ; ret
0x00000000000ff300 : test rax, rax ; je 0xff311 ; mov qword ptr [rax], rdx ; ret
0x0000000000106eb1 : test rax, rax ; jl 0x106efc ; je 0x106ec0 ; ret
0x000000000007d5e3 : test rax, rax ; jne 0x7d5de ; ret
0x000000000007e6d4 : test rax, rax ; jne 0x7e70b ; xor edi, edi ; call qword ptr [r15]
0x000000000008975e : test rax, rax ; jne 0x89756 ; ret
0x00000000000fe1ee : test rax, rax ; jne 0xfe1c6 ; pop rbx ; ret
0x00000000000fe3af : test rax, rax ; jne 0xfe386 ; pop rbx ; ret
0x000000000007920d : test rbp, rbp ; jne 0x79229 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bbfb : test rcx, rcx ; je 0x2bc07 ; call rcx
0x000000000013327e : test rdi, rdi ; je 0x13328f ; call 0x1f4c7
0x000000000013327d : test rdi, rdi ; je 0x133290 ; call 0x1f4c8
0x000000000013328c : test rdi, rdi ; je 0x13329d ; call 0x1f4c7
0x00000000001202e0 : test rdi, rdi ; jne 0x1202d6 ; pop rbx ; ret
0x00000000001202df : test rdi, rdi ; jne 0x1202d7 ; pop rbx ; ret
0x000000000017325a : test rdi, rdi ; jne 0x173250 ; pop rbx ; ret
0x000000000012de72 : test rdx, rdx ; je 0x12de84 ; mov rdi, rbp ; call rdx
0x0000000000172e53 : test rdx, rdx ; je 0x172e5f ; call rdx
0x0000000000172f66 : test rdx, rdx ; je 0x172f77 ; call rdx
0x000000000008b7b1 : test rdx, rdx ; je 0x8b7c8 ; bsf rax, rdx ; ret
0x000000000008b7b1 : test rdx, rdx ; je 0x8b7c9 ; bsf rax, rdx ; ret
0x000000000008b755 : test rdx, rdx ; je 0x8b7d9 ; bsf rax, rdx ; ret
0x000000000008b9a0 : test rdx, rdx ; je 0x8b9c8 ; bsf rax, rdx ; ret
0x000000000008b9a0 : test rdx, rdx ; je 0x8b9c9 ; bsf rax, rdx ; ret
0x00000000000caee8 : test rdx, rdx ; je 0xcaef8 ; call rdx
0x0000000000114f3c : test rdx, rdx ; jne 0x114f36 ; leave ; ret
0x00000000001385c4 : test rdx, rdx ; jne 0x1385b6 ; pop rbx ; ret
0x0000000000072fde : test rdx, rdx ; jne 0x72fd6 ; ret
0x000000000007b072 : test rdx, rdx ; jne 0x7b085 ; ret
0x000000000007bc1e : test rdx, rdx ; jne 0x7bc16 ; ret
0x0000000000089808 : test rdx, rdx ; jne 0x89806 ; ret
0x000000000008b890 : test rsi, rsi ; jne 0x8b8a1 ; xor rax, rax ; ret
0x0000000000096a9d : test rsi, rsi ; jne 0x96ab2 ; jmp 0x96a6c
0x00000000000973fd : test rsi, rsi ; jne 0x973cd ; xor eax, eax ; ret
0x000000000009f2af : test sil, sil ; jne 0x9f2a8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b66 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000006b6e : verw word ptr [rcx] ; ret 0x18
0x000000000007a907 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000014d65a : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014d590 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014d359 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000172290 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014d49f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014d2c3 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014d326 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000017223a : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000001722a5 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000001722a9 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000014a2c1 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000067033 : vpsrld xmm13, xmm9, xmm1 ; pop rdx ; ret 0xffff
0x0000000000172339 : vzeroupper ; ret
0x000000000019a955 : wait ; add dword ptr [rax], eax ; add r14b, dil ; jmp rsp
0x00000000000faa31 : wait ; or al, 0xf9 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000039b09 : wait ; ret 0x38
0x0000000000034949 : wait ; ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000888be : wait ; xor eax, eax ; pop rbx ; ret
0x00000000000a8edd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a8f5f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9061 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb8 : xabort -0xd ; ret
0x0000000000002bb4 : xbegin 0xfffffffff8c6efb4 ; ret
0x0000000000197231 : xchg ah, bh ; jmp qword ptr [rax + 0x20fffc8e]
0x00000000001871d1 : xchg ah, bh ; push qword ptr [rax - 0x79] ; cld ; jmp rax
0x000000000014509f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001458c3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014720f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144c8f : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001459b3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001457d3 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014479b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000096e45 : xchg al, bh ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x0000000000144fab : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000195eec : xchg ax, bx ; std ; jmp rdi
0x000000000014b1bc : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014a9dc : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014adcc : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a5ec : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d0ed : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001bb179 : xchg bl, bh ; jmp qword ptr [rdx]
0x000000000014bbf1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014cdf1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c4f1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c7f1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bee9 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014621b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000147d6f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014754f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000144a1f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146d2f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000098f22 : xchg byte ptr [rax - 0x77], cl ; ret
0x0000000000144d5f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000145d73 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000014507b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a78b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014514b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014788f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145503 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000022bb0 : xchg byte ptr [rbp + rcx*4 + 0x24], cl ; ret
0x000000000014706f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001356c4 : xchg byte ptr [rbp + rdi*8 - 1], al ; dec dword ptr [rax - 0x7d] ; ret 0x4807
0x000000000014684f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000147a2f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x0000000000144eff : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f53 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001456e3 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001446ef : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001a7b11 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x0000000000146133 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d8e71 : xchg byte ptr [rcx - 0x7d], al ; ret 0xf01
0x0000000000196648 : xchg byte ptr [rcx - 4], cl ; call qword ptr [rsi]
0x0000000000196b34 : xchg byte ptr [rcx - 4], dh ; call qword ptr [rsi]
0x000000000019a51d : xchg byte ptr [rcx], al ; add ah, al ; mov dh, dh ; call rsp
0x0000000000144aef : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014ac7c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a49c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b5ac : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072416 : xchg byte ptr [rdi], cl ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x723c4
0x0000000000144fcf : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000146043 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001447bf : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000146b8f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144861 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145985 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145a75 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145895 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000144bbf : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000014c196 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146cc5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001479c5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d096 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c796 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c496 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000001474e5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ab7d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014be8e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b4ad : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e2f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001455f3 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000012e868 : xchg ch, bh ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x000000000014951f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014933f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149d17 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148c37 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000149b37 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147d05 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147005 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000146b25 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147825 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014accd : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002595 : xchg dh, ch ; ret 0x88ad
0x000000000014a4ed : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144885 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001457a5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001455c5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001456b5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001454d5 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000d2a12 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000007e1e5 : xchg dword ptr [rax + rax], esi ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000023401 : xchg dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000001a4fc5 : xchg dword ptr [rax], eax ; add byte ptr [rax], ch ; ja 0x1a4fbe ; call qword ptr [rcx]
0x000000000002708b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x0000000000114efd : xchg dword ptr [rbp + 0x2b], ecx ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000000229f3 : xchg dword ptr [rbp + rcx*4 + 0x2c], ecx ; ret
0x00000000000ab4df : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000000e52e9 : xchg dword ptr [rbx - 0x76ffffef], ebx ; ret 0x8d48
0x000000000010d15c : xchg dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x000000000018236c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000c2043 : xchg dword ptr [rcx + rax - 0x39], ecx ; jmp rdi
0x00000000000f6a51 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000002c20b : xchg dword ptr [rcx - 0x7c000005], ebx ; ret 0x8901
0x0000000000114bee : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x114bed ; pop rdx ; pop r10 ; ret
0x000000000005c383 : xchg dword ptr [rdi], edx ; push -0x7cb80000 ; ret
0x00000000000d17ff : xchg dword ptr [rdi], esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000686f7 : xchg dword ptr [rdx - 0x7d000000], edi ; ret 0x8308
0x000000000018250b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000148878 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000b5399 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000073e16 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000583af : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10a743], al ; call qword ptr [rax]
0x0000000000056b76 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x10d743], al ; call qword ptr [rax]
0x000000000007efc0 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001b5dcd : xchg eax, ebp ; add dword ptr [rax], eax ; sbb dl, 0xf6 ; call qword ptr [rdi]
0x000000000019704d : xchg eax, ebp ; cld ; call qword ptr [rsi + 0x26fffc94]
0x0000000000197189 : xchg eax, ebp ; cld ; call rsp
0x0000000000197185 : xchg eax, ebp ; cld ; inc dword ptr [rbp + rdx*4 - 4] ; call rsp
0x0000000000197009 : xchg eax, ebp ; cld ; jmp qword ptr [rax]
0x00000000001ae461 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x000000000011d5b2 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000020c7 : xchg eax, ebp ; ret
0x0000000000121838 : xchg eax, ebp ; ret 0x2041
0x000000000003c6df : xchg eax, ebp ; ret 0x2948
0x00000000000af56d : xchg eax, ebp ; ret 0x294c
0x000000000009f0f5 : xchg eax, ebp ; ret 0x3941
0x0000000000035c45 : xchg eax, ebp ; ret 0x5489
0x00000000000d7667 : xchg eax, ebp ; ret 0x8341
0x0000000000081d1d : xchg eax, ebp ; ret 0x8349
0x000000000003419b : xchg eax, ebp ; ret 0x8440
0x0000000000110806 : xchg eax, ebp ; ret 0x8441
0x00000000000972d6 : xchg eax, ebp ; ret 0x8445
0x0000000000046707 : xchg eax, ebp ; ret 0x854d
0x000000000003d42b : xchg eax, ebp ; ret 0x941
0x000000000003092a : xchg eax, ebp ; ret 0x953d
0x0000000000098b2d : xchg eax, ebp ; ret 0xb60f
0x000000000004b3df : xchg eax, ebp ; ret 0xbd83
0x0000000000041a7c : xchg eax, ebp ; ret 0xc189
0x00000000001218f8 : xchg eax, ebp ; ret 0xc985
0x00000000000bb8d4 : xchg eax, ebp ; ret 0xd184
0x00000000000b91f9 : xchg eax, ebp ; ret 0xd189
0x000000000003c157 : xchg eax, ebp ; ret 0xd349
0x0000000000044c7f : xchg eax, ebp ; ret 0xdaf7
0x00000000000b03af : xchg eax, ebp ; ret 0xdeb
0x00000000000e2569 : xchg eax, ebp ; ret 0xe183
0x00000000000ac753 : xchg eax, ebp ; ret 0xe883
0x00000000000465b2 : xchg eax, ebp ; ret 0xe8c1
0x000000000004659e : xchg eax, ebp ; ret 0xe8d1
0x00000000000adb8e : xchg eax, ebp ; ret 0xeeb
0x0000000000080db4 : xchg eax, ebp ; ret 0xf539
0x00000000000ac46b : xchg eax, ebp ; ret 0xf883
0x00000000000ffa2a : xchg eax, ebp ; ret 0xf980
0x000000000013046c : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ead4c : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006c75a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ead2e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000fdc3f : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000127cc3 : xchg eax, ebp ; sar dword ptr [rbx], 0xf ; xchg eax, ebp ; ret 0xd184
0x0000000000140928 : xchg eax, ebp ; sub byte ptr [rax], al ; jne 0x140940 ; jmp 0x14095a
0x0000000000002b65 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000007c3e2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000000d9ac3 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000016dca0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003911 : xchg eax, ebx ; and cl, ah ; ret
0x000000000019721d : xchg eax, ebx ; cld ; call qword ptr [rax + 0x20fffc92]
0x000000000019705d : xchg eax, ebx ; cld ; call rsi
0x0000000000197059 : xchg eax, ebx ; cld ; inc dword ptr [rsi - 0x6d] ; cld ; call rsi
0x000000000018bbd1 : xchg eax, ebx ; cli ; dec esp ; xchg eax, ebx ; cli ; jmp rsp
0x000000000018bbd5 : xchg eax, ebx ; cli ; jmp rsp
0x00000000000a4d2c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000150942 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000101a39 : xchg eax, ebx ; pop rdx ; sub al, 0 ; add rsp, 8 ; ret
0x000000000009d0de : xchg eax, ebx ; ret
0x00000000000b7224 : xchg eax, ebx ; ret 0x14c
0x0000000000037220 : xchg eax, ebx ; ret 0x3948
0x0000000000037d4c : xchg eax, ebx ; ret 0x3949
0x000000000003611c : xchg eax, ebx ; ret 0x394c
0x0000000000116fe5 : xchg eax, ebx ; ret 0x830f
0x0000000000073af8 : xchg eax, ebx ; ret 0x840
0x0000000000037795 : xchg eax, ebx ; ret 0xd108
0x000000000019bb51 : xchg eax, ebx ; stc ; jmp rsp
0x0000000000195f2d : xchg eax, ebx ; std ; call rax
0x0000000000195eed : xchg eax, ebx ; std ; jmp rdi
0x0000000000120c01 : xchg eax, ebx ; sub r8b, byte ptr [r8] ; add rsp, 8 ; ret
0x000000000008d7a9 : xchg eax, ebx ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000012e2fe : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000007b0bc : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000084968 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001a5aa5 : xchg eax, ecx ; add byte ptr [rax], al ; clc ; popfq ; in eax, dx ; call qword ptr [rdi]
0x00000000001b5a35 : xchg eax, ecx ; add dword ptr [rax], eax ; mov spl, 0xf6 ; call rdi
0x000000000006d8b1 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00000000000e340d : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x000000000019b569 : xchg eax, ecx ; clc ; call rsp
0x00000000001970b1 : xchg eax, ecx ; cld ; call qword ptr [rdx + 0x22fffc97]
0x0000000000197229 : xchg eax, ecx ; cld ; inc dword ptr [rax - 0x6f] ; cld ; jmp rax
0x00000000001970ad : xchg eax, ecx ; cld ; jmp qword ptr [rdx]
0x000000000019722d : xchg eax, ecx ; cld ; jmp rax
0x00000000001ae371 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x0000000000147e11 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000195e98 : xchg eax, ecx ; nop ; std ; jmp qword ptr [rcx]
0x00000000000f7bd3 : xchg eax, ecx ; ret 0x2c
0x0000000000195edd : xchg eax, ecx ; std ; call qword ptr [rsi + 0x26fffd91]
0x0000000000195ea1 : xchg eax, ecx ; std ; inc dword ptr [rcx - 0x6e] ; std ; jmp rcx
0x0000000000195ee1 : xchg eax, ecx ; std ; jmp qword ptr [rsi]
0x00000000000fe08e : xchg eax, ecx ; sub al, 0 ; add rsp, 8 ; ret
0x000000000014653f : xchg eax, ecx ; sub eax, edx ; ret
0x0000000000072755 : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x726fc
0x00000000000f6b1c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001970b5 : xchg eax, edi ; cld ; jmp qword ptr [rdx]
0x0000000000196ff9 : xchg eax, edi ; cld ; jmp rax
0x00000000001b1f39 : xchg eax, edi ; cmc ; call rdi
0x00000000001ae559 : xchg eax, edi ; hlt ; jmp qword ptr [rcx]
0x0000000000061cdc : xchg eax, edi ; mov ebx, 0x89000000 ; ret 0x8b48
0x0000000000034c65 : xchg eax, edi ; ret 0x1377
0x0000000000034967 : xchg eax, edi ; ret 0x1477
0x0000000000034936 : xchg eax, edi ; ret 0x5e77
0x00000000000d1895 : xchg eax, edi ; ret 0xd008
0x0000000000133cb4 : xchg eax, edi ; ret 0xda09
0x00000000000cc196 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000001094b6 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8cf9 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000fc16b : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000d63e6 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000000ac977 : xchg eax, edi ; test r9d, r9d ; jne 0xac939 ; mov rax, rdx ; ret
0x00000000001829b8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000019c4ed : xchg eax, edx ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfffa
0x00000000000593fa : xchg eax, edx ; and al, 3 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x0000000000197025 : xchg eax, edx ; cld ; call qword ptr [rax]
0x0000000000197221 : xchg eax, edx ; cld ; jmp qword ptr [rax]
0x00000000001966d0 : xchg eax, edx ; cld ; jmp qword ptr [rdx]
0x00000000001970e5 : xchg eax, edx ; cld ; jmp rdx
0x000000000018427d : xchg eax, edx ; jae 0x18425a ; push rsi ; pop rdx ; je 0x18424f ; ret 0xacfc
0x0000000000196bbc : xchg eax, edx ; jo 0x196bbe ; jmp qword ptr [rdx]
0x000000000007e141 : xchg eax, edx ; mov byte ptr [rax + rax], dh ; add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000addf8 : xchg eax, edx ; mov rdx, r10 ; add rax, rax ; sub rdx, rax ; jmp 0xade2c
0x00000000000b0632 : xchg eax, edx ; mov rdx, r10 ; add rax, rax ; sub rdx, rax ; jmp 0xb0664
0x00000000000b2d02 : xchg eax, edx ; mov rdx, r10 ; add rax, rax ; sub rdx, rax ; jmp 0xb2d34
0x00000000000e0162 : xchg eax, edx ; or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f8cde : xchg eax, edx ; ret 0x970f
0x00000000000fc16e : xchg eax, edx ; ret 0xcc80
0x00000000000cc199 : xchg eax, edx ; ret 0xd029
0x00000000000d63e9 : xchg eax, edx ; ret 0xd138
0x0000000000149e8d : xchg eax, edx ; ret 0xf40
0x000000000018236f : xchg eax, edx ; ret 0xf869
0x0000000000195f29 : xchg eax, edx ; std ; dec dword ptr [rbx - 0x6d] ; std ; call rax
0x0000000000195ea5 : xchg eax, edx ; std ; jmp rcx
0x000000000019c679 : xchg eax, edx ; sti ; jmp rsp
0x0000000000145297 : xchg eax, edx ; sub eax, edx ; ret
0x00000000001970b4 : xchg eax, edx ; xchg eax, edi ; cld ; jmp qword ptr [rdx]
0x00000000000df1db : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x8341
0x000000000016dfa0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a083 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000000853fd : xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000002592 : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000197005 : xchg eax, esi ; cld ; call qword ptr [rax + 0x20fffc95]
0x00000000001971fd : xchg eax, esi ; cld ; call qword ptr [rax]
0x00000000001970c1 : xchg eax, esi ; cld ; call rdx
0x00000000001970bd : xchg eax, esi ; cld ; inc dword ptr [rdx - 0x6a] ; cld ; call rdx
0x0000000000197041 : xchg eax, esi ; cld ; jmp rsi
0x000000000019c381 : xchg eax, esi ; cli ; jmp rsp
0x00000000001ae4c9 : xchg eax, esi ; hlt ; jmp qword ptr [rcx]
0x00000000000f16a3 : xchg eax, esi ; idiv edi ; dec dword ptr [rbx - 0x76a3dbbc] ; ret 0xc085
0x0000000000196b58 : xchg eax, esi ; insd dword ptr [rdi], dx ; cld ; jmp qword ptr [rsi]
0x0000000000189560 : xchg eax, esi ; lahf ; cmc ; call qword ptr [rsi - 0x2c000a61]
0x0000000000189564 : xchg eax, esi ; lahf ; cmc ; call rbx
0x000000000016e05d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016dfbb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000028f66 : xchg eax, esi ; ret
0x00000000001244e8 : xchg eax, esi ; ret 0x8341
0x00000000000d0345 : xchg eax, esi ; ret 0x840
0x000000000008b396 : xchg eax, esi ; ret 0xb60f
0x0000000000184c0c : xchg eax, esi ; ret 0xcd11
0x000000000016e00c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000c61c8 : xchg eax, esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000116fdf : xchg eax, esi ; ror byte ptr [rcx + rdi - 0x17], 0xf ; xchg eax, ebx ; ret 0x830f
0x00000000000ea8e4 : xchg eax, esi ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000195ee0 : xchg eax, esi ; xchg eax, ecx ; std ; jmp qword ptr [rsi]
0x0000000000197050 : xchg eax, esi ; xchg eax, esp ; cld ; jmp qword ptr [rsi]
0x0000000000009f19 : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006d0dd : xchg eax, esp ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000019bb4c : xchg eax, esp ; adc dword ptr [rdx], eax ; add ah, ah ; xchg eax, ebx ; stc ; jmp rsp
0x000000000019c3dc : xchg eax, esp ; add al, byte ptr [rax] ; hlt ; stosb byte ptr [rdi], al ; cli ; call rsp
0x00000000000ee852 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00000000001a5d95 : xchg eax, esp ; add byte ptr [rax], al ; js 0x1a5d78 ; in eax, dx ; call rdi
0x00000000001a5d2d : xchg eax, esp ; add byte ptr [rax], al ; rcl dh, 0xed ; call qword ptr [rsi]
0x0000000000199084 : xchg eax, esp ; add byte ptr [rcx], al ; add byte ptr [rbx + rdx*8 - 0x11], al ; call rsp
0x000000000019775c : xchg eax, esp ; add byte ptr fs:[rax], al ; hlt ; cmp cl, ch ; jmp rsp
0x00000000001b303c : xchg eax, esp ; add dword ptr [eax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b173c : xchg eax, esp ; add qword ptr [rax], r8 ; sal byte ptr [rax - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000043e0a : xchg eax, esp ; and al, 0x64 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000b3ff7 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000dfef4 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000e274f : xchg eax, esp ; and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000072c47 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001970d1 : xchg eax, esp ; cld ; call qword ptr [rdx]
0x0000000000197015 : xchg eax, esp ; cld ; call rax
0x0000000000197011 : xchg eax, esp ; cld ; inc dword ptr [rax - 0x6c] ; cld ; call rax
0x0000000000197051 : xchg eax, esp ; cld ; jmp qword ptr [rsi]
0x0000000000197211 : xchg eax, esp ; cld ; jmp rax
0x0000000000199f68 : xchg eax, esp ; cli ; cmc ; jmp rsp
0x000000000001f570 : xchg eax, esp ; cmp al, byte ptr fs:[rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001aa33c : xchg eax, esp ; fiadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000019b6e4 : xchg eax, esp ; in al, dx ; add dword ptr [rax], eax ; add al, 0xdd ; clc ; jmp rsp
0x0000000000198d48 : xchg eax, esp ; in eax, -0x12 ; call rsp
0x00000000001aba3c : xchg eax, esp ; int1 ; add byte ptr [rax], al ; rol byte ptr [rdx + rsi*8 - 1], 1 ; ret 0
0x0000000000186e04 : xchg eax, esp ; je 0x186df8 ; jmp rsp
0x0000000000198708 : xchg eax, esp ; jmp 0x1986fd
0x0000000000198fa8 : xchg eax, esp ; jp 0x198f9d ; jmp rsp
0x0000000000188d14 : xchg eax, esp ; lahf ; hlt ; jmp qword ptr [rdi]
0x000000000019876c : xchg eax, esp ; mov byte ptr [rax], 0 ; hlt ; imul ch ; call rsp
0x00000000001a7f3c : xchg eax, esp ; mov dh, 0 ; add al, dh ; jno 0x1a7f39 ; jmp qword ptr [rax]
0x00000000001ad63c : xchg eax, esp ; or eax, 0x500001 ; hlt ; jmp rcx
0x000000000019b5e4 : xchg eax, esp ; out 1, eax ; add byte ptr [rcx + rsi*4 - 8], dl ; call rsp
0x00000000001a223c : xchg eax, esp ; pop rcx ; add byte ptr [rax], al ; push rax ; shr ah, 1 ; call qword ptr [rax]
0x0000000000184e1f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x184db0 ; ret 0x48f
0x000000000002eb0c : xchg eax, esp ; rcr dword ptr [rbx + 0x48], -0x77 ; enter 0x415d, 0x5c ; ret
0x0000000000030cd1 : xchg eax, esp ; ret
0x0000000000126e4d : xchg eax, esp ; ret 0x203c
0x0000000000034f4e : xchg eax, esp ; ret 0x2cdb
0x000000000009f1ae : xchg eax, esp ; ret 0x3941
0x0000000000125623 : xchg eax, esp ; ret 0x3945
0x00000000001363b8 : xchg eax, esp ; ret 0x3d83
0x00000000000d6bda : xchg eax, esp ; ret 0x4422
0x0000000000081785 : xchg eax, esp ; ret 0x4e8
0x00000000000edd27 : xchg eax, esp ; ret 0x5408
0x00000000000baadb : xchg eax, esp ; ret 0x5438
0x00000000000458aa : xchg eax, esp ; ret 0x543a
0x00000000000bb998 : xchg eax, esp ; ret 0x5641
0x00000000000c1676 : xchg eax, esp ; ret 0x6348
0x0000000000034f8d : xchg eax, esp ; ret 0x6cdb
0x00000000000d2df0 : xchg eax, esp ; ret 0x8041
0x00000000000d0f2d : xchg eax, esp ; ret 0x8341
0x0000000000027635 : xchg eax, esp ; ret 0x8348
0x000000000009f3c5 : xchg eax, esp ; ret 0x840
0x00000000000f24bd : xchg eax, esp ; ret 0x840f
0x00000000000a9845 : xchg eax, esp ; ret 0x8444
0x00000000000fa58f : xchg eax, esp ; ret 0x8445
0x00000000000cddf5 : xchg eax, esp ; ret 0x8548
0x00000000000ebe4f : xchg eax, esp ; ret 0x8944
0x00000000000ec8dd : xchg eax, esp ; ret 0x8b48
0x0000000000020987 : xchg eax, esp ; ret 0x8d48
0x00000000000e2d1c : xchg eax, esp ; ret 0x941
0x00000000000214a5 : xchg eax, esp ; ret 0x944
0x00000000000254da : xchg eax, esp ; ret 0xa2e9
0x00000000000ec9ac : xchg eax, esp ; ret 0xa3eb
0x000000000002f4e8 : xchg eax, esp ; ret 0xb60f
0x00000000000d9b73 : xchg eax, esp ; ret 0xc031
0x0000000000056237 : xchg eax, esp ; ret 0xc084
0x00000000000d7756 : xchg eax, esp ; ret 0xc085
0x00000000000e407d : xchg eax, esp ; ret 0xc683
0x00000000000e6b19 : xchg eax, esp ; ret 0xc89
0x000000000009771f : xchg eax, esp ; ret 0xc984
0x000000000004594a : xchg eax, esp ; ret 0xca38
0x00000000000bec51 : xchg eax, esp ; ret 0xd008
0x00000000000d77df : xchg eax, esp ; ret 0xd009
0x0000000000020dfe : xchg eax, esp ; ret 0xd020
0x00000000000feaf3 : xchg eax, esp ; ret 0xd108
0x0000000000020a7c : xchg eax, esp ; ret 0xd284
0x000000000007132b : xchg eax, esp ; ret 0xdaf7
0x000000000004d8cf : xchg eax, esp ; ret 0xe883
0x000000000013c1c1 : xchg eax, esp ; ret 0xea83
0x0000000000061377 : xchg eax, esp ; ret 0xf44
0x000000000008b314 : xchg eax, esp ; ret 0xf883
0x00000000000bec43 : xchg eax, esp ; ret 0xf980
0x00000000000bab73 : xchg eax, esp ; ret 0xf983
0x000000000002c075 : xchg eax, esp ; ret 0xfa09
0x000000000010f44d : xchg eax, esp ; ret 0xfa80
0x00000000000a97a6 : xchg eax, esp ; ret 0xfd83
0x00000000000a97ad : xchg eax, esp ; ret 0xfe83
0x00000000000e29b2 : xchg eax, esp ; ret 0xff85
0x00000000000abc3c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000d8e6c : xchg eax, esp ; rol byte ptr [rdx - 0x77], 0x14 ; xchg byte ptr [rcx - 0x7d], al ; ret 0xf01
0x00000000001a9a3c : xchg eax, esp ; rol dword ptr [rax], 1 ; add byte ptr [rax - 0x7f], al ; cld ; jmp qword ptr [rbx]
0x00000000001989b4 : xchg eax, esp ; rol dword ptr [rax], cl ; add ah, al ; sub ebp, esi ; jmp rsp
0x0000000000095430 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f8b0f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000443f3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013ba59 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000be81b : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; rol cl, 0xe0 ; add ebp, ecx ; ret 0xfffb
0x000000000002c128 : xchg eax, esp ; sar byte ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x00000000000feaee : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000214a0 : xchg eax, esp ; sar dword ptr [rdi + rbx*2], 0xf ; xchg eax, esp ; ret 0x944
0x000000000019e23c : xchg eax, esp ; sbb dword ptr [rax], eax ; add byte ptr [rax], ah ; add ch, cl ; call qword ptr [rbx]
0x000000000019bbe0 : xchg eax, esp ; scasd eax, dword ptr [rdi] ; stc ; call rsp
0x00000000000ec96c : xchg eax, esp ; shr cl, 0xd4 ; idiv bh ; inc dword ptr [rcx - 0x77] ; ret
0x00000000001981f0 : xchg eax, esp ; stosd dword ptr [rdi], eax ; jmp 0x1981f6
0x00000000001996dc : xchg eax, esp ; sub al, 1 ; add byte ptr [rcx + rcx*8], dh ; jmp rsp
0x0000000000199030 : xchg eax, esp ; test bh, ch ; jmp rsp
0x00000000001997ac : xchg eax, esp ; xor dword ptr [rcx], eax ; add ah, dh ; std ; jmp rsp
0x0000000000195ea4 : xchg eax, r10d ; std ; jmp rcx
0x00000000001141c7 : xchg eax, r8d ; call rcx
0x000000000011449b : xchg eax, r8d ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001a5639 : xchg ebp, ebp ; call qword ptr [rdx]
0x00000000001a55c1 : xchg ebp, ebp ; call qword ptr [rsi]
0x0000000000078418 : xchg edi, edi ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000044ba0 : xchg esi, edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d372e : xchg esi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000044c16 : xchg esi, r15d ; dec dword ptr [rax - 0x77] ; ret
0x000000000019726d : xchg esp, edi ; call rsi
0x00000000001871d5 : xchg esp, edi ; jmp rax
0x0000000000101b3f : xchg esp, edx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000021428 : xchg esp, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195f2c : xchg rax, r11 ; std ; call rax
0x00000000001aa02d : xlatb ; add byte ptr [rax], al ; add byte ptr [rdx - 0xf], al ; jmp qword ptr [rcx]
0x00000000001aa015 : xlatb ; add byte ptr [rax], al ; call 0x221a9164
0x000000000017f7c9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000150809 : xlatb ; add r9, r11 ; jmp r9
0x00000000001ad571 : xlatb ; call qword ptr [rdi]
0x00000000001ad5c1 : xlatb ; call qword ptr [rdx]
0x000000000018630d : xlatb ; in eax, dx ; call rsp
0x00000000001267cb : xlatb ; jg 0x126785 ; mov byte ptr [r11], 0 ; ret
0x0000000000188449 : xlatb ; jmp qword ptr [rcx]
0x0000000000114cf9 : xlatb ; jmp rax
0x0000000000105ea6 : xlatb ; jne 0x105e9f ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001833e3 : xlatb ; jo 0x18345f ; mov ebp, 0xfb67d10d ; ret
0x00000000000497c2 : xlatb ; mov byte ptr [rsi], al ; jne 0x497a8 ; mov rax, rsi ; ret
0x0000000000124826 : xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000089b99 : xlatb ; ret
0x000000000008b72f : xlatb ; ret 0x4166
0x0000000000184886 : xlatb ; ret 0x4e27
0x0000000000003238 : xlatb ; ret 0x5a51
0x000000000008d597 : xlatb ; ret 0x94c
0x000000000008e8ff : xlatb ; ret 0xc085
0x0000000000089b90 : xlatb ; ret 0xc148
0x000000000009f7cb : xlatb ; ret 0xf188
0x0000000000096681 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000009f666 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a519e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000170156 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009f5c4 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008b066 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008af26 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008ade6 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008aca6 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008ab66 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008aa26 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008a8e6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008a7a6 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008a666 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008a526 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008a3e6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008a2a6 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008a166 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008a026 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000089ee6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000170152 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008d535 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d546 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000035db8 : xlatb ; xor eax, eax ; ret
0x00000000000a4998 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a492e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000186168 : xor ah, byte ptr [rcx - 0x13] ; jmp qword ptr [rdx - 0x3d]
0x0000000000196de4 : xor ah, byte ptr [rdx - 4] ; jmp qword ptr [rdx + 0x12fffc61]
0x00000000000025c4 : xor ah, byte ptr [rsi] ; sahf ; jl 0x255d ; loop 0x25a8 ; ret 0x23cb
0x0000000000195ce4 : xor ah, dh ; cli ; inc dword ptr [rax] ; cmc ; cli ; jmp qword ptr [rax]
0x000000000007d9b9 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007e143 : xor al, 0 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007d946 : xor al, 0 ; add dword ptr [rip + 0x349005], 1 ; ret
0x0000000000082a42 : xor al, 0 ; mov rdi, rbx ; call qword ptr [r15]
0x0000000000082919 : xor al, 0 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007d8b5 : xor al, 0 ; ret
0x0000000000082c26 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x000000000018236a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000001ae4dc : xor al, 0x1c ; add dword ptr [rax], eax ; mov al, 0x96 ; hlt ; jmp qword ptr [rcx]
0x0000000000096a9b : xor al, 0x24 ; test rsi, rsi ; jne 0x96ab4 ; jmp 0x96a6e
0x00000000000cbaf8 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000001af3dc : xor al, 0x2b ; add dword ptr [rax], eax ; add bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001995a0 : xor al, 0x2e ; call rsp
0x0000000000002045 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000daf2b : xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000019b3b0 : xor al, 0x3d ; clc ; call rsp
0x0000000000199368 : xor al, 0x42 ; int1 ; jmp rsp
0x0000000000188898 : xor al, 0x44 ; hlt ; ljmp ptr [rdx] ; hlt ; jmp qword ptr [rax]
0x000000000009f6eb : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x00000000000e30e6 : xor al, 0x48 ; mov edx, eax ; jmp 0xe3085
0x00000000001b16dc : xor al, 0x4e ; add dword ptr [rax], eax ; jo 0x1b1759 ; cmc ; jmp qword ptr [rcx]
0x000000000019b440 : xor al, 0x56 ; clc ; jmp rsp
0x00000000001b2fdc : xor al, 0x67 ; add dword ptr [rax], eax ; rcr byte ptr [rax], 0xf6 ; jmp qword ptr [rsi]
0x0000000000198fe8 : xor al, 0x7e ; out dx, eax ; jmp rsp
0x00000000000a9b41 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x0000000000187d78 : xor al, 0x89 ; inc edx ; outsb dx, byte ptr [rsi] ; jmp rsp
0x00000000000db4e2 : xor al, 0x8b ; sub al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0xc839
0x00000000000a9b09 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x0000000000198cb8 : xor al, 0xa2 ; out dx, al ; call rsp
0x000000000019c3c0 : xor al, 0xa7 ; cli ; call rsp
0x00000000001a74dc : xor al, 0xac ; add byte ptr [rax], al ; nop ; or edx, edi ; call qword ptr [rax]
0x0000000000131908 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000c1fde : xor al, 0xb1 ; add rcx, rsi ; jmp rcx
0x00000000000db035 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xdb018 ; mov edx, eax ; jmp 0xdb021
0x00000000001985a8 : xor al, 0xb6 ; in eax, dx ; call rsp
0x00000000001996e0 : xor al, 0xc9 ; jmp rsp
0x0000000000198648 : xor al, 0xcb ; in eax, dx ; call rsp
0x000000000018354a : xor al, 0xd8 ; ret
0x0000000000186fa5 : xor al, 0xf0 ; call rax
0x00000000001998f9 : xor al, 0xf3 ; call rsp
0x0000000000199ec0 : xor al, 0xf5 ; cmc ; call rsp
0x00000000001b39b9 : xor al, 0xf6 ; call qword ptr [rax]
0x00000000000aaa08 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000019c03d : xor al, 2 ; add byte ptr [rdi + rsi], al ; cli ; jmp rsp
0x000000000010706b : xor al, al ; or eax, edi ; ret
0x00000000000f6213 : xor al, al ; ret
0x0000000000096e62 : xor al, byte ptr [rdi + rcx - 0x4a] ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000196390 : xor al, ch ; sti ; jmp rax
0x0000000000186f99 : xor al, dh ; call qword ptr [rax]
0x00000000001a8b79 : xor al, dh ; call qword ptr [rsi]
0x00000000000fb738 : xor ax, ax ; ret
0x00000000001af5b0 : xor bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001962bc : xor bh, ch ; sti ; call qword ptr [rax]
0x000000000008eb5c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000114522 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000195d8d : xor bl, bh ; call rax
0x0000000000128fe8 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000aaafc : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008ea1d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000046be7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x46c5d ; xor eax, eax ; ret
0x000000000012ee72 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x00000000001108f1 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000e48b4 : xor byte ptr [rax + 0x63], cl ; ret
0x0000000000089aa1 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009f6c6 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000012f9e8 : xor byte ptr [rax + 9], cl ; ret
0x00000000000999bb : xor byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000012b9d7 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d8e1 ; pop rbx ; ret
0x000000000012b99f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d919 ; pop rbx ; ret
0x000000000012b8e0 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d9d8 ; pop rbx ; ret
0x00000000000a7877 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000046f68 : xor byte ptr [rax - 0x75], cl ; jbe 0x46fe4 ; xor eax, eax ; ret
0x0000000000046be8 : xor byte ptr [rax - 0x75], cl ; jg 0x46c5c ; xor eax, eax ; ret
0x0000000000046f67 : xor byte ptr [rax - 0x75], r9b ; jbe 0x46fe5 ; xor eax, eax ; ret
0x00000000000899cf : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013b9ea : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000af568 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd8a85
0x00000000000b1c08 : xor byte ptr [rax - 0x77], cl ; call 0x4ccdb125
0x00000000000b4868 : xor byte ptr [rax - 0x77], cl ; call 0x4ccddd85
0x000000000003c6d9 : xor byte ptr [rax - 0x77], cl ; call 0xffffffffc298d629
0x00000000001045ff : xor byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x00000000000ac42d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000078013 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000030501 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000ce7b6 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000dfa49 : xor byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012ee73 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d595e : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000128fe9 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000075afd : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000020d59 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d828 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000020a5e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030410 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035183 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f38b : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000000a9b65 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ba3f5 : xor byte ptr [rax], al ; add rax, 8 ; mov rcx, qword ptr [rdx + rax*8] ; jmp 0xba3bd
0x00000000000bbd6a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba4d4 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000073e9a : xor byte ptr [rax], al ; je 0x73ea4 ; ret
0x00000000000a90f7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000aab00 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000aaaff : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007c980 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001871e4 : xor byte ptr [rbp - 0x715f0004], cl ; cld ; call qword ptr [rax]
0x000000000008581c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000cc9d3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5d4f : xor byte ptr [rbx + 0xaea0206], al ; ret
0x000000000008f70b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000195da4 : xor byte ptr [rbx + rdi*8], bh ; call qword ptr [rax]
0x000000000007ccfe : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000019624c : xor byte ptr [rbx - 0x4b2f0005], 0xfb ; jmp qword ptr [rax]
0x00000000001961f4 : xor byte ptr [rbx - 0x537f0005], ch ; sti ; call rax
0x000000000008b391 : xor byte ptr [rbx - 0x69f0f606], al ; ret 0xb60f
0x00000000001a7510 : xor byte ptr [rbx - 6], al ; call qword ptr [rax]
0x00000000000aaafd : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001964b4 : xor byte ptr [rbx], dl ; cld ; call qword ptr [rax]
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x000000000019cab0 : xor byte ptr [rcx - 0x18], cl ; call qword ptr [rcx]
0x000000000008b366 : xor byte ptr [rcx - 0x6bf0be32], cl ; ret 0xf883
0x000000000019741c : xor byte ptr [rcx - 0x774f0004], cl ; cld ; jmp qword ptr [rax]
0x00000000000e9279 : xor byte ptr [rcx - 0x77], al ; ret 0x4489
0x000000000003ccfd : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000110800 : xor byte ptr [rcx - 0x7d], al ; call 0xffffffffc2a61710
0x00000000001b17a0 : xor byte ptr [rcx - 0xb], dh ; jmp rbx
0x000000000011f0e3 : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000fc52c : xor byte ptr [rcx], 0xc0 ; ret
0x00000000001a68d0 : xor byte ptr [rcx], ah ; out dx, al ; jmp qword ptr [rdi]
0x0000000000075afe : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000079547 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006f0f9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001222a3 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010a212 : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000101b81 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000730a4 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000000bec41 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf980
0x0000000000095c7c : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000196248 : xor byte ptr [rdx - 0x4c7f0005], dh ; sti ; call rax
0x0000000000195e60 : xor byte ptr [rdx - 0x751f0003], cl ; std ; call rax
0x0000000000196838 : xor byte ptr [rdx - 4], al ; jmp qword ptr [rax + 0x20fffc41]
0x00000000001bc4eb : xor byte ptr [rdx], al ; ret
0x00000000001aa3bf : xor byte ptr [rdx], al ; ret 0xe0a
0x0000000000196a5c : xor byte ptr [rip + 0x3cb0fffc], bh ; cld ; jmp qword ptr [rax]
0x000000000016dd4f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008d4fc : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008ea1e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000186508 : xor byte ptr [rsi - 0x12], ch ; push rax ; insd dword ptr [rdi], dx ; out dx, al ; call qword ptr [rax]
0x000000000019ebf0 : xor byte ptr [rsi - 0x17], bl ; call qword ptr [rdx]
0x0000000000197434 : xor byte ptr [rsi - 0x724f0004], cl ; cld ; jmp qword ptr [rax]
0x0000000000038e6b : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x0000000000188af8 : xor byte ptr [rsi - 0xc], al ; jmp qword ptr [rax]
0x00000000000313ab : xor byte ptr [rsi], al ; add byte ptr [rcx - 0x77], cl ; ret 0x14d
0x00000000000313d8 : xor byte ptr [rsi], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d8b
0x0000000000196a24 : xor byte ptr [rsp + rdi*8], bh ; jmp qword ptr [rax + 0x10fffc3b]
0x0000000000196be4 : xor ch, byte ptr [rsp + rdi*8 - 1] ; ret 0xfc6b
0x00000000001a3bf9 : xor ch, ch ; jmp rbx
0x00000000000a8e88 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a8e9e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a8ec0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a8ede : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a8efe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a8f24 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8f40 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a8f60 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a8f80 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a8fa6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a8fc8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a8fe6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9006 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9022 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9042 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9062 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9082 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a90a8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a90f8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a8dce : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a8dec : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a8e0c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a8e2e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a8e4e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a8e6e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a8d04 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a8d16 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a8d2c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a8d44 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a8d5a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a8d6c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8d8a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a8d96 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a8dac : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a8cf0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001962d8 : xor ch, ch ; sti ; call qword ptr [rax]
0x0000000000187278 : xor cl, bl ; std ; call qword ptr [rax]
0x000000000013194f : xor cl, byte ptr [rax - 0x77] ; jp 0x131961 ; ret
0x000000000013471f : xor cl, byte ptr [rax - 0x77] ; jp 0x134731 ; ret
0x0000000000134737 : xor cl, byte ptr [rax - 0x77] ; jp 0x134749 ; ret
0x0000000000134f6f : xor cl, byte ptr [rax - 0x77] ; jp 0x134f81 ; ret
0x0000000000134f87 : xor cl, byte ptr [rax - 0x77] ; jp 0x134f99 ; ret
0x0000000000134fb7 : xor cl, byte ptr [rax - 0x77] ; jp 0x134fc9 ; ret
0x0000000000083c74 : xor cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000038cb2 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000e6d1a : xor cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x00000000001310a0 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000012bdb8 : xor cl, byte ptr [rax - 0x7d] ; ret 0xf601
0x00000000001278b1 : xor cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xd184
0x0000000000103862 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010fcb1 : xor cl, ch ; ret
0x0000000000080a18 : xor cl, ch ; ret 0
0x00000000000fc773 : xor cl, ch ; ret 0xfffe
0x0000000000102b8c : xor cl, cl ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102b9c ; call rbx
0x00000000000a4810 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001962a0 : xor cl, dh ; sti ; jmp qword ptr [rax]
0x00000000001a8c29 : xor dh, al ; jmp rdx
0x000000000019635c : xor dh, ch ; sti ; call qword ptr [rax]
0x000000000002cafe : xor dh, dh ; ret 0x4002
0x000000000012f774 : xor dh, dh ; ret 0xc707
0x0000000000195cfc : xor dl, bh ; cli ; jmp qword ptr [rax]
0x00000000001a0739 : xor dl, bh ; jmp qword ptr [rcx]
0x0000000000196374 : xor dl, ch ; sti ; inc dword ptr [rax] ; in al, dx ; sti ; jmp rax
0x00000000001995d9 : xor dl, dh ; jmp rsp
0x000000000002dd5f : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000089713 : xor dword ptr [rax - 0x76b7ffcd], ebp ; add al, 0x24 ; call qword ptr [rdx]
0x000000000009f2ae : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000009d7f5 : xor dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bb717 : xor dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000079231 : xor dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000181474 : xor dword ptr [rbx], esp ; jmp 0x18147a
0x000000000009d338 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x00000000001997ad : xor dword ptr [rcx], eax ; add ah, dh ; std ; jmp rsp
0x00000000001afa15 : xor dword ptr [rcx], eax ; add al, bh ; clc ; hlt ; jmp rcx
0x00000000000620c3 : xor dword ptr [rcx], edi ; ret 0x8949
0x000000000011f96b : xor dword ptr [rdx - 0x67b7fffa], ebp ; pop rbx ; mov eax, dword ptr [rdx + rax*8 + 4] ; ret
0x0000000000103d03 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001afe45 : xor eax, 0x17280001 ; cmc ; call qword ptr [rdx]
0x0000000000044120 : xor eax, 0x1cb ; call rax
0x000000000007062b : xor eax, 0x20 ; call rax
0x00000000000fc32e : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x00000000001861c4 : xor eax, 0x35ffede1 ; loope 0x1861bf ; call qword ptr [rsi]
0x0000000000063542 : xor eax, 0x360a19 ; call rax
0x000000000005a8d8 : xor eax, 0x369683 ; call rax
0x000000000005a364 : xor eax, 0x369bf7 ; call rax
0x00000000000551d0 : xor eax, 0x36ed8b ; call rax
0x000000000004f2dc : xor eax, 0x374c7f ; call rax
0x0000000000049e80 : xor eax, 0x37a0db ; call rax
0x000000000008d887 : xor eax, 0x39fffa8e ; ret
0x0000000000101f97 : xor eax, 0x59002c39 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000002461 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000007d4eb : xor eax, 0xffffe120 ; call rax
0x000000000007d04b : xor eax, 0xffffe5c0 ; call rax
0x000000000007cc4b : xor eax, 0xffffe9c0 ; call rax
0x000000000007bb8b : xor eax, 0xfffffa80 ; call rax
0x000000000007b91b : xor eax, 0xfffffcf0 ; call rax
0x00000000000708e3 : xor eax, 0xfffffd68 ; call rax
0x0000000000020a5b : xor eax, dword ptr [0x30] ; call rax
0x0000000000035180 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000094399 : xor eax, dword ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x943aa ; ret
0x000000000008858d : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088872 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000088751 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e6fc : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x0000000000088804 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7aa : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000084483 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000893ad : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000089715 : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000085ab4 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x85ac7 ; ret
0x00000000000458a4 : xor eax, dword ptr [rcx - 0x7d] ; stc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x543a
0x000000000019c025 : xor eax, dword ptr [rdx] ; add byte ptr [rbx + rsi - 6], al ; jmp rsp
0x00000000001b2b9a : xor eax, dword ptr [rdx] ; ret
0x000000000004c906 : xor eax, eax ; add rax, qword ptr [rbp - 0x4f0] ; jmp rax
0x00000000000c64f0 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000132e20 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000a9be8 : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000be382 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000122a85 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000136775 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143778 : xor eax, eax ; add rsp, 0x38 ; ret
0x0000000000142fbf : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000039dcc : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ba506 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002e3a0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000766d6 : xor eax, eax ; call r12
0x000000000013abb8 : xor eax, eax ; call r8
0x000000000013ab6c : xor eax, eax ; call rcx
0x000000000013b9f0 : xor eax, eax ; call rdx
0x000000000003a4b6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a4c8 ; pop rbx ; ret
0x000000000013b5c3 : xor eax, eax ; cmp ecx, edx ; jae 0x13b5d6 ; ret
0x000000000013b603 : xor eax, eax ; cmp ecx, edx ; jae 0x13b616 ; ret
0x000000000010a213 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d0014 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000001025a9 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x1025c1 ; ret
0x000000000013b4a2 : xor eax, eax ; cmp rdx, rcx ; je 0x13b4c0 ; ret
0x00000000001145f7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000fcfb1 : xor eax, eax ; cmp rsi, rdx ; ja 0xfcfe8 ; ret
0x00000000000acee4 : xor eax, eax ; jmp 0xaccc9
0x00000000000ad350 : xor eax, eax ; jmp 0xad159
0x00000000000ba510 : xor eax, eax ; jmp 0xba4d9
0x000000000012e190 : xor eax, eax ; jmp rcx
0x00000000001238ad : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fc4c0 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000003aa72 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000009f2d8 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000001154c1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000132407 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003b120 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000a9c61 : xor eax, eax ; nop dword ptr [rax + rax] ; ret
0x000000000006fc29 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fc30 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115531 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012bf82 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d77f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000023297 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000039fdd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006c0b4 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033c76 : xor eax, eax ; pop rbx ; ret
0x0000000000035d96 : xor eax, eax ; ret
0x000000000009ff3e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000078880 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000078890 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a9ab8 : xor eax, eax ; test dh, 0xf0 ; je 0xa9a8b ; movzx eax, dl ; pop rbx ; ret
0x00000000000360b8 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007b070 : xor eax, eax ; test rdx, rdx ; jne 0x7b087 ; ret
0x00000000000bbca0 : xor eax, eax ; xor edi, edi ; mov word ptr [rbp - 0x3e], ax ; jmp 0xbbc7d
0x000000000003ad7a : xor eax, ecx ; ret
0x000000000003a427 : xor eax, edx ; sub eax, edx ; ret
0x000000000003a43b : xor eax, edx ; sub rax, rdx ; ret
0x00000000001894c1 : xor ebp, 0xf5812aff ; jmp qword ptr [rax]
0x000000000018950d : xor ebp, 0xf5812aff ; jmp rsi
0x000000000009e75f : xor ebx, 0xb60fffff ; push rbp ; ret 0x8348
0x0000000000187c65 : xor ebx, 0xffffffff ; jbe 0x187ce5 ; jmp rdx
0x000000000006f319 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008867a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000ad414 : xor ebx, ebx ; mov edx, eax ; jmp 0xad3c3
0x00000000000afc74 : xor ebx, ebx ; mov edx, eax ; jmp 0xafc23
0x00000000000b2334 : xor ebx, ebx ; mov edx, eax ; jmp 0xb22e3
0x00000000000cc39e : xor ebx, esi ; ret
0x00000000000c6e4e : xor ecx, dword ptr [rax + 0x39] ; ret 0xdc72
0x0000000000025899 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000000f375a : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000034375 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x8001
0x00000000000893fc : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x00000000000830d8 : xor ecx, eax ; mov rax, rsi ; mov byte ptr [rsi + rbx], cl ; pop rbx ; ret
0x000000000002cd32 : xor ecx, eax ; ret 0x4809
0x000000000002a124 : xor ecx, ecx ; call r14
0x00000000000348e0 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000002eb80 : xor ecx, ecx ; pop rbx ; mov rax, rcx ; pop rbp ; pop r12 ; ret
0x00000000000abf34 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000129191 : xor edi, dword ptr [0x30] ; call rax
0x000000000019b379 : xor edi, eax ; call rsp
0x00000000001127d3 : xor edi, edi ; call 0x2ea84
0x000000000007e6d9 : xor edi, edi ; call qword ptr [r15]
0x0000000000082c28 : xor edi, edi ; call qword ptr [rax]
0x000000000007e6aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000bbca2 : xor edi, edi ; mov word ptr [rbp - 0x3e], ax ; jmp 0xbbc7b
0x000000000019c029 : xor edi, edx ; jmp rsp
0x000000000003040d : xor edx, dword ptr [0x30] ; call rdx
0x000000000011da49 : xor edx, dword ptr [rax] ; int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000197e09 : xor edx, ebp ; call rsp
0x00000000000bea31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000ec9a5 : xor edx, edx ; cmp eax, 4 ; sete r10b ; jmp 0xec95b
0x000000000004f76b : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x0000000000079242 : xor edx, edx ; div r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007927c : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117642 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x0000000000067034 : xor edx, edx ; jmp 0x63299
0x00000000000c6e6f : xor edx, edx ; jmp 0xc6e38
0x00000000000d1c8a : xor edx, edx ; jmp 0xd1c53
0x00000000000abf36 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000010921e : xor edx, edx ; mov edi, 0x1b ; call 0x35529
0x000000000009f37d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007c6f9 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000008d783 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000c8568 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001036d1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000186fa1 : xor esi, eax ; call qword ptr [rax - 0x2f000fcc]
0x00000000000e418e : xor esi, esi ; call 0x8f206
0x0000000000102901 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000001036d3 : xor esi, esi ; mov rbx, rax ; call rax
0x0000000000133163 : xor esi, esi ; mov rdi, r12 ; call 0x1f447
0x00000000001036f8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x000000000010371d : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103741 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103761 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000ab749 : xor esp, dword ptr [rsp + rcx] ; ret
0x00000000000ec9a4 : xor r10d, r10d ; cmp eax, 4 ; sete r10b ; jmp 0xec95c
0x000000000019c028 : xor r15d, edx ; jmp rsp
0x00000000000973ae : xor r8d, eax ; ret
0x00000000000766d5 : xor r8d, r8d ; call r12
0x000000000010fcb0 : xor r9b, bpl ; ret
0x000000000002a123 : xor r9d, r9d ; call r14
0x00000000000fc32d : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000020a5a : xor rax, qword ptr [0x30] ; call rax
0x000000000003517f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020a59 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003517e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000972fb : xor rax, r8 ; ret
0x000000000008b895 : xor rax, rax ; ret
0x000000000003a43a : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000129190 : xor rdi, qword ptr [0x30] ; call rax
0x000000000012918f : xor rdi, qword ptr fs:[0x30] ; call rax
0x000000000003040c : xor rdx, qword ptr [0x30] ; call rdx
0x000000000003040b : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 20884
